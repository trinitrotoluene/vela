// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    [SpacetimeDB.Type]
    [DataContract]
    public sealed partial class WorldGenBiomeDefinition
    {
        [DataMember(Name = "distance_to_sea_curve")]
        public WorldGenAnimationCurve DistanceToSeaCurve;
        [DataMember(Name = "distance_to_biomes_curve")]
        public WorldGenAnimationCurve DistanceToBiomesCurve;
        [DataMember(Name = "transition_length")]
        public int TransitionLength;
        [DataMember(Name = "noise_sea_multiplier")]
        public WorldGenAnimationCurve NoiseSeaMultiplier;
        [DataMember(Name = "noise_based_elevation_layers")]
        public System.Collections.Generic.List<WorldGenNoiseBasedElevationLayer> NoiseBasedElevationLayers;
        [DataMember(Name = "max_lake_depth")]
        public int MaxLakeDepth;
        [DataMember(Name = "terracing")]
        public bool Terracing;
        [DataMember(Name = "grass_density")]
        public int GrassDensity;
        [DataMember(Name = "lake_noise_specs")]
        public WorldGenNoiseSpecs LakeNoiseSpecs;
        [DataMember(Name = "lake_noise_threshold")]
        public float LakeNoiseThreshold;
        [DataMember(Name = "lake_depth_multiplier")]
        public int LakeDepthMultiplier;
        [DataMember(Name = "lake_depth_smoothing")]
        public float LakeDepthSmoothing;
        [DataMember(Name = "lake_sea_barriers")]
        public bool LakeSeaBarriers;
        [DataMember(Name = "river_generation_settings")]
        public WorldGenRiverGenerationSettings? RiverGenerationSettings;

        public WorldGenBiomeDefinition(
            WorldGenAnimationCurve DistanceToSeaCurve,
            WorldGenAnimationCurve DistanceToBiomesCurve,
            int TransitionLength,
            WorldGenAnimationCurve NoiseSeaMultiplier,
            System.Collections.Generic.List<WorldGenNoiseBasedElevationLayer> NoiseBasedElevationLayers,
            int MaxLakeDepth,
            bool Terracing,
            int GrassDensity,
            WorldGenNoiseSpecs LakeNoiseSpecs,
            float LakeNoiseThreshold,
            int LakeDepthMultiplier,
            float LakeDepthSmoothing,
            bool LakeSeaBarriers,
            WorldGenRiverGenerationSettings? RiverGenerationSettings
        )
        {
            this.DistanceToSeaCurve = DistanceToSeaCurve;
            this.DistanceToBiomesCurve = DistanceToBiomesCurve;
            this.TransitionLength = TransitionLength;
            this.NoiseSeaMultiplier = NoiseSeaMultiplier;
            this.NoiseBasedElevationLayers = NoiseBasedElevationLayers;
            this.MaxLakeDepth = MaxLakeDepth;
            this.Terracing = Terracing;
            this.GrassDensity = GrassDensity;
            this.LakeNoiseSpecs = LakeNoiseSpecs;
            this.LakeNoiseThreshold = LakeNoiseThreshold;
            this.LakeDepthMultiplier = LakeDepthMultiplier;
            this.LakeDepthSmoothing = LakeDepthSmoothing;
            this.LakeSeaBarriers = LakeSeaBarriers;
            this.RiverGenerationSettings = RiverGenerationSettings;
        }

        public WorldGenBiomeDefinition()
        {
            this.DistanceToSeaCurve = new();
            this.DistanceToBiomesCurve = new();
            this.NoiseSeaMultiplier = new();
            this.NoiseBasedElevationLayers = new();
            this.LakeNoiseSpecs = new();
        }
    }
}
