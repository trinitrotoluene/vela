// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    [SpacetimeDB.Type]
    [DataContract]
    public sealed partial class TransferPlayerMsg
    {
        [DataMember(Name = "original_location")]
        public FloatHexTileMessage OriginalLocation;
        [DataMember(Name = "destination_location")]
        public FloatHexTileMessage DestinationLocation;
        [DataMember(Name = "allow_cancel")]
        public bool AllowCancel;
        [DataMember(Name = "teleport_energy_cost")]
        public float TeleportEnergyCost;
        [DataMember(Name = "vehicle")]
        public DeployableState? Vehicle;
        [DataMember(Name = "vehicle_inventory")]
        public InventoryState? VehicleInventory;
        [DataMember(Name = "player_state")]
        public PlayerState PlayerState;
        [DataMember(Name = "user_state")]
        public UserState UserState;
        [DataMember(Name = "move_validation_strike_counter_state")]
        public MoveValidationStrikeCounterState MoveValidationStrikeCounterState;
        [DataMember(Name = "health_state")]
        public HealthState HealthState;
        [DataMember(Name = "stamina_state")]
        public StaminaState StaminaState;
        [DataMember(Name = "experience_state")]
        public ExperienceState ExperienceState;
        [DataMember(Name = "active_buff_state")]
        public ActiveBuffState ActiveBuffState;
        [DataMember(Name = "knowledge_achievement_state")]
        public KnowledgeAchievementState KnowledgeAchievementState;
        [DataMember(Name = "knowledge_battle_action_state")]
        public KnowledgeBattleActionState KnowledgeBattleActionState;
        [DataMember(Name = "knowledge_building_state")]
        public KnowledgeBuildingState KnowledgeBuildingState;
        [DataMember(Name = "knowledge_cargo_state")]
        public KnowledgeCargoState KnowledgeCargoState;
        [DataMember(Name = "knowledge_construction_state")]
        public KnowledgeConstructionState KnowledgeConstructionState;
        [DataMember(Name = "knowledge_resource_placement_state")]
        public KnowledgeResourcePlacementState KnowledgeResourcePlacementState;
        [DataMember(Name = "knowledge_craft_state")]
        public KnowledgeCraftState KnowledgeCraftState;
        [DataMember(Name = "knowledge_enemy_state")]
        public KnowledgeEnemyState KnowledgeEnemyState;
        [DataMember(Name = "knowledge_extract_state")]
        public KnowledgeExtractState KnowledgeExtractState;
        [DataMember(Name = "knowledge_item_state")]
        public KnowledgeItemState KnowledgeItemState;
        [DataMember(Name = "knowledge_lore_state")]
        public KnowledgeLoreState KnowledgeLoreState;
        [DataMember(Name = "knowledge_npc_state")]
        public KnowledgeNpcState KnowledgeNpcState;
        [DataMember(Name = "knowledge_resource_state")]
        public KnowledgeResourceState KnowledgeResourceState;
        [DataMember(Name = "knowledge_ruins_state")]
        public KnowledgeRuinsState KnowledgeRuinsState;
        [DataMember(Name = "knowledge_secondary_state")]
        public KnowledgeSecondaryState KnowledgeSecondaryState;
        [DataMember(Name = "knowledge_vault_state")]
        public KnowledgeVaultState KnowledgeVaultState;
        [DataMember(Name = "knowledge_deployable_state")]
        public KnowledgeDeployableState KnowledgeDeployableState;
        [DataMember(Name = "knowledge_paving_state")]
        public KnowledgePavingState KnowledgePavingState;
        [DataMember(Name = "knowledge_claim_state")]
        public KnowledgeClaimState KnowledgeClaimState;
        [DataMember(Name = "knowledge_pillar_shaping_state")]
        public KnowledgePillarShapingState KnowledgePillarShapingState;
        [DataMember(Name = "equipment_state")]
        public EquipmentState EquipmentState;
        [DataMember(Name = "inventory_state")]
        public System.Collections.Generic.List<InventoryState> InventoryState;
        [DataMember(Name = "character_stats_state")]
        public CharacterStatsState CharacterStatsState;
        [DataMember(Name = "player_username_state")]
        public PlayerUsernameState PlayerUsernameState;
        [DataMember(Name = "player_action_state")]
        public System.Collections.Generic.List<PlayerActionState> PlayerActionState;
        [DataMember(Name = "deployable_collectible_state")]
        public System.Collections.Generic.List<DeployableCollectibleState> DeployableCollectibleState;
        [DataMember(Name = "combat_state")]
        public CombatState CombatState;
        [DataMember(Name = "action_state")]
        public System.Collections.Generic.List<ActionState> ActionState;
        [DataMember(Name = "toolbar_state")]
        public System.Collections.Generic.List<ToolbarState> ToolbarState;
        [DataMember(Name = "attack_outcome_state")]
        public AttackOutcomeState AttackOutcomeState;
        [DataMember(Name = "vault_state")]
        public VaultState VaultState;
        [DataMember(Name = "exploration_chunks_state")]
        public ExplorationChunksState ExplorationChunksState;
        [DataMember(Name = "satiation_state")]
        public SatiationState SatiationState;
        [DataMember(Name = "player_prefs_state")]
        public PlayerPrefsState PlayerPrefsState;
        [DataMember(Name = "onboarding_state")]
        public OnboardingState OnboardingState;
        [DataMember(Name = "unclaimed_collectibles_state")]
        public UnclaimedCollectiblesState? UnclaimedCollectiblesState;
        [DataMember(Name = "teleportation_energy_state")]
        public TeleportationEnergyState TeleportationEnergyState;
        [DataMember(Name = "player_housing_state")]
        public PlayerHousingState? PlayerHousingState;
        [DataMember(Name = "traveler_task_states")]
        public System.Collections.Generic.List<TravelerTaskState> TravelerTaskStates;
        [DataMember(Name = "extract_outcome_state")]
        public ExtractOutcomeState ExtractOutcomeState;
        [DataMember(Name = "undeployed_deployable_states")]
        public System.Collections.Generic.List<DeployableState> UndeployedDeployableStates;

        public TransferPlayerMsg(
            FloatHexTileMessage OriginalLocation,
            FloatHexTileMessage DestinationLocation,
            bool AllowCancel,
            float TeleportEnergyCost,
            DeployableState? Vehicle,
            InventoryState? VehicleInventory,
            PlayerState PlayerState,
            UserState UserState,
            MoveValidationStrikeCounterState MoveValidationStrikeCounterState,
            HealthState HealthState,
            StaminaState StaminaState,
            ExperienceState ExperienceState,
            ActiveBuffState ActiveBuffState,
            KnowledgeAchievementState KnowledgeAchievementState,
            KnowledgeBattleActionState KnowledgeBattleActionState,
            KnowledgeBuildingState KnowledgeBuildingState,
            KnowledgeCargoState KnowledgeCargoState,
            KnowledgeConstructionState KnowledgeConstructionState,
            KnowledgeResourcePlacementState KnowledgeResourcePlacementState,
            KnowledgeCraftState KnowledgeCraftState,
            KnowledgeEnemyState KnowledgeEnemyState,
            KnowledgeExtractState KnowledgeExtractState,
            KnowledgeItemState KnowledgeItemState,
            KnowledgeLoreState KnowledgeLoreState,
            KnowledgeNpcState KnowledgeNpcState,
            KnowledgeResourceState KnowledgeResourceState,
            KnowledgeRuinsState KnowledgeRuinsState,
            KnowledgeSecondaryState KnowledgeSecondaryState,
            KnowledgeVaultState KnowledgeVaultState,
            KnowledgeDeployableState KnowledgeDeployableState,
            KnowledgePavingState KnowledgePavingState,
            KnowledgeClaimState KnowledgeClaimState,
            KnowledgePillarShapingState KnowledgePillarShapingState,
            EquipmentState EquipmentState,
            System.Collections.Generic.List<InventoryState> InventoryState,
            CharacterStatsState CharacterStatsState,
            PlayerUsernameState PlayerUsernameState,
            System.Collections.Generic.List<PlayerActionState> PlayerActionState,
            System.Collections.Generic.List<DeployableCollectibleState> DeployableCollectibleState,
            CombatState CombatState,
            System.Collections.Generic.List<ActionState> ActionState,
            System.Collections.Generic.List<ToolbarState> ToolbarState,
            AttackOutcomeState AttackOutcomeState,
            VaultState VaultState,
            ExplorationChunksState ExplorationChunksState,
            SatiationState SatiationState,
            PlayerPrefsState PlayerPrefsState,
            OnboardingState OnboardingState,
            UnclaimedCollectiblesState? UnclaimedCollectiblesState,
            TeleportationEnergyState TeleportationEnergyState,
            PlayerHousingState? PlayerHousingState,
            System.Collections.Generic.List<TravelerTaskState> TravelerTaskStates,
            ExtractOutcomeState ExtractOutcomeState,
            System.Collections.Generic.List<DeployableState> UndeployedDeployableStates
        )
        {
            this.OriginalLocation = OriginalLocation;
            this.DestinationLocation = DestinationLocation;
            this.AllowCancel = AllowCancel;
            this.TeleportEnergyCost = TeleportEnergyCost;
            this.Vehicle = Vehicle;
            this.VehicleInventory = VehicleInventory;
            this.PlayerState = PlayerState;
            this.UserState = UserState;
            this.MoveValidationStrikeCounterState = MoveValidationStrikeCounterState;
            this.HealthState = HealthState;
            this.StaminaState = StaminaState;
            this.ExperienceState = ExperienceState;
            this.ActiveBuffState = ActiveBuffState;
            this.KnowledgeAchievementState = KnowledgeAchievementState;
            this.KnowledgeBattleActionState = KnowledgeBattleActionState;
            this.KnowledgeBuildingState = KnowledgeBuildingState;
            this.KnowledgeCargoState = KnowledgeCargoState;
            this.KnowledgeConstructionState = KnowledgeConstructionState;
            this.KnowledgeResourcePlacementState = KnowledgeResourcePlacementState;
            this.KnowledgeCraftState = KnowledgeCraftState;
            this.KnowledgeEnemyState = KnowledgeEnemyState;
            this.KnowledgeExtractState = KnowledgeExtractState;
            this.KnowledgeItemState = KnowledgeItemState;
            this.KnowledgeLoreState = KnowledgeLoreState;
            this.KnowledgeNpcState = KnowledgeNpcState;
            this.KnowledgeResourceState = KnowledgeResourceState;
            this.KnowledgeRuinsState = KnowledgeRuinsState;
            this.KnowledgeSecondaryState = KnowledgeSecondaryState;
            this.KnowledgeVaultState = KnowledgeVaultState;
            this.KnowledgeDeployableState = KnowledgeDeployableState;
            this.KnowledgePavingState = KnowledgePavingState;
            this.KnowledgeClaimState = KnowledgeClaimState;
            this.KnowledgePillarShapingState = KnowledgePillarShapingState;
            this.EquipmentState = EquipmentState;
            this.InventoryState = InventoryState;
            this.CharacterStatsState = CharacterStatsState;
            this.PlayerUsernameState = PlayerUsernameState;
            this.PlayerActionState = PlayerActionState;
            this.DeployableCollectibleState = DeployableCollectibleState;
            this.CombatState = CombatState;
            this.ActionState = ActionState;
            this.ToolbarState = ToolbarState;
            this.AttackOutcomeState = AttackOutcomeState;
            this.VaultState = VaultState;
            this.ExplorationChunksState = ExplorationChunksState;
            this.SatiationState = SatiationState;
            this.PlayerPrefsState = PlayerPrefsState;
            this.OnboardingState = OnboardingState;
            this.UnclaimedCollectiblesState = UnclaimedCollectiblesState;
            this.TeleportationEnergyState = TeleportationEnergyState;
            this.PlayerHousingState = PlayerHousingState;
            this.TravelerTaskStates = TravelerTaskStates;
            this.ExtractOutcomeState = ExtractOutcomeState;
            this.UndeployedDeployableStates = UndeployedDeployableStates;
        }

        public TransferPlayerMsg()
        {
            this.OriginalLocation = new();
            this.DestinationLocation = new();
            this.PlayerState = new();
            this.UserState = new();
            this.MoveValidationStrikeCounterState = new();
            this.HealthState = new();
            this.StaminaState = new();
            this.ExperienceState = new();
            this.ActiveBuffState = new();
            this.KnowledgeAchievementState = new();
            this.KnowledgeBattleActionState = new();
            this.KnowledgeBuildingState = new();
            this.KnowledgeCargoState = new();
            this.KnowledgeConstructionState = new();
            this.KnowledgeResourcePlacementState = new();
            this.KnowledgeCraftState = new();
            this.KnowledgeEnemyState = new();
            this.KnowledgeExtractState = new();
            this.KnowledgeItemState = new();
            this.KnowledgeLoreState = new();
            this.KnowledgeNpcState = new();
            this.KnowledgeResourceState = new();
            this.KnowledgeRuinsState = new();
            this.KnowledgeSecondaryState = new();
            this.KnowledgeVaultState = new();
            this.KnowledgeDeployableState = new();
            this.KnowledgePavingState = new();
            this.KnowledgeClaimState = new();
            this.KnowledgePillarShapingState = new();
            this.EquipmentState = new();
            this.InventoryState = new();
            this.CharacterStatsState = new();
            this.PlayerUsernameState = new();
            this.PlayerActionState = new();
            this.DeployableCollectibleState = new();
            this.CombatState = new();
            this.ActionState = new();
            this.ToolbarState = new();
            this.AttackOutcomeState = new();
            this.VaultState = new();
            this.ExplorationChunksState = new();
            this.SatiationState = new();
            this.PlayerPrefsState = new();
            this.OnboardingState = new();
            this.TeleportationEnergyState = new();
            this.TravelerTaskStates = new();
            this.ExtractOutcomeState = new();
            this.UndeployedDeployableStates = new();
        }
    }
}
