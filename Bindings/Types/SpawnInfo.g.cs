// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    [SpacetimeDB.Type]
    [DataContract]
    public sealed partial class SpawnInfo
    {
        [DataMember(Name = "biome_index")]
        public ulong BiomeIndex;
        [DataMember(Name = "chance")]
        public float Chance;
        [DataMember(Name = "noise_offset_x")]
        public float NoiseOffsetX;
        [DataMember(Name = "noise_offset_y")]
        public float NoiseOffsetY;
        [DataMember(Name = "noise_threshold_bottom")]
        public float NoiseThresholdBottom;
        [DataMember(Name = "noise_threshold_top")]
        public float NoiseThresholdTop;
        [DataMember(Name = "noise_scale")]
        public float NoiseScale;
        [DataMember(Name = "noise_octaves")]
        public int NoiseOctaves;
        [DataMember(Name = "noise_persistance")]
        public float NoisePersistance;
        [DataMember(Name = "noise_lacunarity")]
        public float NoiseLacunarity;
        [DataMember(Name = "spawns_on_land")]
        public bool SpawnsOnLand;
        [DataMember(Name = "land_elevation_min")]
        public short LandElevationMin;
        [DataMember(Name = "land_elevation_max")]
        public short LandElevationMax;
        [DataMember(Name = "spawns_in_water")]
        public bool SpawnsInWater;
        [DataMember(Name = "water_depth_min")]
        public short WaterDepthMin;
        [DataMember(Name = "water_depth_max")]
        public short WaterDepthMax;
        [DataMember(Name = "spawns_on_uneven_terrain")]
        public bool SpawnsOnUnevenTerrain;

        public SpawnInfo(
            ulong BiomeIndex,
            float Chance,
            float NoiseOffsetX,
            float NoiseOffsetY,
            float NoiseThresholdBottom,
            float NoiseThresholdTop,
            float NoiseScale,
            int NoiseOctaves,
            float NoisePersistance,
            float NoiseLacunarity,
            bool SpawnsOnLand,
            short LandElevationMin,
            short LandElevationMax,
            bool SpawnsInWater,
            short WaterDepthMin,
            short WaterDepthMax,
            bool SpawnsOnUnevenTerrain
        )
        {
            this.BiomeIndex = BiomeIndex;
            this.Chance = Chance;
            this.NoiseOffsetX = NoiseOffsetX;
            this.NoiseOffsetY = NoiseOffsetY;
            this.NoiseThresholdBottom = NoiseThresholdBottom;
            this.NoiseThresholdTop = NoiseThresholdTop;
            this.NoiseScale = NoiseScale;
            this.NoiseOctaves = NoiseOctaves;
            this.NoisePersistance = NoisePersistance;
            this.NoiseLacunarity = NoiseLacunarity;
            this.SpawnsOnLand = SpawnsOnLand;
            this.LandElevationMin = LandElevationMin;
            this.LandElevationMax = LandElevationMax;
            this.SpawnsInWater = SpawnsInWater;
            this.WaterDepthMin = WaterDepthMin;
            this.WaterDepthMax = WaterDepthMax;
            this.SpawnsOnUnevenTerrain = SpawnsOnUnevenTerrain;
        }

        public SpawnInfo()
        {
        }
    }
}
