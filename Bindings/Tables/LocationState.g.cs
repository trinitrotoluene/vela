// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class LocationStateHandle : RemoteTableHandle<EventContext, LocationState>
        {
            protected override string RemoteTableName => "location_state";

            public sealed class ChunkIndexIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(LocationState row) => row.ChunkIndex;

                public ChunkIndexIndex(LocationStateHandle table) : base(table) { }
            }

            public readonly ChunkIndexIndex ChunkIndex;

            public sealed class DimensionIndex : BTreeIndexBase<uint>
            {
                protected override uint GetKey(LocationState row) => row.Dimension;

                public DimensionIndex(LocationStateHandle table) : base(table) { }
            }

            public readonly DimensionIndex Dimension;

            public sealed class EntityIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(LocationState row) => row.EntityId;

                public EntityIdUniqueIndex(LocationStateHandle table) : base(table) { }
            }

            public readonly EntityIdUniqueIndex EntityId;

            public sealed class XZChunkIndexIndex : BTreeIndexBase<(int X, int Z, ulong ChunkIndex)>
            {
                protected override (int X, int Z, ulong ChunkIndex) GetKey(LocationState row) => (row.X, row.Z, row.ChunkIndex);

                public XZChunkIndexIndex(LocationStateHandle table) : base(table) { }
            }

            public readonly XZChunkIndexIndex XZChunkIndex;

            internal LocationStateHandle(DbConnection conn) : base(conn)
            {
                ChunkIndex = new(this);
                Dimension = new(this);
                EntityId = new(this);
                XZChunkIndex = new(this);
            }

            protected override object GetPrimaryKey(LocationState row) => row.EntityId;
        }

        public readonly LocationStateHandle LocationState;
    }
}
