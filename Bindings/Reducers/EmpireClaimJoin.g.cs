// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void EmpireClaimJoinHandler(ReducerEventContext ctx, ulong buildingEntityId, ulong empireEntityId);
        public event EmpireClaimJoinHandler? OnEmpireClaimJoin;

        public void EmpireClaimJoin(ulong buildingEntityId, ulong empireEntityId)
        {
            conn.InternalCallReducer(new Reducer.EmpireClaimJoin(buildingEntityId, empireEntityId), this.SetCallReducerFlags.EmpireClaimJoinFlags);
        }

        public bool InvokeEmpireClaimJoin(ReducerEventContext ctx, Reducer.EmpireClaimJoin args)
        {
            if (OnEmpireClaimJoin == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnEmpireClaimJoin(
                ctx,
                args.BuildingEntityId,
                args.EmpireEntityId
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class EmpireClaimJoin : Reducer, IReducerArgs
        {
            [DataMember(Name = "building_entity_id")]
            public ulong BuildingEntityId;
            [DataMember(Name = "empire_entity_id")]
            public ulong EmpireEntityId;

            public EmpireClaimJoin(
                ulong BuildingEntityId,
                ulong EmpireEntityId
            )
            {
                this.BuildingEntityId = BuildingEntityId;
                this.EmpireEntityId = EmpireEntityId;
            }

            public EmpireClaimJoin()
            {
            }

            string IReducerArgs.ReducerName => "empire_claim_join";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags EmpireClaimJoinFlags;
        public void EmpireClaimJoin(CallReducerFlags flags) => EmpireClaimJoinFlags = flags;
    }
}
