// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    [SpacetimeDB.Type]
    [DataContract]
    public sealed partial class ParametersDesc
    {
        [DataMember(Name = "version")]
        public int Version;
        [DataMember(Name = "default_speed")]
        public System.Collections.Generic.List<MovementSpeed> DefaultSpeed;
        [DataMember(Name = "default_num_inventory_pockets")]
        public int DefaultNumInventoryPockets;
        [DataMember(Name = "skill_yield_power_exponent")]
        public float SkillYieldPowerExponent;
        [DataMember(Name = "skill_yield_log_base")]
        public float SkillYieldLogBase;
        [DataMember(Name = "skill_yield_cutoff_percent")]
        public float SkillYieldCutoffPercent;
        [DataMember(Name = "tech_time_power_exponent")]
        public float TechTimePowerExponent;
        [DataMember(Name = "tech_time_log_base")]
        public float TechTimeLogBase;
        [DataMember(Name = "min_seconds_to_passive_regen_health")]
        public int MinSecondsToPassiveRegenHealth;
        [DataMember(Name = "min_seconds_to_passive_regen_stamina")]
        public int MinSecondsToPassiveRegenStamina;
        [DataMember(Name = "repair_building_duration")]
        public int RepairBuildingDuration;
        [DataMember(Name = "repair_building_max_repair_percent")]
        public float RepairBuildingMaxRepairPercent;
        [DataMember(Name = "repair_building_show_damage_percent")]
        public float RepairBuildingShowDamagePercent;
        [DataMember(Name = "environment_debuff_tick_millis")]
        public int EnvironmentDebuffTickMillis;
        [DataMember(Name = "enemy_spawn_agent_wait_time")]
        public int EnemySpawnAgentWaitTime;
        [DataMember(Name = "discovery_range")]
        public int DiscoveryRange;
        [DataMember(Name = "max_build_range")]
        public int MaxBuildRange;
        [DataMember(Name = "deconstruct_default_time")]
        public float DeconstructDefaultTime;
        [DataMember(Name = "respawn_seconds")]
        public int RespawnSeconds;
        [DataMember(Name = "player_climb_height")]
        public float PlayerClimbHeight;
        [DataMember(Name = "player_jump_height")]
        public float PlayerJumpHeight;
        [DataMember(Name = "player_swim_height")]
        public float PlayerSwimHeight;
        [DataMember(Name = "daytime")]
        public int Daytime;
        [DataMember(Name = "nighttime")]
        public int Nighttime;
        [DataMember(Name = "aggro_range")]
        public int AggroRange;
        [DataMember(Name = "max_cargo_per_hex")]
        public int MaxCargoPerHex;
        [DataMember(Name = "resources_regen_loops")]
        public int ResourcesRegenLoops;
        [DataMember(Name = "selected_traveler_order_count")]
        public int SelectedTravelerOrderCount;
        [DataMember(Name = "resources_regen_tick_millis")]
        public int ResourcesRegenTickMillis;
        [DataMember(Name = "building_decay_tick_millis")]
        public int BuildingDecayTickMillis;
        [DataMember(Name = "max_traded_items")]
        public int MaxTradedItems;
        [DataMember(Name = "max_trade_distance_large_tiles")]
        public int MaxTradeDistanceLargeTiles;
        [DataMember(Name = "min_distance_between_claims")]
        public int MinDistanceBetweenClaims;
        [DataMember(Name = "combat_manager_tick_millis")]
        public int CombatManagerTickMillis;
        [DataMember(Name = "disengage_range")]
        public int DisengageRange;
        [DataMember(Name = "disengage_time_millis")]
        public int DisengageTimeMillis;
        [DataMember(Name = "action_slots")]
        public int ActionSlots;
        [DataMember(Name = "starting_supplies")]
        public int StartingSupplies;
        [DataMember(Name = "show_shield_bar_percent")]
        public float ShowShieldBarPercent;
        [DataMember(Name = "swim_sprint_speed_multiplier")]
        public float SwimSprintSpeedMultiplier;
        [DataMember(Name = "loot_chest_despawn_time_seconds")]
        public float LootChestDespawnTimeSeconds;
        [DataMember(Name = "deployable_disembark_max_elevation")]
        public int DeployableDisembarkMaxElevation;
        [DataMember(Name = "default_num_toolbelt_pockets")]
        public int DefaultNumToolbeltPockets;
        [DataMember(Name = "resource_growth_tick_rate_milliseconds")]
        public int ResourceGrowthTickRateMilliseconds;
        [DataMember(Name = "rent_deposit_days")]
        public int RentDepositDays;
        [DataMember(Name = "rent_collection_time_of_day")]
        public float RentCollectionTimeOfDay;
        [DataMember(Name = "rent_eviction_compensation")]
        public float RentEvictionCompensation;
        [DataMember(Name = "max_rental_deposit_days")]
        public int MaxRentalDepositDays;
        [DataMember(Name = "recommended_achievements")]
        public int RecommendedAchievements;
        [DataMember(Name = "empire_decay_tick_millis")]
        public int EmpireDecayTickMillis;
        [DataMember(Name = "empire_siege_tick_millis")]
        public int EmpireSiegeTickMillis;
        [DataMember(Name = "empire_siege_raise_pct")]
        public float EmpireSiegeRaisePct;
        [DataMember(Name = "empire_default_nobility_threshold")]
        public int EmpireDefaultNobilityThreshold;
        [DataMember(Name = "empire_shard_cost")]
        public int EmpireShardCost;
        [DataMember(Name = "empire_starting_shards")]
        public int EmpireStartingShards;
        [DataMember(Name = "empire_node_max_energy")]
        public int EmpireNodeMaxEnergy;
        [DataMember(Name = "empire_node_starting_energy")]
        public int EmpireNodeStartingEnergy;
        [DataMember(Name = "empire_min_siege_distance")]
        public int EmpireMinSiegeDistance;
        [DataMember(Name = "empire_max_siege_distance")]
        public int EmpireMaxSiegeDistance;
        [DataMember(Name = "daily_shards")]
        public int DailyShards;
        [DataMember(Name = "hexite_capsule_supply_cost")]
        public int HexiteCapsuleSupplyCost;
        [DataMember(Name = "hexite_capsule_shard_cost")]
        public int HexiteCapsuleShardCost;
        [DataMember(Name = "hexite_capsule_craft_time_seconds")]
        public int HexiteCapsuleCraftTimeSeconds;
        [DataMember(Name = "crafting_lock_duration_secs")]
        public int CraftingLockDurationSecs;
        [DataMember(Name = "num_toolbars")]
        public int NumToolbars;
        [DataMember(Name = "starving_tick_millis")]
        public int StarvingTickMillis;
        [DataMember(Name = "starving_damage")]
        public float StarvingDamage;
        [DataMember(Name = "claim_stability_param_m")]
        public float ClaimStabilityParamM;
        [DataMember(Name = "claim_stability_param_b")]
        public float ClaimStabilityParamB;
        [DataMember(Name = "player_regen_tick_millis")]
        public int PlayerRegenTickMillis;
        [DataMember(Name = "enemy_regen_tick_millis")]
        public int EnemyRegenTickMillis;
        [DataMember(Name = "teleportation_energy_regen_tick_millis")]
        public int TeleportationEnergyRegenTickMillis;
        [DataMember(Name = "auto_respawn_attempts")]
        public int AutoRespawnAttempts;
        [DataMember(Name = "player_pathfinding_id")]
        public int PlayerPathfindingId;
        [DataMember(Name = "nearby_flame_buff_id")]
        public int NearbyFlameBuffId;
        [DataMember(Name = "floating_origin_distance_threshold")]
        public int FloatingOriginDistanceThreshold;
        [DataMember(Name = "withdraw_from_deployables_range")]
        public int WithdrawFromDeployablesRange;
        [DataMember(Name = "deposit_to_deployables_range")]
        public int DepositToDeployablesRange;
        [DataMember(Name = "sign_in_aggro_immunity")]
        public int SignInAggroImmunity;
        [DataMember(Name = "respawn_aggro_immunity")]
        public int RespawnAggroImmunity;
        [DataMember(Name = "new_user_aggro_immunity")]
        public int NewUserAggroImmunity;
        [DataMember(Name = "terraform_experience_per_progress")]
        public float TerraformExperiencePerProgress;
        [DataMember(Name = "dropped_inventory_ownership_seconds")]
        public int DroppedInventoryOwnershipSeconds;
        [DataMember(Name = "dropped_inventory_despawn_seconds")]
        public int DroppedInventoryDespawnSeconds;
        [DataMember(Name = "enemy_loot_ownership_seconds")]
        public int EnemyLootOwnershipSeconds;
        [DataMember(Name = "traveler_tasks_per_npc")]
        public int TravelerTasksPerNpc;
        [DataMember(Name = "traveler_tasks_times_of_day")]
        public System.Collections.Generic.List<int> TravelerTasksTimesOfDay;
        [DataMember(Name = "teleport_channel_time_home")]
        public float TeleportChannelTimeHome;
        [DataMember(Name = "teleport_channel_time_waystone")]
        public float TeleportChannelTimeWaystone;
        [DataMember(Name = "teleportation_home_energy_cost")]
        public float TeleportationHomeEnergyCost;
        [DataMember(Name = "teleportation_base_energy_cost")]
        public float TeleportationBaseEnergyCost;
        [DataMember(Name = "teleportation_cost_per_large_tile")]
        public float TeleportationCostPerLargeTile;
        [DataMember(Name = "teleportation_full_inventory_multiplier")]
        public float TeleportationFullInventoryMultiplier;
        [DataMember(Name = "region_crossover_distance_large_tiles")]
        public int RegionCrossoverDistanceLargeTiles;
        [DataMember(Name = "item_recovery_range")]
        public int ItemRecoveryRange;
        [DataMember(Name = "quick_board_range")]
        public float QuickBoardRange;
        [DataMember(Name = "duel_range")]
        public float DuelRange;
        [DataMember(Name = "duel_out_of_range_grace_period_millis")]
        public int DuelOutOfRangeGracePeriodMillis;
        [DataMember(Name = "player_housing_same_region_move_time_minutes")]
        public int PlayerHousingSameRegionMoveTimeMinutes;
        [DataMember(Name = "player_housing_eviction_time_minutes")]
        public int PlayerHousingEvictionTimeMinutes;
        [DataMember(Name = "player_housing_income_time_of_day")]
        public float PlayerHousingIncomeTimeOfDay;

        public ParametersDesc(
            int Version,
            System.Collections.Generic.List<MovementSpeed> DefaultSpeed,
            int DefaultNumInventoryPockets,
            float SkillYieldPowerExponent,
            float SkillYieldLogBase,
            float SkillYieldCutoffPercent,
            float TechTimePowerExponent,
            float TechTimeLogBase,
            int MinSecondsToPassiveRegenHealth,
            int MinSecondsToPassiveRegenStamina,
            int RepairBuildingDuration,
            float RepairBuildingMaxRepairPercent,
            float RepairBuildingShowDamagePercent,
            int EnvironmentDebuffTickMillis,
            int EnemySpawnAgentWaitTime,
            int DiscoveryRange,
            int MaxBuildRange,
            float DeconstructDefaultTime,
            int RespawnSeconds,
            float PlayerClimbHeight,
            float PlayerJumpHeight,
            float PlayerSwimHeight,
            int Daytime,
            int Nighttime,
            int AggroRange,
            int MaxCargoPerHex,
            int ResourcesRegenLoops,
            int SelectedTravelerOrderCount,
            int ResourcesRegenTickMillis,
            int BuildingDecayTickMillis,
            int MaxTradedItems,
            int MaxTradeDistanceLargeTiles,
            int MinDistanceBetweenClaims,
            int CombatManagerTickMillis,
            int DisengageRange,
            int DisengageTimeMillis,
            int ActionSlots,
            int StartingSupplies,
            float ShowShieldBarPercent,
            float SwimSprintSpeedMultiplier,
            float LootChestDespawnTimeSeconds,
            int DeployableDisembarkMaxElevation,
            int DefaultNumToolbeltPockets,
            int ResourceGrowthTickRateMilliseconds,
            int RentDepositDays,
            float RentCollectionTimeOfDay,
            float RentEvictionCompensation,
            int MaxRentalDepositDays,
            int RecommendedAchievements,
            int EmpireDecayTickMillis,
            int EmpireSiegeTickMillis,
            float EmpireSiegeRaisePct,
            int EmpireDefaultNobilityThreshold,
            int EmpireShardCost,
            int EmpireStartingShards,
            int EmpireNodeMaxEnergy,
            int EmpireNodeStartingEnergy,
            int EmpireMinSiegeDistance,
            int EmpireMaxSiegeDistance,
            int DailyShards,
            int HexiteCapsuleSupplyCost,
            int HexiteCapsuleShardCost,
            int HexiteCapsuleCraftTimeSeconds,
            int CraftingLockDurationSecs,
            int NumToolbars,
            int StarvingTickMillis,
            float StarvingDamage,
            float ClaimStabilityParamM,
            float ClaimStabilityParamB,
            int PlayerRegenTickMillis,
            int EnemyRegenTickMillis,
            int TeleportationEnergyRegenTickMillis,
            int AutoRespawnAttempts,
            int PlayerPathfindingId,
            int NearbyFlameBuffId,
            int FloatingOriginDistanceThreshold,
            int WithdrawFromDeployablesRange,
            int DepositToDeployablesRange,
            int SignInAggroImmunity,
            int RespawnAggroImmunity,
            int NewUserAggroImmunity,
            float TerraformExperiencePerProgress,
            int DroppedInventoryOwnershipSeconds,
            int DroppedInventoryDespawnSeconds,
            int EnemyLootOwnershipSeconds,
            int TravelerTasksPerNpc,
            System.Collections.Generic.List<int> TravelerTasksTimesOfDay,
            float TeleportChannelTimeHome,
            float TeleportChannelTimeWaystone,
            float TeleportationHomeEnergyCost,
            float TeleportationBaseEnergyCost,
            float TeleportationCostPerLargeTile,
            float TeleportationFullInventoryMultiplier,
            int RegionCrossoverDistanceLargeTiles,
            int ItemRecoveryRange,
            float QuickBoardRange,
            float DuelRange,
            int DuelOutOfRangeGracePeriodMillis,
            int PlayerHousingSameRegionMoveTimeMinutes,
            int PlayerHousingEvictionTimeMinutes,
            float PlayerHousingIncomeTimeOfDay
        )
        {
            this.Version = Version;
            this.DefaultSpeed = DefaultSpeed;
            this.DefaultNumInventoryPockets = DefaultNumInventoryPockets;
            this.SkillYieldPowerExponent = SkillYieldPowerExponent;
            this.SkillYieldLogBase = SkillYieldLogBase;
            this.SkillYieldCutoffPercent = SkillYieldCutoffPercent;
            this.TechTimePowerExponent = TechTimePowerExponent;
            this.TechTimeLogBase = TechTimeLogBase;
            this.MinSecondsToPassiveRegenHealth = MinSecondsToPassiveRegenHealth;
            this.MinSecondsToPassiveRegenStamina = MinSecondsToPassiveRegenStamina;
            this.RepairBuildingDuration = RepairBuildingDuration;
            this.RepairBuildingMaxRepairPercent = RepairBuildingMaxRepairPercent;
            this.RepairBuildingShowDamagePercent = RepairBuildingShowDamagePercent;
            this.EnvironmentDebuffTickMillis = EnvironmentDebuffTickMillis;
            this.EnemySpawnAgentWaitTime = EnemySpawnAgentWaitTime;
            this.DiscoveryRange = DiscoveryRange;
            this.MaxBuildRange = MaxBuildRange;
            this.DeconstructDefaultTime = DeconstructDefaultTime;
            this.RespawnSeconds = RespawnSeconds;
            this.PlayerClimbHeight = PlayerClimbHeight;
            this.PlayerJumpHeight = PlayerJumpHeight;
            this.PlayerSwimHeight = PlayerSwimHeight;
            this.Daytime = Daytime;
            this.Nighttime = Nighttime;
            this.AggroRange = AggroRange;
            this.MaxCargoPerHex = MaxCargoPerHex;
            this.ResourcesRegenLoops = ResourcesRegenLoops;
            this.SelectedTravelerOrderCount = SelectedTravelerOrderCount;
            this.ResourcesRegenTickMillis = ResourcesRegenTickMillis;
            this.BuildingDecayTickMillis = BuildingDecayTickMillis;
            this.MaxTradedItems = MaxTradedItems;
            this.MaxTradeDistanceLargeTiles = MaxTradeDistanceLargeTiles;
            this.MinDistanceBetweenClaims = MinDistanceBetweenClaims;
            this.CombatManagerTickMillis = CombatManagerTickMillis;
            this.DisengageRange = DisengageRange;
            this.DisengageTimeMillis = DisengageTimeMillis;
            this.ActionSlots = ActionSlots;
            this.StartingSupplies = StartingSupplies;
            this.ShowShieldBarPercent = ShowShieldBarPercent;
            this.SwimSprintSpeedMultiplier = SwimSprintSpeedMultiplier;
            this.LootChestDespawnTimeSeconds = LootChestDespawnTimeSeconds;
            this.DeployableDisembarkMaxElevation = DeployableDisembarkMaxElevation;
            this.DefaultNumToolbeltPockets = DefaultNumToolbeltPockets;
            this.ResourceGrowthTickRateMilliseconds = ResourceGrowthTickRateMilliseconds;
            this.RentDepositDays = RentDepositDays;
            this.RentCollectionTimeOfDay = RentCollectionTimeOfDay;
            this.RentEvictionCompensation = RentEvictionCompensation;
            this.MaxRentalDepositDays = MaxRentalDepositDays;
            this.RecommendedAchievements = RecommendedAchievements;
            this.EmpireDecayTickMillis = EmpireDecayTickMillis;
            this.EmpireSiegeTickMillis = EmpireSiegeTickMillis;
            this.EmpireSiegeRaisePct = EmpireSiegeRaisePct;
            this.EmpireDefaultNobilityThreshold = EmpireDefaultNobilityThreshold;
            this.EmpireShardCost = EmpireShardCost;
            this.EmpireStartingShards = EmpireStartingShards;
            this.EmpireNodeMaxEnergy = EmpireNodeMaxEnergy;
            this.EmpireNodeStartingEnergy = EmpireNodeStartingEnergy;
            this.EmpireMinSiegeDistance = EmpireMinSiegeDistance;
            this.EmpireMaxSiegeDistance = EmpireMaxSiegeDistance;
            this.DailyShards = DailyShards;
            this.HexiteCapsuleSupplyCost = HexiteCapsuleSupplyCost;
            this.HexiteCapsuleShardCost = HexiteCapsuleShardCost;
            this.HexiteCapsuleCraftTimeSeconds = HexiteCapsuleCraftTimeSeconds;
            this.CraftingLockDurationSecs = CraftingLockDurationSecs;
            this.NumToolbars = NumToolbars;
            this.StarvingTickMillis = StarvingTickMillis;
            this.StarvingDamage = StarvingDamage;
            this.ClaimStabilityParamM = ClaimStabilityParamM;
            this.ClaimStabilityParamB = ClaimStabilityParamB;
            this.PlayerRegenTickMillis = PlayerRegenTickMillis;
            this.EnemyRegenTickMillis = EnemyRegenTickMillis;
            this.TeleportationEnergyRegenTickMillis = TeleportationEnergyRegenTickMillis;
            this.AutoRespawnAttempts = AutoRespawnAttempts;
            this.PlayerPathfindingId = PlayerPathfindingId;
            this.NearbyFlameBuffId = NearbyFlameBuffId;
            this.FloatingOriginDistanceThreshold = FloatingOriginDistanceThreshold;
            this.WithdrawFromDeployablesRange = WithdrawFromDeployablesRange;
            this.DepositToDeployablesRange = DepositToDeployablesRange;
            this.SignInAggroImmunity = SignInAggroImmunity;
            this.RespawnAggroImmunity = RespawnAggroImmunity;
            this.NewUserAggroImmunity = NewUserAggroImmunity;
            this.TerraformExperiencePerProgress = TerraformExperiencePerProgress;
            this.DroppedInventoryOwnershipSeconds = DroppedInventoryOwnershipSeconds;
            this.DroppedInventoryDespawnSeconds = DroppedInventoryDespawnSeconds;
            this.EnemyLootOwnershipSeconds = EnemyLootOwnershipSeconds;
            this.TravelerTasksPerNpc = TravelerTasksPerNpc;
            this.TravelerTasksTimesOfDay = TravelerTasksTimesOfDay;
            this.TeleportChannelTimeHome = TeleportChannelTimeHome;
            this.TeleportChannelTimeWaystone = TeleportChannelTimeWaystone;
            this.TeleportationHomeEnergyCost = TeleportationHomeEnergyCost;
            this.TeleportationBaseEnergyCost = TeleportationBaseEnergyCost;
            this.TeleportationCostPerLargeTile = TeleportationCostPerLargeTile;
            this.TeleportationFullInventoryMultiplier = TeleportationFullInventoryMultiplier;
            this.RegionCrossoverDistanceLargeTiles = RegionCrossoverDistanceLargeTiles;
            this.ItemRecoveryRange = ItemRecoveryRange;
            this.QuickBoardRange = QuickBoardRange;
            this.DuelRange = DuelRange;
            this.DuelOutOfRangeGracePeriodMillis = DuelOutOfRangeGracePeriodMillis;
            this.PlayerHousingSameRegionMoveTimeMinutes = PlayerHousingSameRegionMoveTimeMinutes;
            this.PlayerHousingEvictionTimeMinutes = PlayerHousingEvictionTimeMinutes;
            this.PlayerHousingIncomeTimeOfDay = PlayerHousingIncomeTimeOfDay;
        }

        public ParametersDesc()
        {
            this.DefaultSpeed = new();
            this.TravelerTasksTimesOfDay = new();
        }
    }
}
