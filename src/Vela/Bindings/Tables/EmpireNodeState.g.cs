// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class EmpireNodeStateHandle : RemoteTableHandle<EventContext, EmpireNodeState>
        {
            protected override string RemoteTableName => "empire_node_state";

            public sealed class ActiveIndex : BTreeIndexBase<bool>
            {
                protected override bool GetKey(EmpireNodeState row) => row.Active;

                public ActiveIndex(EmpireNodeStateHandle table) : base(table) { }
            }

            public readonly ActiveIndex Active;

            public sealed class ChunkIndexIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(EmpireNodeState row) => row.ChunkIndex;

                public ChunkIndexIndex(EmpireNodeStateHandle table) : base(table) { }
            }

            public readonly ChunkIndexIndex ChunkIndex;

            public sealed class EmpireEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(EmpireNodeState row) => row.EmpireEntityId;

                public EmpireEntityIdIndex(EmpireNodeStateHandle table) : base(table) { }
            }

            public readonly EmpireEntityIdIndex EmpireEntityId;

            public sealed class EntityIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(EmpireNodeState row) => row.EntityId;

                public EntityIdUniqueIndex(EmpireNodeStateHandle table) : base(table) { }
            }

            public readonly EntityIdUniqueIndex EntityId;

            internal EmpireNodeStateHandle(DbConnection conn) : base(conn)
            {
                Active = new(this);
                ChunkIndex = new(this);
                EmpireEntityId = new(this);
                EntityId = new(this);
            }

            protected override object GetPrimaryKey(EmpireNodeState row) => row.EntityId;
        }

        public readonly EmpireNodeStateHandle EmpireNodeState;
    }
}
