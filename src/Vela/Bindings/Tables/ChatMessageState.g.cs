// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class ChatMessageStateHandle : RemoteTableHandle<EventContext, ChatMessageState>
        {
            protected override string RemoteTableName => "chat_message_state";

            public sealed class ChannelAndTargetIdIndex : BTreeIndexBase<(int ChannelId, ulong TargetId, int Timestamp)>
            {
                protected override (int ChannelId, ulong TargetId, int Timestamp) GetKey(ChatMessageState row) => (row.ChannelId, row.TargetId, row.Timestamp);

                public ChannelAndTargetIdIndex(ChatMessageStateHandle table) : base(table) { }
            }

            public readonly ChannelAndTargetIdIndex ChannelAndTargetId;

            public sealed class ChannelIdIndex : BTreeIndexBase<(int ChannelId, int Timestamp)>
            {
                protected override (int ChannelId, int Timestamp) GetKey(ChatMessageState row) => (row.ChannelId, row.Timestamp);

                public ChannelIdIndex(ChatMessageStateHandle table) : base(table) { }
            }

            public readonly ChannelIdIndex ChannelId;

            public sealed class EntityIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(ChatMessageState row) => row.EntityId;

                public EntityIdUniqueIndex(ChatMessageStateHandle table) : base(table) { }
            }

            public readonly EntityIdUniqueIndex EntityId;

            public sealed class OwnerEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(ChatMessageState row) => row.OwnerEntityId;

                public OwnerEntityIdIndex(ChatMessageStateHandle table) : base(table) { }
            }

            public readonly OwnerEntityIdIndex OwnerEntityId;

            internal ChatMessageStateHandle(DbConnection conn) : base(conn)
            {
                ChannelAndTargetId = new(this);
                ChannelId = new(this);
                EntityId = new(this);
                OwnerEntityId = new(this);
            }

            protected override object GetPrimaryKey(ChatMessageState row) => row.EntityId;
        }

        public readonly ChatMessageStateHandle ChatMessageState;
    }
}
