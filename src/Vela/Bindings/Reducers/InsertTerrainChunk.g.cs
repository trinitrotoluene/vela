// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void InsertTerrainChunkHandler(ReducerEventContext ctx, TerrainChunkState terrainChunk, System.Collections.Generic.List<WorldGenGeneratedBuilding> buildings, System.Collections.Generic.List<WorldGenGeneratedResourceDeposit> resources);
        public event InsertTerrainChunkHandler? OnInsertTerrainChunk;

        public void InsertTerrainChunk(TerrainChunkState terrainChunk, System.Collections.Generic.List<WorldGenGeneratedBuilding> buildings, System.Collections.Generic.List<WorldGenGeneratedResourceDeposit> resources)
        {
            conn.InternalCallReducer(new Reducer.InsertTerrainChunk(terrainChunk, buildings, resources), this.SetCallReducerFlags.InsertTerrainChunkFlags);
        }

        public bool InvokeInsertTerrainChunk(ReducerEventContext ctx, Reducer.InsertTerrainChunk args)
        {
            if (OnInsertTerrainChunk == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnInsertTerrainChunk(
                ctx,
                args.TerrainChunk,
                args.Buildings,
                args.Resources
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class InsertTerrainChunk : Reducer, IReducerArgs
        {
            [DataMember(Name = "terrain_chunk")]
            public TerrainChunkState TerrainChunk;
            [DataMember(Name = "buildings")]
            public System.Collections.Generic.List<WorldGenGeneratedBuilding> Buildings;
            [DataMember(Name = "resources")]
            public System.Collections.Generic.List<WorldGenGeneratedResourceDeposit> Resources;

            public InsertTerrainChunk(
                TerrainChunkState TerrainChunk,
                System.Collections.Generic.List<WorldGenGeneratedBuilding> Buildings,
                System.Collections.Generic.List<WorldGenGeneratedResourceDeposit> Resources
            )
            {
                this.TerrainChunk = TerrainChunk;
                this.Buildings = Buildings;
                this.Resources = Resources;
            }

            public InsertTerrainChunk()
            {
                this.TerrainChunk = new();
                this.Buildings = new();
                this.Resources = new();
            }

            string IReducerArgs.ReducerName => "insert_terrain_chunk";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags InsertTerrainChunkFlags;
        public void InsertTerrainChunk(CallReducerFlags flags) => InsertTerrainChunkFlags = flags;
    }
}
