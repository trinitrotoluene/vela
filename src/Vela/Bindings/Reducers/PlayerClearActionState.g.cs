// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void PlayerClearActionStateHandler(ReducerEventContext ctx, ulong actorId, PlayerActionType currentAction, PlayerActionLayer layer, PlayerActionResult lastActionResult);
        public event PlayerClearActionStateHandler? OnPlayerClearActionState;

        public void PlayerClearActionState(ulong actorId, PlayerActionType currentAction, PlayerActionLayer layer, PlayerActionResult lastActionResult)
        {
            conn.InternalCallReducer(new Reducer.PlayerClearActionState(actorId, currentAction, layer, lastActionResult), this.SetCallReducerFlags.PlayerClearActionStateFlags);
        }

        public bool InvokePlayerClearActionState(ReducerEventContext ctx, Reducer.PlayerClearActionState args)
        {
            if (OnPlayerClearActionState == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnPlayerClearActionState(
                ctx,
                args.ActorId,
                args.CurrentAction,
                args.Layer,
                args.LastActionResult
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class PlayerClearActionState : Reducer, IReducerArgs
        {
            [DataMember(Name = "actor_id")]
            public ulong ActorId;
            [DataMember(Name = "current_action")]
            public PlayerActionType CurrentAction;
            [DataMember(Name = "layer")]
            public PlayerActionLayer Layer;
            [DataMember(Name = "last_action_result")]
            public PlayerActionResult LastActionResult;

            public PlayerClearActionState(
                ulong ActorId,
                PlayerActionType CurrentAction,
                PlayerActionLayer Layer,
                PlayerActionResult LastActionResult
            )
            {
                this.ActorId = ActorId;
                this.CurrentAction = CurrentAction;
                this.Layer = Layer;
                this.LastActionResult = LastActionResult;
            }

            public PlayerClearActionState()
            {
            }

            string IReducerArgs.ReducerName => "player_clear_action_state";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags PlayerClearActionStateFlags;
        public void PlayerClearActionState(CallReducerFlags flags) => PlayerClearActionStateFlags = flags;
    }
}
