// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void ImportHerdCacheHandler(ReducerEventContext ctx, System.Collections.Generic.List<HerdState> records);
        public event ImportHerdCacheHandler? OnImportHerdCache;

        public void ImportHerdCache(System.Collections.Generic.List<HerdState> records)
        {
            conn.InternalCallReducer(new Reducer.ImportHerdCache(records), this.SetCallReducerFlags.ImportHerdCacheFlags);
        }

        public bool InvokeImportHerdCache(ReducerEventContext ctx, Reducer.ImportHerdCache args)
        {
            if (OnImportHerdCache == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnImportHerdCache(
                ctx,
                args.Records
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class ImportHerdCache : Reducer, IReducerArgs
        {
            [DataMember(Name = "records")]
            public System.Collections.Generic.List<HerdState> Records;

            public ImportHerdCache(System.Collections.Generic.List<HerdState> Records)
            {
                this.Records = Records;
            }

            public ImportHerdCache()
            {
                this.Records = new();
            }

            string IReducerArgs.ReducerName => "import_herd_cache";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags ImportHerdCacheFlags;
        public void ImportHerdCache(CallReducerFlags flags) => ImportHerdCacheFlags = flags;
    }
}
