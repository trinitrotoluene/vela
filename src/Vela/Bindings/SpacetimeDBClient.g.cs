// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit 080c501f238afc5fc0ccaedf8742ff4fe306727a).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        internal RemoteReducers(DbConnection conn, SetReducerFlags flags) : base(conn) => SetCallReducerFlags = flags;
        internal readonly SetReducerFlags SetCallReducerFlags;
        internal event Action<ReducerEventContext, Exception>? InternalOnUnhandledReducerError;
    }

    public sealed partial class RemoteTables : RemoteTablesBase
    {
        public RemoteTables(DbConnection conn)
        {
            AddTable(AIDebugState = new(conn));
            AddTable(AchievementDesc = new(conn));
            AddTable(ActionState = new(conn));
            AddTable(ActiveBuffState = new(conn));
            AddTable(AdminBroadcast = new(conn));
            AddTable(AdminClearResourceTimer = new(conn));
            AddTable(AdminRestorePlayerStateTimer = new(conn));
            AddTable(AlertDesc = new(conn));
            AddTable(AlertState = new(conn));
            AddTable(AttachedHerdsState = new(conn));
            AddTable(AttackImpactTimer = new(conn));
            AddTable(AttackOutcomeState = new(conn));
            AddTable(AttackTimer = new(conn));
            AddTable(AutoClaimState = new(conn));
            AddTable(AutoLogoutLoopTimer = new(conn));
            AddTable(BarterStallState = new(conn));
            AddTable(BiomeDesc = new(conn));
            AddTable(BlockedIdentity = new(conn));
            AddTable(BuffDesc = new(conn));
            AddTable(BuffTypeDesc = new(conn));
            AddTable(BuildingClaimDesc = new(conn));
            AddTable(BuildingDecayLoopTimer = new(conn));
            AddTable(BuildingDesc = new(conn));
            AddTable(BuildingDespawnTimer = new(conn));
            AddTable(BuildingFunctionTypeMappingDesc = new(conn));
            AddTable(BuildingNicknameState = new(conn));
            AddTable(BuildingPortalDesc = new(conn));
            AddTable(BuildingRepairsDesc = new(conn));
            AddTable(BuildingSpawnDesc = new(conn));
            AddTable(BuildingState = new(conn));
            AddTable(BuildingTypeDesc = new(conn));
            AddTable(BuyOrderState = new(conn));
            AddTable(CargoDesc = new(conn));
            AddTable(CharacterStatDesc = new(conn));
            AddTable(CharacterStatsState = new(conn));
            AddTable(ChatCleanupTimer = new(conn));
            AddTable(ChatMessageState = new(conn));
            AddTable(ChestRarityDesc = new(conn));
            AddTable(ClaimLocalState = new(conn));
            AddTable(ClaimMemberState = new(conn));
            AddTable(ClaimRecruitmentState = new(conn));
            AddTable(ClaimState = new(conn));
            AddTable(ClaimTechDesc = new(conn));
            AddTable(ClaimTechState = new(conn));
            AddTable(ClaimTechUnlockTimer = new(conn));
            AddTable(ClaimTileCost = new(conn));
            AddTable(ClaimTileState = new(conn));
            AddTable(ClimbRequirementDesc = new(conn));
            AddTable(ClosedListingState = new(conn));
            AddTable(ClothingDesc = new(conn));
            AddTable(CollectStatsTimer = new(conn));
            AddTable(CollectibleDesc = new(conn));
            AddTable(CombatActionDesc = new(conn));
            AddTable(CombatState = new(conn));
            AddTable(Config = new(conn));
            AddTable(ConstructionRecipeDesc = new(conn));
            AddTable(CraftingRecipeDesc = new(conn));
            AddTable(DayNightLoopTimer = new(conn));
            AddTable(DeconstructionRecipeDesc = new(conn));
            AddTable(DeployableCollectibleState = new(conn));
            AddTable(DeployableDesc = new(conn));
            AddTable(DeployableDismountTimer = new(conn));
            AddTable(DeployableState = new(conn));
            AddTable(DestroyDimensionNetworkTimer = new(conn));
            AddTable(Developer = new(conn));
            AddTable(DimensionDescriptionState = new(conn));
            AddTable(DimensionNetworkState = new(conn));
            AddTable(DistantVisibleEntity = new(conn));
            AddTable(DistantVisibleEntityDesc = new(conn));
            AddTable(DroppedInventoryDespawnTimer = new(conn));
            AddTable(DroppedInventoryOwnershipTimer = new(conn));
            AddTable(DroppedInventoryState = new(conn));
            AddTable(DuelAgentTimer = new(conn));
            AddTable(DuelDespawnTimer = new(conn));
            AddTable(DuelState = new(conn));
            AddTable(ElevatorDesc = new(conn));
            AddTable(EmoteDesc = new(conn));
            AddTable(EmpireChunkState = new(conn));
            AddTable(EmpireColorDesc = new(conn));
            AddTable(EmpireExpansionState = new(conn));
            AddTable(EmpireIconDesc = new(conn));
            AddTable(EmpireNodeSiegeState = new(conn));
            AddTable(EmpireNodeState = new(conn));
            AddTable(EmpireNotificationDesc = new(conn));
            AddTable(EmpirePlayerDataState = new(conn));
            AddTable(EmpireRankDesc = new(conn));
            AddTable(EmpireRankState = new(conn));
            AddTable(EmpireSettlementState = new(conn));
            AddTable(EmpireState = new(conn));
            AddTable(EmpireSuppliesDesc = new(conn));
            AddTable(EmpireTerritoryDesc = new(conn));
            AddTable(EndGracePeriodTimer = new(conn));
            AddTable(EnemyAiParamsDesc = new(conn));
            AddTable(EnemyDesc = new(conn));
            AddTable(EnemyDespawnTimer = new(conn));
            AddTable(EnemyMobMonitorState = new(conn));
            AddTable(EnemyRegenLoopTimer = new(conn));
            AddTable(EnemyState = new(conn));
            AddTable(EnvironmentDebuffDesc = new(conn));
            AddTable(EnvironmentDebuffLoopTimer = new(conn));
            AddTable(EquipmentDesc = new(conn));
            AddTable(EquipmentState = new(conn));
            AddTable(ExperienceState = new(conn));
            AddTable(ExplorationChunksState = new(conn));
            AddTable(ExtractOutcomeState = new(conn));
            AddTable(ExtractionRecipeDesc = new(conn));
            AddTable(FoodDesc = new(conn));
            AddTable(FootprintTileState = new(conn));
            AddTable(ForceGenerateTypes = new(conn));
            AddTable(GateDesc = new(conn));
            AddTable(GlobalSearchState = new(conn));
            AddTable(Globals = new(conn));
            AddTable(GrowthLoopTimer = new(conn));
            AddTable(GrowthState = new(conn));
            AddTable(HealthState = new(conn));
            AddTable(HerdState = new(conn));
            AddTable(HexiteExchangeEntryDesc = new(conn));
            AddTable(HideDeployableTimer = new(conn));
            AddTable(IdentityRole = new(conn));
            AddTable(InterModuleMessage = new(conn));
            AddTable(InterModuleMessageCounter = new(conn));
            AddTable(InterModuleResponseMessageCounter = new(conn));
            AddTable(InteriorCollapseTriggerState = new(conn));
            AddTable(InteriorEnvironmentDesc = new(conn));
            AddTable(InteriorInstanceDesc = new(conn));
            AddTable(InteriorNetworkDesc = new(conn));
            AddTable(InteriorPortalConnectionsDesc = new(conn));
            AddTable(InteriorSetCollapsedTimer = new(conn));
            AddTable(InteriorShapeDesc = new(conn));
            AddTable(InteriorSpawnDesc = new(conn));
            AddTable(InventoryState = new(conn));
            AddTable(ItemConversionRecipeDesc = new(conn));
            AddTable(ItemDesc = new(conn));
            AddTable(ItemListDesc = new(conn));
            AddTable(KnowledgeAchievementState = new(conn));
            AddTable(KnowledgeBattleActionState = new(conn));
            AddTable(KnowledgeBuildingState = new(conn));
            AddTable(KnowledgeCargoState = new(conn));
            AddTable(KnowledgeClaimState = new(conn));
            AddTable(KnowledgeConstructionState = new(conn));
            AddTable(KnowledgeCraftState = new(conn));
            AddTable(KnowledgeDeployableState = new(conn));
            AddTable(KnowledgeEnemyState = new(conn));
            AddTable(KnowledgeExtractState = new(conn));
            AddTable(KnowledgeItemState = new(conn));
            AddTable(KnowledgeLoreState = new(conn));
            AddTable(KnowledgeNpcState = new(conn));
            AddTable(KnowledgePavingState = new(conn));
            AddTable(KnowledgePillarShapingState = new(conn));
            AddTable(KnowledgeResourcePlacementState = new(conn));
            AddTable(KnowledgeResourceState = new(conn));
            AddTable(KnowledgeRuinsState = new(conn));
            AddTable(KnowledgeScrollDesc = new(conn));
            AddTable(KnowledgeScrollTypeDesc = new(conn));
            AddTable(KnowledgeSecondaryState = new(conn));
            AddTable(KnowledgeStatModifierDesc = new(conn));
            AddTable(KnowledgeVaultState = new(conn));
            AddTable(LightSourceState = new(conn));
            AddTable(LocationCache = new(conn));
            AddTable(LocationState = new(conn));
            AddTable(LootChestDesc = new(conn));
            AddTable(LootChestDespawnTimer = new(conn));
            AddTable(LootChestSpawnTimer = new(conn));
            AddTable(LootChestState = new(conn));
            AddTable(LootRarityDesc = new(conn));
            AddTable(LootTableDesc = new(conn));
            AddTable(LostItemsState = new(conn));
            AddTable(MobileEntityState = new(conn));
            AddTable(ModerationActionLogEntry = new(conn));
            AddTable(MountingState = new(conn));
            AddTable(MoveValidationStrikeCounterState = new(conn));
            AddTable(NpcAiLoopTimer = new(conn));
            AddTable(NpcDesc = new(conn));
            AddTable(NpcState = new(conn));
            AddTable(OnDurabilityZeroTimer = new(conn));
            AddTable(OnboardingRewardDesc = new(conn));
            AddTable(OnboardingState = new(conn));
            AddTable(ParametersDesc = new(conn));
            AddTable(ParametersPlayerMoveDesc = new(conn));
            AddTable(PartialExperienceState = new(conn));
            AddTable(PassiveCraftState = new(conn));
            AddTable(PassiveCraftTimer = new(conn));
            AddTable(PathfindingDesc = new(conn));
            AddTable(PavedTileState = new(conn));
            AddTable(PavingTileDesc = new(conn));
            AddTable(PermissionState = new(conn));
            AddTable(PillarShapingDesc = new(conn));
            AddTable(PillarShapingState = new(conn));
            AddTable(PlayerActionDesc = new(conn));
            AddTable(PlayerActionState = new(conn));
            AddTable(PlayerDeathTimer = new(conn));
            AddTable(PlayerHousingDesc = new(conn));
            AddTable(PlayerHousingEvictPlayerTimer = new(conn));
            AddTable(PlayerHousingIncomeLoopTimer = new(conn));
            AddTable(PlayerHousingState = new(conn));
            AddTable(PlayerLowercaseUsernameState = new(conn));
            AddTable(PlayerNoteState = new(conn));
            AddTable(PlayerNotificationEvent = new(conn));
            AddTable(PlayerPrefsState = new(conn));
            AddTable(PlayerQueueState = new(conn));
            AddTable(PlayerRegenLoopTimer = new(conn));
            AddTable(PlayerRegionTransferEvent = new(conn));
            AddTable(PlayerReportState = new(conn));
            AddTable(PlayerReportStateTimestamp = new(conn));
            AddTable(PlayerSetNameOutcomeEvent = new(conn));
            AddTable(PlayerState = new(conn));
            AddTable(PlayerTimestampState = new(conn));
            AddTable(PlayerUseElevatorTimer = new(conn));
            AddTable(PlayerUsernameState = new(conn));
            AddTable(PlayerVoteConcludeTimer = new(conn));
            AddTable(PlayerVoteState = new(conn));
            AddTable(PortalState = new(conn));
            AddTable(PrivateParametersDesc = new(conn));
            AddTable(ProgressiveActionState = new(conn));
            AddTable(ProjectSiteState = new(conn));
            AddTable(PublicProgressiveActionState = new(conn));
            AddTable(RegionConnectionInfo = new(conn));
            AddTable(RegionPopulationInfo = new(conn));
            AddTable(RegionPopuplationLoopTimer = new(conn));
            AddTable(RegionSignInParameters = new(conn));
            AddTable(RentCollectorLoopTimer = new(conn));
            AddTable(RentEvictTimer = new(conn));
            AddTable(RentState = new(conn));
            AddTable(ReservedNameDesc = new(conn));
            AddTable(ResetChunkIndexTimer = new(conn));
            AddTable(ResetMobileEntityTimer = new(conn));
            AddTable(ResourceClumpDesc = new(conn));
            AddTable(ResourceCount = new(conn));
            AddTable(ResourceDesc = new(conn));
            AddTable(ResourceGrowthRecipeDesc = new(conn));
            AddTable(ResourceHealthState = new(conn));
            AddTable(ResourcePlacementRecipeDesc = new(conn));
            AddTable(ResourceSpawnTimer = new(conn));
            AddTable(ResourceState = new(conn));
            AddTable(ResourcesLog = new(conn));
            AddTable(ResourcesRegenLoopTimer = new(conn));
            AddTable(RespawnResourceInChunkTimer = new(conn));
            AddTable(RezSickLongTermState = new(conn));
            AddTable(SatiationState = new(conn));
            AddTable(SecondaryKnowledgeDesc = new(conn));
            AddTable(SellOrderState = new(conn));
            AddTable(ServerIdentity = new(conn));
            AddTable(SignedInPlayerState = new(conn));
            AddTable(SingleResourceClumpInfo = new(conn));
            AddTable(SingleResourceToClumpDesc = new(conn));
            AddTable(SkillDesc = new(conn));
            AddTable(StagedStaticData = new(conn));
            AddTable(StaminaState = new(conn));
            AddTable(StarvingLoopTimer = new(conn));
            AddTable(StarvingPlayerState = new(conn));
            AddTable(TargetState = new(conn));
            AddTable(TargetableState = new(conn));
            AddTable(TargetingMatrixDesc = new(conn));
            AddTable(TeleportItemDesc = new(conn));
            AddTable(TeleportPlayerTimer = new(conn));
            AddTable(TeleportationEnergyRegenLoopTimer = new(conn));
            AddTable(TeleportationEnergyState = new(conn));
            AddTable(TerraformProgressState = new(conn));
            AddTable(TerraformRecipeDesc = new(conn));
            AddTable(TerrainChunkState = new(conn));
            AddTable(TheGreatPlaceholderTable = new(conn));
            AddTable(ThreatState = new(conn));
            AddTable(ToolDesc = new(conn));
            AddTable(ToolTypeDesc = new(conn));
            AddTable(ToolbarState = new(conn));
            AddTable(TradeOrderState = new(conn));
            AddTable(TradeSessionLoopTimer = new(conn));
            AddTable(TradeSessionState = new(conn));
            AddTable(TransferPlayerTimer = new(conn));
            AddTable(TravelerTaskDesc = new(conn));
            AddTable(TravelerTaskLoopTimer = new(conn));
            AddTable(TravelerTaskState = new(conn));
            AddTable(TravelerTradeOrderDesc = new(conn));
            AddTable(UnclaimedCollectiblesState = new(conn));
            AddTable(UnclaimedShardsState = new(conn));
            AddTable(UserAuthenticationState = new(conn));
            AddTable(UserModerationState = new(conn));
            AddTable(UserPreviousRegionState = new(conn));
            AddTable(UserState = new(conn));
            AddTable(VaultState = new(conn));
            AddTable(WallDesc = new(conn));
            AddTable(WeaponDesc = new(conn));
            AddTable(WeaponTypeDesc = new(conn));
            AddTable(WorldRegionNameState = new(conn));
            AddTable(WorldRegionState = new(conn));
        }
    }

    public sealed partial class SetReducerFlags { }

    public interface IRemoteDbContext : IDbContext<RemoteTables, RemoteReducers, SetReducerFlags, SubscriptionBuilder>
    {
        public event Action<ReducerEventContext, Exception>? OnUnhandledReducerError;
    }

    public sealed class EventContext : IEventContext, IRemoteDbContext
    {
        private readonly DbConnection conn;

        /// <summary>
        /// The event that caused this callback to run.
        /// </summary>
        public readonly Event<Reducer> Event;

        /// <summary>
        /// Access to tables in the client cache, which stores a read-only replica of the remote database state.
        ///
        /// The returned <c>DbView</c> will have a method to access each table defined by the module.
        /// </summary>
        public RemoteTables Db => conn.Db;
        /// <summary>
        /// Access to reducers defined by the module.
        ///
        /// The returned <c>RemoteReducers</c> will have a method to invoke each reducer defined by the module,
        /// plus methods for adding and removing callbacks on each of those reducers.
        /// </summary>
        public RemoteReducers Reducers => conn.Reducers;
        /// <summary>
        /// Access to setters for per-reducer flags.
        ///
        /// The returned <c>SetReducerFlags</c> will have a method to invoke,
        /// for each reducer defined by the module,
        /// which call-flags for the reducer can be set.
        /// </summary>
        public SetReducerFlags SetReducerFlags => conn.SetReducerFlags;
        /// <summary>
        /// Returns <c>true</c> if the connection is active, i.e. has not yet disconnected.
        /// </summary>
        public bool IsActive => conn.IsActive;
        /// <summary>
        /// Close the connection.
        ///
        /// Throws an error if the connection is already closed.
        /// </summary>
        public void Disconnect()
        {
            conn.Disconnect();
        }
        /// <summary>
        /// Start building a subscription.
        /// </summary>
        /// <returns>A builder-pattern constructor for subscribing to queries,
        /// causing matching rows to be replicated into the client cache.</returns>
        public SubscriptionBuilder SubscriptionBuilder() => conn.SubscriptionBuilder();
        /// <summary>
        /// Get the <c>Identity</c> of this connection.
        ///
        /// This method returns null if the connection was constructed anonymously
        /// and we have not yet received our newly-generated <c>Identity</c> from the host.
        /// </summary>
        public Identity? Identity => conn.Identity;
        /// <summary>
        /// Get this connection's <c>ConnectionId</c>.
        /// </summary>
        public ConnectionId ConnectionId => conn.ConnectionId;
        /// <summary>
        /// Register a callback to be called when a reducer with no handler returns an error.
        /// </summary>
        public event Action<ReducerEventContext, Exception>? OnUnhandledReducerError
        {
            add => Reducers.InternalOnUnhandledReducerError += value;
            remove => Reducers.InternalOnUnhandledReducerError -= value;
        }

        internal EventContext(DbConnection conn, Event<Reducer> Event)
        {
            this.conn = conn;
            this.Event = Event;
        }
    }

    public sealed class ReducerEventContext : IReducerEventContext, IRemoteDbContext
    {
        private readonly DbConnection conn;
        /// <summary>
        /// The reducer event that caused this callback to run.
        /// </summary>
        public readonly ReducerEvent<Reducer> Event;

        /// <summary>
        /// Access to tables in the client cache, which stores a read-only replica of the remote database state.
        ///
        /// The returned <c>DbView</c> will have a method to access each table defined by the module.
        /// </summary>
        public RemoteTables Db => conn.Db;
        /// <summary>
        /// Access to reducers defined by the module.
        ///
        /// The returned <c>RemoteReducers</c> will have a method to invoke each reducer defined by the module,
        /// plus methods for adding and removing callbacks on each of those reducers.
        /// </summary>
        public RemoteReducers Reducers => conn.Reducers;
        /// <summary>
        /// Access to setters for per-reducer flags.
        ///
        /// The returned <c>SetReducerFlags</c> will have a method to invoke,
        /// for each reducer defined by the module,
        /// which call-flags for the reducer can be set.
        /// </summary>
        public SetReducerFlags SetReducerFlags => conn.SetReducerFlags;
        /// <summary>
        /// Returns <c>true</c> if the connection is active, i.e. has not yet disconnected.
        /// </summary>
        public bool IsActive => conn.IsActive;
        /// <summary>
        /// Close the connection.
        ///
        /// Throws an error if the connection is already closed.
        /// </summary>
        public void Disconnect()
        {
            conn.Disconnect();
        }
        /// <summary>
        /// Start building a subscription.
        /// </summary>
        /// <returns>A builder-pattern constructor for subscribing to queries,
        /// causing matching rows to be replicated into the client cache.</returns>
        public SubscriptionBuilder SubscriptionBuilder() => conn.SubscriptionBuilder();
        /// <summary>
        /// Get the <c>Identity</c> of this connection.
        ///
        /// This method returns null if the connection was constructed anonymously
        /// and we have not yet received our newly-generated <c>Identity</c> from the host.
        /// </summary>
        public Identity? Identity => conn.Identity;
        /// <summary>
        /// Get this connection's <c>ConnectionId</c>.
        /// </summary>
        public ConnectionId ConnectionId => conn.ConnectionId;
        /// <summary>
        /// Register a callback to be called when a reducer with no handler returns an error.
        /// </summary>
        public event Action<ReducerEventContext, Exception>? OnUnhandledReducerError
        {
            add => Reducers.InternalOnUnhandledReducerError += value;
            remove => Reducers.InternalOnUnhandledReducerError -= value;
        }

        internal ReducerEventContext(DbConnection conn, ReducerEvent<Reducer> reducerEvent)
        {
            this.conn = conn;
            Event = reducerEvent;
        }
    }

    public sealed class ErrorContext : IErrorContext, IRemoteDbContext
    {
        private readonly DbConnection conn;
        /// <summary>
        /// The <c>Exception</c> that caused this error callback to be run.
        /// </summary>
        public readonly Exception Event;
        Exception IErrorContext.Event
        {
            get
            {
                return Event;
            }
        }

        /// <summary>
        /// Access to tables in the client cache, which stores a read-only replica of the remote database state.
        ///
        /// The returned <c>DbView</c> will have a method to access each table defined by the module.
        /// </summary>
        public RemoteTables Db => conn.Db;
        /// <summary>
        /// Access to reducers defined by the module.
        ///
        /// The returned <c>RemoteReducers</c> will have a method to invoke each reducer defined by the module,
        /// plus methods for adding and removing callbacks on each of those reducers.
        /// </summary>
        public RemoteReducers Reducers => conn.Reducers;
        /// <summary>
        /// Access to setters for per-reducer flags.
        ///
        /// The returned <c>SetReducerFlags</c> will have a method to invoke,
        /// for each reducer defined by the module,
        /// which call-flags for the reducer can be set.
        /// </summary>
        public SetReducerFlags SetReducerFlags => conn.SetReducerFlags;
        /// <summary>
        /// Returns <c>true</c> if the connection is active, i.e. has not yet disconnected.
        /// </summary>
        public bool IsActive => conn.IsActive;
        /// <summary>
        /// Close the connection.
        ///
        /// Throws an error if the connection is already closed.
        /// </summary>
        public void Disconnect()
        {
            conn.Disconnect();
        }
        /// <summary>
        /// Start building a subscription.
        /// </summary>
        /// <returns>A builder-pattern constructor for subscribing to queries,
        /// causing matching rows to be replicated into the client cache.</returns>
        public SubscriptionBuilder SubscriptionBuilder() => conn.SubscriptionBuilder();
        /// <summary>
        /// Get the <c>Identity</c> of this connection.
        ///
        /// This method returns null if the connection was constructed anonymously
        /// and we have not yet received our newly-generated <c>Identity</c> from the host.
        /// </summary>
        public Identity? Identity => conn.Identity;
        /// <summary>
        /// Get this connection's <c>ConnectionId</c>.
        /// </summary>
        public ConnectionId ConnectionId => conn.ConnectionId;
        /// <summary>
        /// Register a callback to be called when a reducer with no handler returns an error.
        /// </summary>
        public event Action<ReducerEventContext, Exception>? OnUnhandledReducerError
        {
            add => Reducers.InternalOnUnhandledReducerError += value;
            remove => Reducers.InternalOnUnhandledReducerError -= value;
        }

        internal ErrorContext(DbConnection conn, Exception error)
        {
            this.conn = conn;
            Event = error;
        }
    }

    public sealed class SubscriptionEventContext : ISubscriptionEventContext, IRemoteDbContext
    {
        private readonly DbConnection conn;

        /// <summary>
        /// Access to tables in the client cache, which stores a read-only replica of the remote database state.
        ///
        /// The returned <c>DbView</c> will have a method to access each table defined by the module.
        /// </summary>
        public RemoteTables Db => conn.Db;
        /// <summary>
        /// Access to reducers defined by the module.
        ///
        /// The returned <c>RemoteReducers</c> will have a method to invoke each reducer defined by the module,
        /// plus methods for adding and removing callbacks on each of those reducers.
        /// </summary>
        public RemoteReducers Reducers => conn.Reducers;
        /// <summary>
        /// Access to setters for per-reducer flags.
        ///
        /// The returned <c>SetReducerFlags</c> will have a method to invoke,
        /// for each reducer defined by the module,
        /// which call-flags for the reducer can be set.
        /// </summary>
        public SetReducerFlags SetReducerFlags => conn.SetReducerFlags;
        /// <summary>
        /// Returns <c>true</c> if the connection is active, i.e. has not yet disconnected.
        /// </summary>
        public bool IsActive => conn.IsActive;
        /// <summary>
        /// Close the connection.
        ///
        /// Throws an error if the connection is already closed.
        /// </summary>
        public void Disconnect()
        {
            conn.Disconnect();
        }
        /// <summary>
        /// Start building a subscription.
        /// </summary>
        /// <returns>A builder-pattern constructor for subscribing to queries,
        /// causing matching rows to be replicated into the client cache.</returns>
        public SubscriptionBuilder SubscriptionBuilder() => conn.SubscriptionBuilder();
        /// <summary>
        /// Get the <c>Identity</c> of this connection.
        ///
        /// This method returns null if the connection was constructed anonymously
        /// and we have not yet received our newly-generated <c>Identity</c> from the host.
        /// </summary>
        public Identity? Identity => conn.Identity;
        /// <summary>
        /// Get this connection's <c>ConnectionId</c>.
        /// </summary>
        public ConnectionId ConnectionId => conn.ConnectionId;
        /// <summary>
        /// Register a callback to be called when a reducer with no handler returns an error.
        /// </summary>
        public event Action<ReducerEventContext, Exception>? OnUnhandledReducerError
        {
            add => Reducers.InternalOnUnhandledReducerError += value;
            remove => Reducers.InternalOnUnhandledReducerError -= value;
        }

        internal SubscriptionEventContext(DbConnection conn)
        {
            this.conn = conn;
        }
    }

    /// <summary>
    /// Builder-pattern constructor for subscription queries.
    /// </summary>
    public sealed class SubscriptionBuilder
    {
        private readonly IDbConnection conn;

        private event Action<SubscriptionEventContext>? Applied;
        private event Action<ErrorContext, Exception>? Error;

        /// <summary>
        /// Private API, use <c>conn.SubscriptionBuilder()</c> instead.
        /// </summary>
        public SubscriptionBuilder(IDbConnection conn)
        {
            this.conn = conn;
        }

        /// <summary>
        /// Register a callback to run when the subscription is applied.
        /// </summary>
        public SubscriptionBuilder OnApplied(
            Action<SubscriptionEventContext> callback
        )
        {
            Applied += callback;
            return this;
        }

        /// <summary>
        /// Register a callback to run when the subscription fails.
        ///
        /// Note that this callback may run either when attempting to apply the subscription,
        /// in which case <c>Self::on_applied</c> will never run,
        /// or later during the subscription's lifetime if the module's interface changes,
        /// in which case <c>Self::on_applied</c> may have already run.
        /// </summary>
        public SubscriptionBuilder OnError(
            Action<ErrorContext, Exception> callback
        )
        {
            Error += callback;
            return this;
        }

        /// <summary>
        /// Subscribe to the following SQL queries.
        ///
        /// This method returns immediately, with the data not yet added to the DbConnection.
        /// The provided callbacks will be invoked once the data is returned from the remote server.
        /// Data from all the provided queries will be returned at the same time.
        ///
        /// See the SpacetimeDB SQL docs for more information on SQL syntax:
        /// <a href="https://spacetimedb.com/docs/sql">https://spacetimedb.com/docs/sql</a>
        /// </summary>
        public SubscriptionHandle Subscribe(
            string[] querySqls
        ) => new(conn, Applied, Error, querySqls);

        /// <summary>
        /// Subscribe to all rows from all tables.
        ///
        /// This method is intended as a convenience
        /// for applications where client-side memory use and network bandwidth are not concerns.
        /// Applications where these resources are a constraint
        /// should register more precise queries via <c>Self.Subscribe</c>
        /// in order to replicate only the subset of data which the client needs to function.
        ///
        /// This method should not be combined with <c>Self.Subscribe</c> on the same <c>DbConnection</c>.
        /// A connection may either <c>Self.Subscribe</c> to particular queries,
        /// or <c>Self.SubscribeToAllTables</c>, but not both.
        /// Attempting to call <c>Self.Subscribe</c>
        /// on a <c>DbConnection</c> that has previously used <c>Self.SubscribeToAllTables</c>,
        /// or vice versa, may misbehave in any number of ways,
        /// including dropping subscriptions, corrupting the client cache, or panicking.
        /// </summary>
        public void SubscribeToAllTables()
        {
            // Make sure we use the legacy handle constructor here, even though there's only 1 query.
            // We drop the error handler, since it can't be called for legacy subscriptions.
            new SubscriptionHandle(
                conn,
                Applied,
                new string[] { "SELECT * FROM *" }
            );
        }
    }

    public sealed class SubscriptionHandle : SubscriptionHandleBase<SubscriptionEventContext, ErrorContext>
    {
        /// <summary>
        /// Internal API. Construct <c>SubscriptionHandle</c>s using <c>conn.SubscriptionBuilder</c>.
        /// </summary>
        public SubscriptionHandle(IDbConnection conn, Action<SubscriptionEventContext>? onApplied, string[] querySqls) : base(conn, onApplied, querySqls)
        { }

        /// <summary>
        /// Internal API. Construct <c>SubscriptionHandle</c>s using <c>conn.SubscriptionBuilder</c>.
        /// </summary>
        public SubscriptionHandle(
            IDbConnection conn,
            Action<SubscriptionEventContext>? onApplied,
            Action<ErrorContext, Exception>? onError,
            string[] querySqls
        ) : base(conn, onApplied, onError, querySqls)
        { }
    }

    public abstract partial class Reducer
    {
        private Reducer() { }
    }

    public sealed class DbConnection : DbConnectionBase<DbConnection, RemoteTables, Reducer>
    {
        public override RemoteTables Db { get; }
        public readonly RemoteReducers Reducers;
        public readonly SetReducerFlags SetReducerFlags = new();

        public DbConnection()
        {
            Db = new(this);
            Reducers = new(this, SetReducerFlags);
        }

        protected override Reducer ToReducer(TransactionUpdate update)
        {
            var encodedArgs = update.ReducerCall.Args;
            return update.ReducerCall.ReducerName switch
            {
                "achievement_claim" => BSATNHelpers.Decode<Reducer.AchievementClaim>(encodedArgs),
                "acquire_knowledge_from_entities" => BSATNHelpers.Decode<Reducer.AcquireKnowledgeFromEntities>(encodedArgs),
                "admin_alpha3_complete_onboarding" => BSATNHelpers.Decode<Reducer.AdminAlpha3CompleteOnboarding>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_fifth_temple_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToFifthTempleQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_first_expand_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToFirstExpandQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_first_temple_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToFirstTempleQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_fourth_expand_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToFourthExpandQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_fourth_temple_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToFourthTempleQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_second_expand_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToSecondExpandQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_second_temple_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToSecondTempleQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_third_expand_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToThirdExpandQuest>(encodedArgs),
                "admin_alpha3_reset_onboarding_to_third_temple_quest" => BSATNHelpers.Decode<Reducer.AdminAlpha3ResetOnboardingToThirdTempleQuest>(encodedArgs),
                "admin_broadcast_msg_region" => BSATNHelpers.Decode<Reducer.AdminBroadcastMsgRegion>(encodedArgs),
                "admin_cap_skill" => BSATNHelpers.Decode<Reducer.AdminCapSkill>(encodedArgs),
                "admin_check_closed_listing_states" => BSATNHelpers.Decode<Reducer.AdminCheckClosedListingStates>(encodedArgs),
                "admin_clear_all_resources" => BSATNHelpers.Decode<Reducer.AdminClearAllResources>(encodedArgs),
                "admin_clear_chunk_resources" => BSATNHelpers.Decode<Reducer.AdminClearChunkResources>(encodedArgs),
                "admin_collapse_ruin" => BSATNHelpers.Decode<Reducer.AdminCollapseRuin>(encodedArgs),
                "admin_collapse_ruins" => BSATNHelpers.Decode<Reducer.AdminCollapseRuins>(encodedArgs),
                "admin_complete_all_passive_crafts" => BSATNHelpers.Decode<Reducer.AdminCompleteAllPassiveCrafts>(encodedArgs),
                "admin_count_inventory_items" => BSATNHelpers.Decode<Reducer.AdminCountInventoryItems>(encodedArgs),
                "admin_create_chat_message" => BSATNHelpers.Decode<Reducer.AdminCreateChatMessage>(encodedArgs),
                "admin_create_player_report" => BSATNHelpers.Decode<Reducer.AdminCreatePlayerReport>(encodedArgs),
                "admin_delete_all_items_of_type" => BSATNHelpers.Decode<Reducer.AdminDeleteAllItemsOfType>(encodedArgs),
                "admin_delete_chat_message" => BSATNHelpers.Decode<Reducer.AdminDeleteChatMessage>(encodedArgs),
                "admin_despawn_overworld_enemies" => BSATNHelpers.Decode<Reducer.AdminDespawnOverworldEnemies>(encodedArgs),
                "admin_find_all_players_with_item" => BSATNHelpers.Decode<Reducer.AdminFindAllPlayersWithItem>(encodedArgs),
                "admin_find_all_players_with_item_above_quantity" => BSATNHelpers.Decode<Reducer.AdminFindAllPlayersWithItemAboveQuantity>(encodedArgs),
                "admin_find_items_in_inventories" => BSATNHelpers.Decode<Reducer.AdminFindItemsInInventories>(encodedArgs),
                "admin_find_items_in_trades" => BSATNHelpers.Decode<Reducer.AdminFindItemsInTrades>(encodedArgs),
                "admin_grant_collectibles" => BSATNHelpers.Decode<Reducer.AdminGrantCollectibles>(encodedArgs),
                "admin_modify_chat_message" => BSATNHelpers.Decode<Reducer.AdminModifyChatMessage>(encodedArgs),
                "admin_rename_building" => BSATNHelpers.Decode<Reducer.AdminRenameBuilding>(encodedArgs),
                "admin_rename_building_coord" => BSATNHelpers.Decode<Reducer.AdminRenameBuildingCoord>(encodedArgs),
                "admin_rename_building_entity" => BSATNHelpers.Decode<Reducer.AdminRenameBuildingEntity>(encodedArgs),
                "admin_rename_claim" => BSATNHelpers.Decode<Reducer.AdminRenameClaim>(encodedArgs),
                "admin_rename_claim_entity" => BSATNHelpers.Decode<Reducer.AdminRenameClaimEntity>(encodedArgs),
                "admin_rename_deployable" => BSATNHelpers.Decode<Reducer.AdminRenameDeployable>(encodedArgs),
                "admin_rename_deployable_entity" => BSATNHelpers.Decode<Reducer.AdminRenameDeployableEntity>(encodedArgs),
                "admin_reset_all_herd_locations" => BSATNHelpers.Decode<Reducer.AdminResetAllHerdLocations>(encodedArgs),
                "admin_reset_herd_locations" => BSATNHelpers.Decode<Reducer.AdminResetHerdLocations>(encodedArgs),
                "admin_reset_onboarding_completely" => BSATNHelpers.Decode<Reducer.AdminResetOnboardingCompletely>(encodedArgs),
                "admin_resource_force_regen" => BSATNHelpers.Decode<Reducer.AdminResourceForceRegen>(encodedArgs),
                "admin_resources_delete_very_slow" => BSATNHelpers.Decode<Reducer.AdminResourcesDeleteVerySlow>(encodedArgs),
                "admin_resources_log_count" => BSATNHelpers.Decode<Reducer.AdminResourcesLogCount>(encodedArgs),
                "admin_restore_all_collapsed_ruins" => BSATNHelpers.Decode<Reducer.AdminRestoreAllCollapsedRuins>(encodedArgs),
                "admin_restore_player_state" => BSATNHelpers.Decode<Reducer.AdminRestorePlayerState>(encodedArgs),
                "admin_restore_player_state_scheduled" => BSATNHelpers.Decode<Reducer.AdminRestorePlayerStateScheduled>(encodedArgs),
                "admin_set_sign_text" => BSATNHelpers.Decode<Reducer.AdminSetSignText>(encodedArgs),
                "admin_set_sign_text_coord" => BSATNHelpers.Decode<Reducer.AdminSetSignTextCoord>(encodedArgs),
                "admin_set_sign_text_entity" => BSATNHelpers.Decode<Reducer.AdminSetSignTextEntity>(encodedArgs),
                "admin_sign_out" => BSATNHelpers.Decode<Reducer.AdminSignOut>(encodedArgs),
                "admin_sign_out_all_region" => BSATNHelpers.Decode<Reducer.AdminSignOutAllRegion>(encodedArgs),
                "admin_sign_out_string" => BSATNHelpers.Decode<Reducer.AdminSignOutString>(encodedArgs),
                "admin_update_housing_portals" => BSATNHelpers.Decode<Reducer.AdminUpdateHousingPortals>(encodedArgs),
                "admin_update_light_source_states" => BSATNHelpers.Decode<Reducer.AdminUpdateLightSourceStates>(encodedArgs),
                "attack" => BSATNHelpers.Decode<Reducer.Attack>(encodedArgs),
                "attack_impact" => BSATNHelpers.Decode<Reducer.AttackImpact>(encodedArgs),
                "attack_scheduled" => BSATNHelpers.Decode<Reducer.AttackScheduled>(encodedArgs),
                "attack_start" => BSATNHelpers.Decode<Reducer.AttackStart>(encodedArgs),
                "auto_logout_loop" => BSATNHelpers.Decode<Reducer.AutoLogoutLoop>(encodedArgs),
                "barter_stall_order_accept" => BSATNHelpers.Decode<Reducer.BarterStallOrderAccept>(encodedArgs),
                "barter_stall_order_create" => BSATNHelpers.Decode<Reducer.BarterStallOrderCreate>(encodedArgs),
                "barter_stall_order_delete" => BSATNHelpers.Decode<Reducer.BarterStallOrderDelete>(encodedArgs),
                "barter_stall_set_market_mode_enabled" => BSATNHelpers.Decode<Reducer.BarterStallSetMarketModeEnabled>(encodedArgs),
                "blueprint_place" => BSATNHelpers.Decode<Reducer.BlueprintPlace>(encodedArgs),
                "building_decay_agent_loop" => BSATNHelpers.Decode<Reducer.BuildingDecayAgentLoop>(encodedArgs),
                "building_deconstruct" => BSATNHelpers.Decode<Reducer.BuildingDeconstruct>(encodedArgs),
                "building_deconstruct_start" => BSATNHelpers.Decode<Reducer.BuildingDeconstructStart>(encodedArgs),
                "building_despawn" => BSATNHelpers.Decode<Reducer.BuildingDespawn>(encodedArgs),
                "building_move" => BSATNHelpers.Decode<Reducer.BuildingMove>(encodedArgs),
                "building_repair" => BSATNHelpers.Decode<Reducer.BuildingRepair>(encodedArgs),
                "building_repair_start" => BSATNHelpers.Decode<Reducer.BuildingRepairStart>(encodedArgs),
                "building_set_nickname" => BSATNHelpers.Decode<Reducer.BuildingSetNickname>(encodedArgs),
                "building_set_sign_text" => BSATNHelpers.Decode<Reducer.BuildingSetSignText>(encodedArgs),
                "chat_cleanup_agent_insert" => BSATNHelpers.Decode<Reducer.ChatCleanupAgentInsert>(encodedArgs),
                "chat_cleanup_agent_loop" => BSATNHelpers.Decode<Reducer.ChatCleanupAgentLoop>(encodedArgs),
                "chat_post_message" => BSATNHelpers.Decode<Reducer.ChatPostMessage>(encodedArgs),
                "cheat_building_move" => BSATNHelpers.Decode<Reducer.CheatBuildingMove>(encodedArgs),
                "cheat_building_place" => BSATNHelpers.Decode<Reducer.CheatBuildingPlace>(encodedArgs),
                "cheat_cargo_grant" => BSATNHelpers.Decode<Reducer.CheatCargoGrant>(encodedArgs),
                "cheat_claim_take_ownership" => BSATNHelpers.Decode<Reducer.CheatClaimTakeOwnership>(encodedArgs),
                "cheat_claim_totem_add_supplies" => BSATNHelpers.Decode<Reducer.CheatClaimTotemAddSupplies>(encodedArgs),
                "cheat_claim_totem_complete_current_research" => BSATNHelpers.Decode<Reducer.CheatClaimTotemCompleteCurrentResearch>(encodedArgs),
                "cheat_claim_totem_research_all" => BSATNHelpers.Decode<Reducer.CheatClaimTotemResearchAll>(encodedArgs),
                "cheat_clear_buffs_and_debuffs" => BSATNHelpers.Decode<Reducer.CheatClearBuffsAndDebuffs>(encodedArgs),
                "cheat_compendium_place_enemy" => BSATNHelpers.Decode<Reducer.CheatCompendiumPlaceEnemy>(encodedArgs),
                "cheat_compendium_place_resource" => BSATNHelpers.Decode<Reducer.CheatCompendiumPlaceResource>(encodedArgs),
                "cheat_delete_item" => BSATNHelpers.Decode<Reducer.CheatDeleteItem>(encodedArgs),
                "cheat_deployable_store" => BSATNHelpers.Decode<Reducer.CheatDeployableStore>(encodedArgs),
                "cheat_discover_map" => BSATNHelpers.Decode<Reducer.CheatDiscoverMap>(encodedArgs),
                "cheat_experience_grant" => BSATNHelpers.Decode<Reducer.CheatExperienceGrant>(encodedArgs),
                "cheat_grant_knowledge" => BSATNHelpers.Decode<Reducer.CheatGrantKnowledge>(encodedArgs),
                "cheat_grant_teleport_energy" => BSATNHelpers.Decode<Reducer.CheatGrantTeleportEnergy>(encodedArgs),
                "cheat_item_stack_grant" => BSATNHelpers.Decode<Reducer.CheatItemStackGrant>(encodedArgs),
                "cheat_item_stack_grant_and_equip" => BSATNHelpers.Decode<Reducer.CheatItemStackGrantAndEquip>(encodedArgs),
                "cheat_kill" => BSATNHelpers.Decode<Reducer.CheatKill>(encodedArgs),
                "cheat_paving_add_tile" => BSATNHelpers.Decode<Reducer.CheatPavingAddTile>(encodedArgs),
                "cheat_paving_destroy" => BSATNHelpers.Decode<Reducer.CheatPavingDestroy>(encodedArgs),
                "cheat_pillar_shaping_add_pillar" => BSATNHelpers.Decode<Reducer.CheatPillarShapingAddPillar>(encodedArgs),
                "cheat_pillar_shaping_destroy" => BSATNHelpers.Decode<Reducer.CheatPillarShapingDestroy>(encodedArgs),
                "cheat_project_site_add_all_materials" => BSATNHelpers.Decode<Reducer.CheatProjectSiteAddAllMaterials>(encodedArgs),
                "cheat_remove_entity_building" => BSATNHelpers.Decode<Reducer.CheatRemoveEntityBuilding>(encodedArgs),
                "cheat_remove_entity_enemy" => BSATNHelpers.Decode<Reducer.CheatRemoveEntityEnemy>(encodedArgs),
                "cheat_remove_entity_resource" => BSATNHelpers.Decode<Reducer.CheatRemoveEntityResource>(encodedArgs),
                "cheat_remove_item_quantity" => BSATNHelpers.Decode<Reducer.CheatRemoveItemQuantity>(encodedArgs),
                "cheat_set_ai_debug_state" => BSATNHelpers.Decode<Reducer.CheatSetAiDebugState>(encodedArgs),
                "cheat_spawn_loot_chest" => BSATNHelpers.Decode<Reducer.CheatSpawnLootChest>(encodedArgs),
                "cheat_teleport_float" => BSATNHelpers.Decode<Reducer.CheatTeleportFloat>(encodedArgs),
                "cheat_terraform" => BSATNHelpers.Decode<Reducer.CheatTerraform>(encodedArgs),
                "cheat_toggle_active_collectible" => BSATNHelpers.Decode<Reducer.CheatToggleActiveCollectible>(encodedArgs),
                "cheat_warp" => BSATNHelpers.Decode<Reducer.CheatWarp>(encodedArgs),
                "claim_add_member" => BSATNHelpers.Decode<Reducer.ClaimAddMember>(encodedArgs),
                "claim_add_recruitment" => BSATNHelpers.Decode<Reducer.ClaimAddRecruitment>(encodedArgs),
                "claim_add_tile" => BSATNHelpers.Decode<Reducer.ClaimAddTile>(encodedArgs),
                "claim_apply_for_recruitment" => BSATNHelpers.Decode<Reducer.ClaimApplyForRecruitment>(encodedArgs),
                "claim_leave" => BSATNHelpers.Decode<Reducer.ClaimLeave>(encodedArgs),
                "claim_purchase_supplies_from_player" => BSATNHelpers.Decode<Reducer.ClaimPurchaseSuppliesFromPlayer>(encodedArgs),
                "claim_remove_member" => BSATNHelpers.Decode<Reducer.ClaimRemoveMember>(encodedArgs),
                "claim_remove_recruitment" => BSATNHelpers.Decode<Reducer.ClaimRemoveRecruitment>(encodedArgs),
                "claim_remove_tile" => BSATNHelpers.Decode<Reducer.ClaimRemoveTile>(encodedArgs),
                "claim_rename" => BSATNHelpers.Decode<Reducer.ClaimRename>(encodedArgs),
                "claim_resupply" => BSATNHelpers.Decode<Reducer.ClaimResupply>(encodedArgs),
                "claim_resupply_start" => BSATNHelpers.Decode<Reducer.ClaimResupplyStart>(encodedArgs),
                "claim_set_member_permissions" => BSATNHelpers.Decode<Reducer.ClaimSetMemberPermissions>(encodedArgs),
                "claim_set_purchase_supply_price" => BSATNHelpers.Decode<Reducer.ClaimSetPurchaseSupplyPrice>(encodedArgs),
                "claim_set_purchase_supply_threshold" => BSATNHelpers.Decode<Reducer.ClaimSetPurchaseSupplyThreshold>(encodedArgs),
                "claim_take_ownership" => BSATNHelpers.Decode<Reducer.ClaimTakeOwnership>(encodedArgs),
                "claim_tech_cancel" => BSATNHelpers.Decode<Reducer.ClaimTechCancel>(encodedArgs),
                "claim_tech_learn" => BSATNHelpers.Decode<Reducer.ClaimTechLearn>(encodedArgs),
                "claim_tech_unlock_tech" => BSATNHelpers.Decode<Reducer.ClaimTechUnlockTech>(encodedArgs),
                "claim_transfer_ownership" => BSATNHelpers.Decode<Reducer.ClaimTransferOwnership>(encodedArgs),
                "claim_treasury_deposit" => BSATNHelpers.Decode<Reducer.ClaimTreasuryDeposit>(encodedArgs),
                "claim_withdraw_from_treasury" => BSATNHelpers.Decode<Reducer.ClaimWithdrawFromTreasury>(encodedArgs),
                "clear_staged_static_data" => BSATNHelpers.Decode<Reducer.ClearStagedStaticData>(encodedArgs),
                "closed_listing_collect" => BSATNHelpers.Decode<Reducer.ClosedListingCollect>(encodedArgs),
                "collect_stats_reducer" => BSATNHelpers.Decode<Reducer.CollectStatsReducer>(encodedArgs),
                "collectible_activate" => BSATNHelpers.Decode<Reducer.CollectibleActivate>(encodedArgs),
                "commit_staged_static_data" => BSATNHelpers.Decode<Reducer.CommitStagedStaticData>(encodedArgs),
                "complete_onboarding_quest" => BSATNHelpers.Decode<Reducer.CompleteOnboardingQuest>(encodedArgs),
                "complete_onboarding_state" => BSATNHelpers.Decode<Reducer.CompleteOnboardingState>(encodedArgs),
                "convert_collectible_to_deed" => BSATNHelpers.Decode<Reducer.ConvertCollectibleToDeed>(encodedArgs),
                "convert_deed_to_collectible" => BSATNHelpers.Decode<Reducer.ConvertDeedToCollectible>(encodedArgs),
                "craft_cancel" => BSATNHelpers.Decode<Reducer.CraftCancel>(encodedArgs),
                "craft_collect" => BSATNHelpers.Decode<Reducer.CraftCollect>(encodedArgs),
                "craft_collect_all" => BSATNHelpers.Decode<Reducer.CraftCollectAll>(encodedArgs),
                "craft_continue" => BSATNHelpers.Decode<Reducer.CraftContinue>(encodedArgs),
                "craft_continue_start" => BSATNHelpers.Decode<Reducer.CraftContinueStart>(encodedArgs),
                "craft_initiate" => BSATNHelpers.Decode<Reducer.CraftInitiate>(encodedArgs),
                "craft_initiate_start" => BSATNHelpers.Decode<Reducer.CraftInitiateStart>(encodedArgs),
                "craft_set_public" => BSATNHelpers.Decode<Reducer.CraftSetPublic>(encodedArgs),
                "current_version" => BSATNHelpers.Decode<Reducer.CurrentVersion>(encodedArgs),
                "day_night_agent_loop" => BSATNHelpers.Decode<Reducer.DayNightAgentLoop>(encodedArgs),
                "delete_all_npcs" => BSATNHelpers.Decode<Reducer.DeleteAllNpcs>(encodedArgs),
                "deployable_deploy" => BSATNHelpers.Decode<Reducer.DeployableDeploy>(encodedArgs),
                "deployable_deploy_start" => BSATNHelpers.Decode<Reducer.DeployableDeployStart>(encodedArgs),
                "deployable_dismount" => BSATNHelpers.Decode<Reducer.DeployableDismount>(encodedArgs),
                "deployable_dismount_scheduled" => BSATNHelpers.Decode<Reducer.DeployableDismountScheduled>(encodedArgs),
                "deployable_mount" => BSATNHelpers.Decode<Reducer.DeployableMount>(encodedArgs),
                "deployable_move" => BSATNHelpers.Decode<Reducer.DeployableMove>(encodedArgs),
                "deployable_move_off_bounds" => BSATNHelpers.Decode<Reducer.DeployableMoveOffBounds>(encodedArgs),
                "deployable_move_off_claim" => BSATNHelpers.Decode<Reducer.DeployableMoveOffClaim>(encodedArgs),
                "deployable_store" => BSATNHelpers.Decode<Reducer.DeployableStore>(encodedArgs),
                "deployable_store_start" => BSATNHelpers.Decode<Reducer.DeployableStoreStart>(encodedArgs),
                "destroy_dimension_network" => BSATNHelpers.Decode<Reducer.DestroyDimensionNetwork>(encodedArgs),
                "dev_delete_world" => BSATNHelpers.Decode<Reducer.DevDeleteWorld>(encodedArgs),
                "discover_entities" => BSATNHelpers.Decode<Reducer.DiscoverEntities>(encodedArgs),
                "dropped_inventory_despawn" => BSATNHelpers.Decode<Reducer.DroppedInventoryDespawn>(encodedArgs),
                "dropped_inventory_lose_ownership" => BSATNHelpers.Decode<Reducer.DroppedInventoryLoseOwnership>(encodedArgs),
                "duel_agent_timer_loop" => BSATNHelpers.Decode<Reducer.DuelAgentTimerLoop>(encodedArgs),
                "duel_despawn" => BSATNHelpers.Decode<Reducer.DuelDespawn>(encodedArgs),
                "eat" => BSATNHelpers.Decode<Reducer.Eat>(encodedArgs),
                "emote" => BSATNHelpers.Decode<Reducer.Emote>(encodedArgs),
                "emote_start" => BSATNHelpers.Decode<Reducer.EmoteStart>(encodedArgs),
                "empire_add_siege_supplies" => BSATNHelpers.Decode<Reducer.EmpireAddSiegeSupplies>(encodedArgs),
                "empire_claim_join" => BSATNHelpers.Decode<Reducer.EmpireClaimJoin>(encodedArgs),
                "empire_collect_hexite_capsule" => BSATNHelpers.Decode<Reducer.EmpireCollectHexiteCapsule>(encodedArgs),
                "empire_deploy_siege_engine" => BSATNHelpers.Decode<Reducer.EmpireDeploySiegeEngine>(encodedArgs),
                "empire_deploy_siege_engine_start" => BSATNHelpers.Decode<Reducer.EmpireDeploySiegeEngineStart>(encodedArgs),
                "empire_queue_supplies" => BSATNHelpers.Decode<Reducer.EmpireQueueSupplies>(encodedArgs),
                "empire_resupply_node" => BSATNHelpers.Decode<Reducer.EmpireResupplyNode>(encodedArgs),
                "empire_resupply_node_start" => BSATNHelpers.Decode<Reducer.EmpireResupplyNodeStart>(encodedArgs),
                "empire_siege_depleted_watchtower" => BSATNHelpers.Decode<Reducer.EmpireSiegeDepletedWatchtower>(encodedArgs),
                "end_grace_period" => BSATNHelpers.Decode<Reducer.EndGracePeriod>(encodedArgs),
                "enemy_clear_aggro" => BSATNHelpers.Decode<Reducer.EnemyClearAggro>(encodedArgs),
                "enemy_despawn" => BSATNHelpers.Decode<Reducer.EnemyDespawn>(encodedArgs),
                "enemy_despawn_from_mob_monitor" => BSATNHelpers.Decode<Reducer.EnemyDespawnFromMobMonitor>(encodedArgs),
                "enemy_despawn_from_mob_monitor_batch" => BSATNHelpers.Decode<Reducer.EnemyDespawnFromMobMonitorBatch>(encodedArgs),
                "enemy_move" => BSATNHelpers.Decode<Reducer.EnemyMove>(encodedArgs),
                "enemy_move_batch" => BSATNHelpers.Decode<Reducer.EnemyMoveBatch>(encodedArgs),
                "enemy_regen_agent_loop" => BSATNHelpers.Decode<Reducer.EnemyRegenAgentLoop>(encodedArgs),
                "enemy_set_health" => BSATNHelpers.Decode<Reducer.EnemySetHealth>(encodedArgs),
                "enemy_set_health_batch" => BSATNHelpers.Decode<Reducer.EnemySetHealthBatch>(encodedArgs),
                "enemy_spawn" => BSATNHelpers.Decode<Reducer.EnemySpawn>(encodedArgs),
                "enemy_spawn_batch" => BSATNHelpers.Decode<Reducer.EnemySpawnBatch>(encodedArgs),
                "enemy_spawn_loot" => BSATNHelpers.Decode<Reducer.EnemySpawnLoot>(encodedArgs),
                "environment_debuff_agent_loop" => BSATNHelpers.Decode<Reducer.EnvironmentDebuffAgentLoop>(encodedArgs),
                "equipment_add" => BSATNHelpers.Decode<Reducer.EquipmentAdd>(encodedArgs),
                "equipment_remove" => BSATNHelpers.Decode<Reducer.EquipmentRemove>(encodedArgs),
                "extract" => BSATNHelpers.Decode<Reducer.Extract>(encodedArgs),
                "extract_start" => BSATNHelpers.Decode<Reducer.ExtractStart>(encodedArgs),
                "force_start_agents" => BSATNHelpers.Decode<Reducer.ForceStartAgents>(encodedArgs),
                "generate_dev_island" => BSATNHelpers.Decode<Reducer.GenerateDevIsland>(encodedArgs),
                "generate_flat_world" => BSATNHelpers.Decode<Reducer.GenerateFlatWorld>(encodedArgs),
                "generate_world" => BSATNHelpers.Decode<Reducer.GenerateWorld>(encodedArgs),
                "growth_agent_loop" => BSATNHelpers.Decode<Reducer.GrowthAgentLoop>(encodedArgs),
                "hide_deployable" => BSATNHelpers.Decode<Reducer.HideDeployable>(encodedArgs),
                "identity_connected" => BSATNHelpers.Decode<Reducer.IdentityConnected>(encodedArgs),
                "identity_disconnected" => BSATNHelpers.Decode<Reducer.IdentityDisconnected>(encodedArgs),
                "import_achievement_desc" => BSATNHelpers.Decode<Reducer.ImportAchievementDesc>(encodedArgs),
                "import_active_buff_state" => BSATNHelpers.Decode<Reducer.ImportActiveBuffState>(encodedArgs),
                "import_admin_broadcast" => BSATNHelpers.Decode<Reducer.ImportAdminBroadcast>(encodedArgs),
                "import_alert_desc" => BSATNHelpers.Decode<Reducer.ImportAlertDesc>(encodedArgs),
                "import_alert_state" => BSATNHelpers.Decode<Reducer.ImportAlertState>(encodedArgs),
                "import_attack_outcome_state" => BSATNHelpers.Decode<Reducer.ImportAttackOutcomeState>(encodedArgs),
                "import_biome_desc" => BSATNHelpers.Decode<Reducer.ImportBiomeDesc>(encodedArgs),
                "import_buff_desc" => BSATNHelpers.Decode<Reducer.ImportBuffDesc>(encodedArgs),
                "import_buff_type_desc" => BSATNHelpers.Decode<Reducer.ImportBuffTypeDesc>(encodedArgs),
                "import_building_claim_desc" => BSATNHelpers.Decode<Reducer.ImportBuildingClaimDesc>(encodedArgs),
                "import_building_desc" => BSATNHelpers.Decode<Reducer.ImportBuildingDesc>(encodedArgs),
                "import_building_portal_desc" => BSATNHelpers.Decode<Reducer.ImportBuildingPortalDesc>(encodedArgs),
                "import_building_repairs_desc" => BSATNHelpers.Decode<Reducer.ImportBuildingRepairsDesc>(encodedArgs),
                "import_building_spawn_desc" => BSATNHelpers.Decode<Reducer.ImportBuildingSpawnDesc>(encodedArgs),
                "import_building_state" => BSATNHelpers.Decode<Reducer.ImportBuildingState>(encodedArgs),
                "import_building_type_desc" => BSATNHelpers.Decode<Reducer.ImportBuildingTypeDesc>(encodedArgs),
                "import_cargo_desc" => BSATNHelpers.Decode<Reducer.ImportCargoDesc>(encodedArgs),
                "import_character_stat_desc" => BSATNHelpers.Decode<Reducer.ImportCharacterStatDesc>(encodedArgs),
                "import_character_stats_state" => BSATNHelpers.Decode<Reducer.ImportCharacterStatsState>(encodedArgs),
                "import_chat_message_state" => BSATNHelpers.Decode<Reducer.ImportChatMessageState>(encodedArgs),
                "import_chest_rarity_desc" => BSATNHelpers.Decode<Reducer.ImportChestRarityDesc>(encodedArgs),
                "import_claim_local_state" => BSATNHelpers.Decode<Reducer.ImportClaimLocalState>(encodedArgs),
                "import_claim_recruitment_state" => BSATNHelpers.Decode<Reducer.ImportClaimRecruitmentState>(encodedArgs),
                "import_claim_state" => BSATNHelpers.Decode<Reducer.ImportClaimState>(encodedArgs),
                "import_claim_tech_desc" => BSATNHelpers.Decode<Reducer.ImportClaimTechDesc>(encodedArgs),
                "import_claim_tech_state" => BSATNHelpers.Decode<Reducer.ImportClaimTechState>(encodedArgs),
                "import_claim_tile_cost" => BSATNHelpers.Decode<Reducer.ImportClaimTileCost>(encodedArgs),
                "import_claim_tile_state" => BSATNHelpers.Decode<Reducer.ImportClaimTileState>(encodedArgs),
                "import_climb_requirement_desc" => BSATNHelpers.Decode<Reducer.ImportClimbRequirementDesc>(encodedArgs),
                "import_clothing_desc" => BSATNHelpers.Decode<Reducer.ImportClothingDesc>(encodedArgs),
                "import_collectible_desc" => BSATNHelpers.Decode<Reducer.ImportCollectibleDesc>(encodedArgs),
                "import_combat_action_desc" => BSATNHelpers.Decode<Reducer.ImportCombatActionDesc>(encodedArgs),
                "import_combat_state" => BSATNHelpers.Decode<Reducer.ImportCombatState>(encodedArgs),
                "import_config" => BSATNHelpers.Decode<Reducer.ImportConfig>(encodedArgs),
                "import_construction_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportConstructionRecipeDesc>(encodedArgs),
                "import_crafting_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportCraftingRecipeDesc>(encodedArgs),
                "import_deconstruction_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportDeconstructionRecipeDesc>(encodedArgs),
                "import_deployable_desc" => BSATNHelpers.Decode<Reducer.ImportDeployableDesc>(encodedArgs),
                "import_deployable_state" => BSATNHelpers.Decode<Reducer.ImportDeployableState>(encodedArgs),
                "import_dimension_description_state" => BSATNHelpers.Decode<Reducer.ImportDimensionDescriptionState>(encodedArgs),
                "import_dimension_network_description_state" => BSATNHelpers.Decode<Reducer.ImportDimensionNetworkDescriptionState>(encodedArgs),
                "import_distant_visible_entity_desc" => BSATNHelpers.Decode<Reducer.ImportDistantVisibleEntityDesc>(encodedArgs),
                "import_dropped_inventory_state" => BSATNHelpers.Decode<Reducer.ImportDroppedInventoryState>(encodedArgs),
                "import_elevator_desc" => BSATNHelpers.Decode<Reducer.ImportElevatorDesc>(encodedArgs),
                "import_emote_desc" => BSATNHelpers.Decode<Reducer.ImportEmoteDesc>(encodedArgs),
                "import_empire_colors_desc" => BSATNHelpers.Decode<Reducer.ImportEmpireColorsDesc>(encodedArgs),
                "import_empire_icon_desc" => BSATNHelpers.Decode<Reducer.ImportEmpireIconDesc>(encodedArgs),
                "import_empire_notification_desc" => BSATNHelpers.Decode<Reducer.ImportEmpireNotificationDesc>(encodedArgs),
                "import_empire_rank_desc" => BSATNHelpers.Decode<Reducer.ImportEmpireRankDesc>(encodedArgs),
                "import_empire_supplies_desc" => BSATNHelpers.Decode<Reducer.ImportEmpireSuppliesDesc>(encodedArgs),
                "import_empire_territory_desc" => BSATNHelpers.Decode<Reducer.ImportEmpireTerritoryDesc>(encodedArgs),
                "import_enemy_ai_params_desc" => BSATNHelpers.Decode<Reducer.ImportEnemyAiParamsDesc>(encodedArgs),
                "import_enemy_desc" => BSATNHelpers.Decode<Reducer.ImportEnemyDesc>(encodedArgs),
                "import_enemy_state" => BSATNHelpers.Decode<Reducer.ImportEnemyState>(encodedArgs),
                "import_environment_debuff_desc" => BSATNHelpers.Decode<Reducer.ImportEnvironmentDebuffDesc>(encodedArgs),
                "import_equipment_desc" => BSATNHelpers.Decode<Reducer.ImportEquipmentDesc>(encodedArgs),
                "import_equipment_state" => BSATNHelpers.Decode<Reducer.ImportEquipmentState>(encodedArgs),
                "import_experience_state" => BSATNHelpers.Decode<Reducer.ImportExperienceState>(encodedArgs),
                "import_exploration_chunks_state" => BSATNHelpers.Decode<Reducer.ImportExplorationChunksState>(encodedArgs),
                "import_extraction_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportExtractionRecipeDesc>(encodedArgs),
                "import_food_desc" => BSATNHelpers.Decode<Reducer.ImportFoodDesc>(encodedArgs),
                "import_footprint_tile_state" => BSATNHelpers.Decode<Reducer.ImportFootprintTileState>(encodedArgs),
                "import_gate_desc" => BSATNHelpers.Decode<Reducer.ImportGateDesc>(encodedArgs),
                "import_globals" => BSATNHelpers.Decode<Reducer.ImportGlobals>(encodedArgs),
                "import_growth_state" => BSATNHelpers.Decode<Reducer.ImportGrowthState>(encodedArgs),
                "import_health_state" => BSATNHelpers.Decode<Reducer.ImportHealthState>(encodedArgs),
                "import_herd_cache" => BSATNHelpers.Decode<Reducer.ImportHerdCache>(encodedArgs),
                "import_hexite_exchange_entry_desc" => BSATNHelpers.Decode<Reducer.ImportHexiteExchangeEntryDesc>(encodedArgs),
                "import_identity_role" => BSATNHelpers.Decode<Reducer.ImportIdentityRole>(encodedArgs),
                "import_interior_collapse_trigger_state" => BSATNHelpers.Decode<Reducer.ImportInteriorCollapseTriggerState>(encodedArgs),
                "import_interior_environment_desc" => BSATNHelpers.Decode<Reducer.ImportInteriorEnvironmentDesc>(encodedArgs),
                "import_interior_instance_desc" => BSATNHelpers.Decode<Reducer.ImportInteriorInstanceDesc>(encodedArgs),
                "import_interior_network_desc" => BSATNHelpers.Decode<Reducer.ImportInteriorNetworkDesc>(encodedArgs),
                "import_interior_portal_connections_desc" => BSATNHelpers.Decode<Reducer.ImportInteriorPortalConnectionsDesc>(encodedArgs),
                "import_interior_shape_desc" => BSATNHelpers.Decode<Reducer.ImportInteriorShapeDesc>(encodedArgs),
                "import_interior_spawn_desc" => BSATNHelpers.Decode<Reducer.ImportInteriorSpawnDesc>(encodedArgs),
                "import_inventory_state" => BSATNHelpers.Decode<Reducer.ImportInventoryState>(encodedArgs),
                "import_item_conversion_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportItemConversionRecipeDesc>(encodedArgs),
                "import_item_desc" => BSATNHelpers.Decode<Reducer.ImportItemDesc>(encodedArgs),
                "import_item_list_desc" => BSATNHelpers.Decode<Reducer.ImportItemListDesc>(encodedArgs),
                "import_knowledge_achievement_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeAchievementState>(encodedArgs),
                "import_knowledge_battle_action_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeBattleActionState>(encodedArgs),
                "import_knowledge_building_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeBuildingState>(encodedArgs),
                "import_knowledge_cargo_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeCargoState>(encodedArgs),
                "import_knowledge_construction_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeConstructionState>(encodedArgs),
                "import_knowledge_craft_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeCraftState>(encodedArgs),
                "import_knowledge_deployable_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeDeployableState>(encodedArgs),
                "import_knowledge_enemy_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeEnemyState>(encodedArgs),
                "import_knowledge_extract_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeExtractState>(encodedArgs),
                "import_knowledge_item_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeItemState>(encodedArgs),
                "import_knowledge_lore_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeLoreState>(encodedArgs),
                "import_knowledge_npc_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeNpcState>(encodedArgs),
                "import_knowledge_paving_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgePavingState>(encodedArgs),
                "import_knowledge_pillar_shaping_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgePillarShapingState>(encodedArgs),
                "import_knowledge_resource_placement_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeResourcePlacementState>(encodedArgs),
                "import_knowledge_resource_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeResourceState>(encodedArgs),
                "import_knowledge_ruins_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeRuinsState>(encodedArgs),
                "import_knowledge_scroll_desc" => BSATNHelpers.Decode<Reducer.ImportKnowledgeScrollDesc>(encodedArgs),
                "import_knowledge_scroll_type_desc" => BSATNHelpers.Decode<Reducer.ImportKnowledgeScrollTypeDesc>(encodedArgs),
                "import_knowledge_secondary_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeSecondaryState>(encodedArgs),
                "import_knowledge_stat_modifier_desc" => BSATNHelpers.Decode<Reducer.ImportKnowledgeStatModifierDesc>(encodedArgs),
                "import_knowledge_vault_state" => BSATNHelpers.Decode<Reducer.ImportKnowledgeVaultState>(encodedArgs),
                "import_location_cache" => BSATNHelpers.Decode<Reducer.ImportLocationCache>(encodedArgs),
                "import_location_state" => BSATNHelpers.Decode<Reducer.ImportLocationState>(encodedArgs),
                "import_loot_chest_desc" => BSATNHelpers.Decode<Reducer.ImportLootChestDesc>(encodedArgs),
                "import_loot_chest_state" => BSATNHelpers.Decode<Reducer.ImportLootChestState>(encodedArgs),
                "import_loot_rarity_desc" => BSATNHelpers.Decode<Reducer.ImportLootRarityDesc>(encodedArgs),
                "import_loot_table_desc" => BSATNHelpers.Decode<Reducer.ImportLootTableDesc>(encodedArgs),
                "import_mobile_entity_state" => BSATNHelpers.Decode<Reducer.ImportMobileEntityState>(encodedArgs),
                "import_mounting_state" => BSATNHelpers.Decode<Reducer.ImportMountingState>(encodedArgs),
                "import_npc_desc" => BSATNHelpers.Decode<Reducer.ImportNpcDesc>(encodedArgs),
                "import_npc_state" => BSATNHelpers.Decode<Reducer.ImportNpcState>(encodedArgs),
                "import_onboarding_reward_desc" => BSATNHelpers.Decode<Reducer.ImportOnboardingRewardDesc>(encodedArgs),
                "import_onboarding_state" => BSATNHelpers.Decode<Reducer.ImportOnboardingState>(encodedArgs),
                "import_parameters_desc" => BSATNHelpers.Decode<Reducer.ImportParametersDesc>(encodedArgs),
                "import_pathfinding_desc" => BSATNHelpers.Decode<Reducer.ImportPathfindingDesc>(encodedArgs),
                "import_paved_tile_state" => BSATNHelpers.Decode<Reducer.ImportPavedTileState>(encodedArgs),
                "import_paving_tile_desc" => BSATNHelpers.Decode<Reducer.ImportPavingTileDesc>(encodedArgs),
                "import_pillar_shaping_desc" => BSATNHelpers.Decode<Reducer.ImportPillarShapingDesc>(encodedArgs),
                "import_player_action_desc" => BSATNHelpers.Decode<Reducer.ImportPlayerActionDesc>(encodedArgs),
                "import_player_action_state" => BSATNHelpers.Decode<Reducer.ImportPlayerActionState>(encodedArgs),
                "import_player_housing_desc" => BSATNHelpers.Decode<Reducer.ImportPlayerHousingDesc>(encodedArgs),
                "import_player_prefs_state" => BSATNHelpers.Decode<Reducer.ImportPlayerPrefsState>(encodedArgs),
                "import_player_state" => BSATNHelpers.Decode<Reducer.ImportPlayerState>(encodedArgs),
                "import_portal_state" => BSATNHelpers.Decode<Reducer.ImportPortalState>(encodedArgs),
                "import_private_parameters_desc" => BSATNHelpers.Decode<Reducer.ImportPrivateParametersDesc>(encodedArgs),
                "import_progressive_action_state" => BSATNHelpers.Decode<Reducer.ImportProgressiveActionState>(encodedArgs),
                "import_project_site_state" => BSATNHelpers.Decode<Reducer.ImportProjectSiteState>(encodedArgs),
                "import_rent_state" => BSATNHelpers.Decode<Reducer.ImportRentState>(encodedArgs),
                "import_reserved_name_desc" => BSATNHelpers.Decode<Reducer.ImportReservedNameDesc>(encodedArgs),
                "import_resource_clump_desc" => BSATNHelpers.Decode<Reducer.ImportResourceClumpDesc>(encodedArgs),
                "import_resource_count" => BSATNHelpers.Decode<Reducer.ImportResourceCount>(encodedArgs),
                "import_resource_desc" => BSATNHelpers.Decode<Reducer.ImportResourceDesc>(encodedArgs),
                "import_resource_growth_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportResourceGrowthRecipeDesc>(encodedArgs),
                "import_resource_placement_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportResourcePlacementRecipeDesc>(encodedArgs),
                "import_resource_state" => BSATNHelpers.Decode<Reducer.ImportResourceState>(encodedArgs),
                "import_resources_log" => BSATNHelpers.Decode<Reducer.ImportResourcesLog>(encodedArgs),
                "import_satiation_state" => BSATNHelpers.Decode<Reducer.ImportSatiationState>(encodedArgs),
                "import_secondary_knowledge_desc" => BSATNHelpers.Decode<Reducer.ImportSecondaryKnowledgeDesc>(encodedArgs),
                "import_server_identity" => BSATNHelpers.Decode<Reducer.ImportServerIdentity>(encodedArgs),
                "import_signed_in_player_state" => BSATNHelpers.Decode<Reducer.ImportSignedInPlayerState>(encodedArgs),
                "import_skill_desc" => BSATNHelpers.Decode<Reducer.ImportSkillDesc>(encodedArgs),
                "import_stamina_state" => BSATNHelpers.Decode<Reducer.ImportStaminaState>(encodedArgs),
                "import_target_state" => BSATNHelpers.Decode<Reducer.ImportTargetState>(encodedArgs),
                "import_targetable_state" => BSATNHelpers.Decode<Reducer.ImportTargetableState>(encodedArgs),
                "import_targeting_matrix_desc" => BSATNHelpers.Decode<Reducer.ImportTargetingMatrixDesc>(encodedArgs),
                "import_teleport_item_desc" => BSATNHelpers.Decode<Reducer.ImportTeleportItemDesc>(encodedArgs),
                "import_terraform_recipe_desc" => BSATNHelpers.Decode<Reducer.ImportTerraformRecipeDesc>(encodedArgs),
                "import_terrain_chunk_state" => BSATNHelpers.Decode<Reducer.ImportTerrainChunkState>(encodedArgs),
                "import_tool_desc" => BSATNHelpers.Decode<Reducer.ImportToolDesc>(encodedArgs),
                "import_tool_type_desc" => BSATNHelpers.Decode<Reducer.ImportToolTypeDesc>(encodedArgs),
                "import_trade_order_state" => BSATNHelpers.Decode<Reducer.ImportTradeOrderState>(encodedArgs),
                "import_trade_session_state" => BSATNHelpers.Decode<Reducer.ImportTradeSessionState>(encodedArgs),
                "import_traveler_task_desc" => BSATNHelpers.Decode<Reducer.ImportTravelerTaskDesc>(encodedArgs),
                "import_traveler_trade_order_desc" => BSATNHelpers.Decode<Reducer.ImportTravelerTradeOrderDesc>(encodedArgs),
                "import_user_moderation_state" => BSATNHelpers.Decode<Reducer.ImportUserModerationState>(encodedArgs),
                "import_user_state" => BSATNHelpers.Decode<Reducer.ImportUserState>(encodedArgs),
                "import_vault_state" => BSATNHelpers.Decode<Reducer.ImportVaultState>(encodedArgs),
                "import_wall_desc" => BSATNHelpers.Decode<Reducer.ImportWallDesc>(encodedArgs),
                "import_weapon_desc" => BSATNHelpers.Decode<Reducer.ImportWeaponDesc>(encodedArgs),
                "import_weapon_type_desc" => BSATNHelpers.Decode<Reducer.ImportWeaponTypeDesc>(encodedArgs),
                "import_world_region_name_state" => BSATNHelpers.Decode<Reducer.ImportWorldRegionNameState>(encodedArgs),
                "import_world_region_state" => BSATNHelpers.Decode<Reducer.ImportWorldRegionState>(encodedArgs),
                "insert_developer_identity" => BSATNHelpers.Decode<Reducer.InsertDeveloperIdentity>(encodedArgs),
                "insert_resources_log" => BSATNHelpers.Decode<Reducer.InsertResourcesLog>(encodedArgs),
                "insert_terrain_chunk" => BSATNHelpers.Decode<Reducer.InsertTerrainChunk>(encodedArgs),
                "interior_set_collapsed" => BSATNHelpers.Decode<Reducer.InteriorSetCollapsed>(encodedArgs),
                "interior_set_collapsed_scheduled" => BSATNHelpers.Decode<Reducer.InteriorSetCollapsedScheduled>(encodedArgs),
                "inventory_create_personal" => BSATNHelpers.Decode<Reducer.InventoryCreatePersonal>(encodedArgs),
                "inventory_sort" => BSATNHelpers.Decode<Reducer.InventorySort>(encodedArgs),
                "item_convert" => BSATNHelpers.Decode<Reducer.ItemConvert>(encodedArgs),
                "item_convert_start" => BSATNHelpers.Decode<Reducer.ItemConvertStart>(encodedArgs),
                "item_drop" => BSATNHelpers.Decode<Reducer.ItemDrop>(encodedArgs),
                "item_pick_up" => BSATNHelpers.Decode<Reducer.ItemPickUp>(encodedArgs),
                "item_stack_move" => BSATNHelpers.Decode<Reducer.ItemStackMove>(encodedArgs),
                "item_stack_move_all" => BSATNHelpers.Decode<Reducer.ItemStackMoveAll>(encodedArgs),
                "item_stack_split" => BSATNHelpers.Decode<Reducer.ItemStackSplit>(encodedArgs),
                "item_use" => BSATNHelpers.Decode<Reducer.ItemUse>(encodedArgs),
                "item_use_start" => BSATNHelpers.Decode<Reducer.ItemUseStart>(encodedArgs),
                "load_config" => BSATNHelpers.Decode<Reducer.LoadConfig>(encodedArgs),
                "log_claim_member_leaderboard" => BSATNHelpers.Decode<Reducer.LogClaimMemberLeaderboard>(encodedArgs),
                "log_claim_tier_leaderboard" => BSATNHelpers.Decode<Reducer.LogClaimTierLeaderboard>(encodedArgs),
                "loot_chest_despawn" => BSATNHelpers.Decode<Reducer.LootChestDespawn>(encodedArgs),
                "loot_chest_spawn" => BSATNHelpers.Decode<Reducer.LootChestSpawn>(encodedArgs),
                "npc_ai_agent_loop" => BSATNHelpers.Decode<Reducer.NpcAiAgentLoop>(encodedArgs),
                "on_durability_zero" => BSATNHelpers.Decode<Reducer.OnDurabilityZero>(encodedArgs),
                "on_inter_module_message_processed" => BSATNHelpers.Decode<Reducer.OnInterModuleMessageProcessed>(encodedArgs),
                "order_cancel" => BSATNHelpers.Decode<Reducer.OrderCancel>(encodedArgs),
                "order_collect" => BSATNHelpers.Decode<Reducer.OrderCollect>(encodedArgs),
                "order_edit_buy_order" => BSATNHelpers.Decode<Reducer.OrderEditBuyOrder>(encodedArgs),
                "order_edit_sell_order" => BSATNHelpers.Decode<Reducer.OrderEditSellOrder>(encodedArgs),
                "order_post_buy_order" => BSATNHelpers.Decode<Reducer.OrderPostBuyOrder>(encodedArgs),
                "order_post_sell_order" => BSATNHelpers.Decode<Reducer.OrderPostSellOrder>(encodedArgs),
                "passive_craft_cancel" => BSATNHelpers.Decode<Reducer.PassiveCraftCancel>(encodedArgs),
                "passive_craft_collect" => BSATNHelpers.Decode<Reducer.PassiveCraftCollect>(encodedArgs),
                "passive_craft_collect_all" => BSATNHelpers.Decode<Reducer.PassiveCraftCollectAll>(encodedArgs),
                "passive_craft_process" => BSATNHelpers.Decode<Reducer.PassiveCraftProcess>(encodedArgs),
                "passive_craft_queue" => BSATNHelpers.Decode<Reducer.PassiveCraftQueue>(encodedArgs),
                "pause_play_timer" => BSATNHelpers.Decode<Reducer.PausePlayTimer>(encodedArgs),
                "paving_destroy_tile" => BSATNHelpers.Decode<Reducer.PavingDestroyTile>(encodedArgs),
                "paving_destroy_tile_start" => BSATNHelpers.Decode<Reducer.PavingDestroyTileStart>(encodedArgs),
                "paving_place_tile" => BSATNHelpers.Decode<Reducer.PavingPlaceTile>(encodedArgs),
                "paving_place_tile_start" => BSATNHelpers.Decode<Reducer.PavingPlaceTileStart>(encodedArgs),
                "permission_edit" => BSATNHelpers.Decode<Reducer.PermissionEdit>(encodedArgs),
                "pillar_shaping_destroy" => BSATNHelpers.Decode<Reducer.PillarShapingDestroy>(encodedArgs),
                "pillar_shaping_destroy_start" => BSATNHelpers.Decode<Reducer.PillarShapingDestroyStart>(encodedArgs),
                "pillar_shaping_place_pillar" => BSATNHelpers.Decode<Reducer.PillarShapingPlacePillar>(encodedArgs),
                "pillar_shaping_place_pillar_start" => BSATNHelpers.Decode<Reducer.PillarShapingPlacePillarStart>(encodedArgs),
                "player_action_cancel" => BSATNHelpers.Decode<Reducer.PlayerActionCancel>(encodedArgs),
                "player_cancel_region_transfer" => BSATNHelpers.Decode<Reducer.PlayerCancelRegionTransfer>(encodedArgs),
                "player_clear_action_state" => BSATNHelpers.Decode<Reducer.PlayerClearActionState>(encodedArgs),
                "player_climb" => BSATNHelpers.Decode<Reducer.PlayerClimb>(encodedArgs),
                "player_climb_start" => BSATNHelpers.Decode<Reducer.PlayerClimbStart>(encodedArgs),
                "player_complete_task" => BSATNHelpers.Decode<Reducer.PlayerCompleteTask>(encodedArgs),
                "player_death_start" => BSATNHelpers.Decode<Reducer.PlayerDeathStart>(encodedArgs),
                "player_dismiss_alert" => BSATNHelpers.Decode<Reducer.PlayerDismissAlert>(encodedArgs),
                "player_duel_initiate" => BSATNHelpers.Decode<Reducer.PlayerDuelInitiate>(encodedArgs),
                "player_elevator_arrive" => BSATNHelpers.Decode<Reducer.PlayerElevatorArrive>(encodedArgs),
                "player_housing_change_entrance" => BSATNHelpers.Decode<Reducer.PlayerHousingChangeEntrance>(encodedArgs),
                "player_housing_enter" => BSATNHelpers.Decode<Reducer.PlayerHousingEnter>(encodedArgs),
                "player_housing_evict_player" => BSATNHelpers.Decode<Reducer.PlayerHousingEvictPlayer>(encodedArgs),
                "player_housing_evict_player_complete" => BSATNHelpers.Decode<Reducer.PlayerHousingEvictPlayerComplete>(encodedArgs),
                "player_housing_income_agent_loop" => BSATNHelpers.Decode<Reducer.PlayerHousingIncomeAgentLoop>(encodedArgs),
                "player_housing_request_access" => BSATNHelpers.Decode<Reducer.PlayerHousingRequestAccess>(encodedArgs),
                "player_housing_update" => BSATNHelpers.Decode<Reducer.PlayerHousingUpdate>(encodedArgs),
                "player_move" => BSATNHelpers.Decode<Reducer.PlayerMove>(encodedArgs),
                "player_notification_event_reducer" => BSATNHelpers.Decode<Reducer.PlayerNotificationEventReducer>(encodedArgs),
                "player_queue_join" => BSATNHelpers.Decode<Reducer.PlayerQueueJoin>(encodedArgs),
                "player_queue_leave" => BSATNHelpers.Decode<Reducer.PlayerQueueLeave>(encodedArgs),
                "player_regen_agent_loop" => BSATNHelpers.Decode<Reducer.PlayerRegenAgentLoop>(encodedArgs),
                "player_region_crossover" => BSATNHelpers.Decode<Reducer.PlayerRegionCrossover>(encodedArgs),
                "player_region_transfer_event_reducer" => BSATNHelpers.Decode<Reducer.PlayerRegionTransferEventReducer>(encodedArgs),
                "player_respawn" => BSATNHelpers.Decode<Reducer.PlayerRespawn>(encodedArgs),
                "player_set_default_deployable" => BSATNHelpers.Decode<Reducer.PlayerSetDefaultDeployable>(encodedArgs),
                "player_set_name_outcome_event_reducer" => BSATNHelpers.Decode<Reducer.PlayerSetNameOutcomeEventReducer>(encodedArgs),
                "player_teleport_home" => BSATNHelpers.Decode<Reducer.PlayerTeleportHome>(encodedArgs),
                "player_teleport_home_start" => BSATNHelpers.Decode<Reducer.PlayerTeleportHomeStart>(encodedArgs),
                "player_teleport_waystone" => BSATNHelpers.Decode<Reducer.PlayerTeleportWaystone>(encodedArgs),
                "player_teleport_waystone_start" => BSATNHelpers.Decode<Reducer.PlayerTeleportWaystoneStart>(encodedArgs),
                "player_use_elevator" => BSATNHelpers.Decode<Reducer.PlayerUseElevator>(encodedArgs),
                "player_vote_answer" => BSATNHelpers.Decode<Reducer.PlayerVoteAnswer>(encodedArgs),
                "player_vote_conclude" => BSATNHelpers.Decode<Reducer.PlayerVoteConclude>(encodedArgs),
                "pocket_swap_contents" => BSATNHelpers.Decode<Reducer.PocketSwapContents>(encodedArgs),
                "portal_enter" => BSATNHelpers.Decode<Reducer.PortalEnter>(encodedArgs),
                "process_inter_module_message" => BSATNHelpers.Decode<Reducer.ProcessInterModuleMessage>(encodedArgs),
                "project_site_add_materials" => BSATNHelpers.Decode<Reducer.ProjectSiteAddMaterials>(encodedArgs),
                "project_site_advance_project" => BSATNHelpers.Decode<Reducer.ProjectSiteAdvanceProject>(encodedArgs),
                "project_site_advance_project_start" => BSATNHelpers.Decode<Reducer.ProjectSiteAdvanceProjectStart>(encodedArgs),
                "project_site_cancel" => BSATNHelpers.Decode<Reducer.ProjectSiteCancel>(encodedArgs),
                "project_site_place" => BSATNHelpers.Decode<Reducer.ProjectSitePlace>(encodedArgs),
                "region_popuplation_agent_loop" => BSATNHelpers.Decode<Reducer.RegionPopuplationAgentLoop>(encodedArgs),
                "rent_add_listing" => BSATNHelpers.Decode<Reducer.RentAddListing>(encodedArgs),
                "rent_add_tenant" => BSATNHelpers.Decode<Reducer.RentAddTenant>(encodedArgs),
                "rent_collect_eviction_fee" => BSATNHelpers.Decode<Reducer.RentCollectEvictionFee>(encodedArgs),
                "rent_collector_agent_loop" => BSATNHelpers.Decode<Reducer.RentCollectorAgentLoop>(encodedArgs),
                "rent_deposit_coins" => BSATNHelpers.Decode<Reducer.RentDepositCoins>(encodedArgs),
                "rent_evict" => BSATNHelpers.Decode<Reducer.RentEvict>(encodedArgs),
                "rent_evict_term" => BSATNHelpers.Decode<Reducer.RentEvictTerm>(encodedArgs),
                "rent_purchase" => BSATNHelpers.Decode<Reducer.RentPurchase>(encodedArgs),
                "rent_remove_tenant" => BSATNHelpers.Decode<Reducer.RentRemoveTenant>(encodedArgs),
                "rent_set_daily_rate" => BSATNHelpers.Decode<Reducer.RentSetDailyRate>(encodedArgs),
                "rent_terminate" => BSATNHelpers.Decode<Reducer.RentTerminate>(encodedArgs),
                "rent_unlist" => BSATNHelpers.Decode<Reducer.RentUnlist>(encodedArgs),
                "report_chat_message" => BSATNHelpers.Decode<Reducer.ReportChatMessage>(encodedArgs),
                "report_player" => BSATNHelpers.Decode<Reducer.ReportPlayer>(encodedArgs),
                "reset_chunk_index" => BSATNHelpers.Decode<Reducer.ResetChunkIndex>(encodedArgs),
                "reset_chunk_index_with_dimension" => BSATNHelpers.Decode<Reducer.ResetChunkIndexWithDimension>(encodedArgs),
                "reset_mobile_entity_position" => BSATNHelpers.Decode<Reducer.ResetMobileEntityPosition>(encodedArgs),
                "reset_onboarding" => BSATNHelpers.Decode<Reducer.ResetOnboarding>(encodedArgs),
                "resource_spawn_scheduled" => BSATNHelpers.Decode<Reducer.ResourceSpawnScheduled>(encodedArgs),
                "resources_regen" => BSATNHelpers.Decode<Reducer.ResourcesRegen>(encodedArgs),
                "respawn_interior_npcs" => BSATNHelpers.Decode<Reducer.RespawnInteriorNpcs>(encodedArgs),
                "respawn_resource_in_chunk" => BSATNHelpers.Decode<Reducer.RespawnResourceInChunk>(encodedArgs),
                "retrieve_lost_item" => BSATNHelpers.Decode<Reducer.RetrieveLostItem>(encodedArgs),
                "scroll_read" => BSATNHelpers.Decode<Reducer.ScrollRead>(encodedArgs),
                "search_for_closest_building" => BSATNHelpers.Decode<Reducer.SearchForClosestBuilding>(encodedArgs),
                "search_for_closest_building_type" => BSATNHelpers.Decode<Reducer.SearchForClosestBuildingType>(encodedArgs),
                "server_teleport_player" => BSATNHelpers.Decode<Reducer.ServerTeleportPlayer>(encodedArgs),
                "set_home" => BSATNHelpers.Decode<Reducer.SetHome>(encodedArgs),
                "sign_in" => BSATNHelpers.Decode<Reducer.SignIn>(encodedArgs),
                "sign_out" => BSATNHelpers.Decode<Reducer.SignOut>(encodedArgs),
                "sleep" => BSATNHelpers.Decode<Reducer.Sleep>(encodedArgs),
                "stage_achievement_desc" => BSATNHelpers.Decode<Reducer.StageAchievementDesc>(encodedArgs),
                "stage_alert_desc" => BSATNHelpers.Decode<Reducer.StageAlertDesc>(encodedArgs),
                "stage_biome_desc" => BSATNHelpers.Decode<Reducer.StageBiomeDesc>(encodedArgs),
                "stage_buff_desc" => BSATNHelpers.Decode<Reducer.StageBuffDesc>(encodedArgs),
                "stage_buff_type_desc" => BSATNHelpers.Decode<Reducer.StageBuffTypeDesc>(encodedArgs),
                "stage_building_claim_desc" => BSATNHelpers.Decode<Reducer.StageBuildingClaimDesc>(encodedArgs),
                "stage_building_desc" => BSATNHelpers.Decode<Reducer.StageBuildingDesc>(encodedArgs),
                "stage_building_portal_desc" => BSATNHelpers.Decode<Reducer.StageBuildingPortalDesc>(encodedArgs),
                "stage_building_repairs_desc" => BSATNHelpers.Decode<Reducer.StageBuildingRepairsDesc>(encodedArgs),
                "stage_building_spawn_desc" => BSATNHelpers.Decode<Reducer.StageBuildingSpawnDesc>(encodedArgs),
                "stage_building_type_desc" => BSATNHelpers.Decode<Reducer.StageBuildingTypeDesc>(encodedArgs),
                "stage_cargo_desc" => BSATNHelpers.Decode<Reducer.StageCargoDesc>(encodedArgs),
                "stage_character_stat_desc" => BSATNHelpers.Decode<Reducer.StageCharacterStatDesc>(encodedArgs),
                "stage_chest_rarity_desc" => BSATNHelpers.Decode<Reducer.StageChestRarityDesc>(encodedArgs),
                "stage_claim_tech_desc" => BSATNHelpers.Decode<Reducer.StageClaimTechDesc>(encodedArgs),
                "stage_claim_tile_cost" => BSATNHelpers.Decode<Reducer.StageClaimTileCost>(encodedArgs),
                "stage_climb_requirement_desc" => BSATNHelpers.Decode<Reducer.StageClimbRequirementDesc>(encodedArgs),
                "stage_clothing_desc" => BSATNHelpers.Decode<Reducer.StageClothingDesc>(encodedArgs),
                "stage_collectible_desc" => BSATNHelpers.Decode<Reducer.StageCollectibleDesc>(encodedArgs),
                "stage_combat_action_desc" => BSATNHelpers.Decode<Reducer.StageCombatActionDesc>(encodedArgs),
                "stage_construction_recipe_desc" => BSATNHelpers.Decode<Reducer.StageConstructionRecipeDesc>(encodedArgs),
                "stage_crafting_recipe_desc" => BSATNHelpers.Decode<Reducer.StageCraftingRecipeDesc>(encodedArgs),
                "stage_deconstruction_recipe_desc" => BSATNHelpers.Decode<Reducer.StageDeconstructionRecipeDesc>(encodedArgs),
                "stage_deployable_desc" => BSATNHelpers.Decode<Reducer.StageDeployableDesc>(encodedArgs),
                "stage_distant_visible_entity_desc" => BSATNHelpers.Decode<Reducer.StageDistantVisibleEntityDesc>(encodedArgs),
                "stage_elevator_desc" => BSATNHelpers.Decode<Reducer.StageElevatorDesc>(encodedArgs),
                "stage_emote_desc" => BSATNHelpers.Decode<Reducer.StageEmoteDesc>(encodedArgs),
                "stage_empire_colors_desc" => BSATNHelpers.Decode<Reducer.StageEmpireColorsDesc>(encodedArgs),
                "stage_empire_icon_desc" => BSATNHelpers.Decode<Reducer.StageEmpireIconDesc>(encodedArgs),
                "stage_empire_notification_desc" => BSATNHelpers.Decode<Reducer.StageEmpireNotificationDesc>(encodedArgs),
                "stage_empire_rank_desc" => BSATNHelpers.Decode<Reducer.StageEmpireRankDesc>(encodedArgs),
                "stage_empire_supplies_desc" => BSATNHelpers.Decode<Reducer.StageEmpireSuppliesDesc>(encodedArgs),
                "stage_empire_territory_desc" => BSATNHelpers.Decode<Reducer.StageEmpireTerritoryDesc>(encodedArgs),
                "stage_enemy_ai_params_desc" => BSATNHelpers.Decode<Reducer.StageEnemyAiParamsDesc>(encodedArgs),
                "stage_enemy_desc" => BSATNHelpers.Decode<Reducer.StageEnemyDesc>(encodedArgs),
                "stage_environment_debuff_desc" => BSATNHelpers.Decode<Reducer.StageEnvironmentDebuffDesc>(encodedArgs),
                "stage_equipment_desc" => BSATNHelpers.Decode<Reducer.StageEquipmentDesc>(encodedArgs),
                "stage_extraction_recipe_desc" => BSATNHelpers.Decode<Reducer.StageExtractionRecipeDesc>(encodedArgs),
                "stage_food_desc" => BSATNHelpers.Decode<Reducer.StageFoodDesc>(encodedArgs),
                "stage_gate_desc" => BSATNHelpers.Decode<Reducer.StageGateDesc>(encodedArgs),
                "stage_hexite_exchange_entry_desc" => BSATNHelpers.Decode<Reducer.StageHexiteExchangeEntryDesc>(encodedArgs),
                "stage_interior_environment_desc" => BSATNHelpers.Decode<Reducer.StageInteriorEnvironmentDesc>(encodedArgs),
                "stage_interior_instance_desc" => BSATNHelpers.Decode<Reducer.StageInteriorInstanceDesc>(encodedArgs),
                "stage_interior_network_desc" => BSATNHelpers.Decode<Reducer.StageInteriorNetworkDesc>(encodedArgs),
                "stage_interior_portal_connections_desc" => BSATNHelpers.Decode<Reducer.StageInteriorPortalConnectionsDesc>(encodedArgs),
                "stage_interior_shape_desc" => BSATNHelpers.Decode<Reducer.StageInteriorShapeDesc>(encodedArgs),
                "stage_interior_spawn_desc" => BSATNHelpers.Decode<Reducer.StageInteriorSpawnDesc>(encodedArgs),
                "stage_item_conversion_recipe_desc" => BSATNHelpers.Decode<Reducer.StageItemConversionRecipeDesc>(encodedArgs),
                "stage_item_desc" => BSATNHelpers.Decode<Reducer.StageItemDesc>(encodedArgs),
                "stage_item_list_desc" => BSATNHelpers.Decode<Reducer.StageItemListDesc>(encodedArgs),
                "stage_knowledge_scroll_desc" => BSATNHelpers.Decode<Reducer.StageKnowledgeScrollDesc>(encodedArgs),
                "stage_knowledge_scroll_type_desc" => BSATNHelpers.Decode<Reducer.StageKnowledgeScrollTypeDesc>(encodedArgs),
                "stage_knowledge_stat_modifier_desc" => BSATNHelpers.Decode<Reducer.StageKnowledgeStatModifierDesc>(encodedArgs),
                "stage_loot_chest_desc" => BSATNHelpers.Decode<Reducer.StageLootChestDesc>(encodedArgs),
                "stage_loot_rarity_desc" => BSATNHelpers.Decode<Reducer.StageLootRarityDesc>(encodedArgs),
                "stage_loot_table_desc" => BSATNHelpers.Decode<Reducer.StageLootTableDesc>(encodedArgs),
                "stage_npc_desc" => BSATNHelpers.Decode<Reducer.StageNpcDesc>(encodedArgs),
                "stage_onboarding_reward_desc" => BSATNHelpers.Decode<Reducer.StageOnboardingRewardDesc>(encodedArgs),
                "stage_parameters_desc" => BSATNHelpers.Decode<Reducer.StageParametersDesc>(encodedArgs),
                "stage_pathfinding_desc" => BSATNHelpers.Decode<Reducer.StagePathfindingDesc>(encodedArgs),
                "stage_paving_tile_desc" => BSATNHelpers.Decode<Reducer.StagePavingTileDesc>(encodedArgs),
                "stage_pillar_shaping_desc" => BSATNHelpers.Decode<Reducer.StagePillarShapingDesc>(encodedArgs),
                "stage_player_action_desc" => BSATNHelpers.Decode<Reducer.StagePlayerActionDesc>(encodedArgs),
                "stage_player_housing_desc" => BSATNHelpers.Decode<Reducer.StagePlayerHousingDesc>(encodedArgs),
                "stage_private_parameters_desc" => BSATNHelpers.Decode<Reducer.StagePrivateParametersDesc>(encodedArgs),
                "stage_reserved_name_desc" => BSATNHelpers.Decode<Reducer.StageReservedNameDesc>(encodedArgs),
                "stage_resource_clump_desc" => BSATNHelpers.Decode<Reducer.StageResourceClumpDesc>(encodedArgs),
                "stage_resource_desc" => BSATNHelpers.Decode<Reducer.StageResourceDesc>(encodedArgs),
                "stage_resource_growth_recipe_desc" => BSATNHelpers.Decode<Reducer.StageResourceGrowthRecipeDesc>(encodedArgs),
                "stage_resource_placement_recipe_desc" => BSATNHelpers.Decode<Reducer.StageResourcePlacementRecipeDesc>(encodedArgs),
                "stage_secondary_knowledge_desc" => BSATNHelpers.Decode<Reducer.StageSecondaryKnowledgeDesc>(encodedArgs),
                "stage_skill_desc" => BSATNHelpers.Decode<Reducer.StageSkillDesc>(encodedArgs),
                "stage_targeting_matrix_desc" => BSATNHelpers.Decode<Reducer.StageTargetingMatrixDesc>(encodedArgs),
                "stage_teleport_item_desc" => BSATNHelpers.Decode<Reducer.StageTeleportItemDesc>(encodedArgs),
                "stage_terraform_recipe_desc" => BSATNHelpers.Decode<Reducer.StageTerraformRecipeDesc>(encodedArgs),
                "stage_tool_desc" => BSATNHelpers.Decode<Reducer.StageToolDesc>(encodedArgs),
                "stage_tool_type_desc" => BSATNHelpers.Decode<Reducer.StageToolTypeDesc>(encodedArgs),
                "stage_traveler_task_desc" => BSATNHelpers.Decode<Reducer.StageTravelerTaskDesc>(encodedArgs),
                "stage_traveler_trade_order_desc" => BSATNHelpers.Decode<Reducer.StageTravelerTradeOrderDesc>(encodedArgs),
                "stage_wall_desc" => BSATNHelpers.Decode<Reducer.StageWallDesc>(encodedArgs),
                "stage_weapon_desc" => BSATNHelpers.Decode<Reducer.StageWeaponDesc>(encodedArgs),
                "stage_weapon_type_desc" => BSATNHelpers.Decode<Reducer.StageWeaponTypeDesc>(encodedArgs),
                "start_agents" => BSATNHelpers.Decode<Reducer.StartAgents>(encodedArgs),
                "start_generating_world" => BSATNHelpers.Decode<Reducer.StartGeneratingWorld>(encodedArgs),
                "start_onboarding_quest" => BSATNHelpers.Decode<Reducer.StartOnboardingQuest>(encodedArgs),
                "starving_agent_loop" => BSATNHelpers.Decode<Reducer.StarvingAgentLoop>(encodedArgs),
                "stop_agents" => BSATNHelpers.Decode<Reducer.StopAgents>(encodedArgs),
                "synchronize_time" => BSATNHelpers.Decode<Reducer.SynchronizeTime>(encodedArgs),
                "target_update" => BSATNHelpers.Decode<Reducer.TargetUpdate>(encodedArgs),
                "teleportation_energy_regen_agent_loop" => BSATNHelpers.Decode<Reducer.TeleportationEnergyRegenAgentLoop>(encodedArgs),
                "terraform" => BSATNHelpers.Decode<Reducer.Terraform>(encodedArgs),
                "terraform_cancel" => BSATNHelpers.Decode<Reducer.TerraformCancel>(encodedArgs),
                "terraform_set_final_target" => BSATNHelpers.Decode<Reducer.TerraformSetFinalTarget>(encodedArgs),
                "terraform_start" => BSATNHelpers.Decode<Reducer.TerraformStart>(encodedArgs),
                "trade_accept" => BSATNHelpers.Decode<Reducer.TradeAccept>(encodedArgs),
                "trade_accept_session" => BSATNHelpers.Decode<Reducer.TradeAcceptSession>(encodedArgs),
                "trade_add_item" => BSATNHelpers.Decode<Reducer.TradeAddItem>(encodedArgs),
                "trade_cancel_server" => BSATNHelpers.Decode<Reducer.TradeCancelServer>(encodedArgs),
                "trade_decline" => BSATNHelpers.Decode<Reducer.TradeDecline>(encodedArgs),
                "trade_decline_session" => BSATNHelpers.Decode<Reducer.TradeDeclineSession>(encodedArgs),
                "trade_initiate_session" => BSATNHelpers.Decode<Reducer.TradeInitiateSession>(encodedArgs),
                "trade_remove_item" => BSATNHelpers.Decode<Reducer.TradeRemoveItem>(encodedArgs),
                "trade_sessions_agent_loop" => BSATNHelpers.Decode<Reducer.TradeSessionsAgentLoop>(encodedArgs),
                "trade_swap_pockets" => BSATNHelpers.Decode<Reducer.TradeSwapPockets>(encodedArgs),
                "transfer_player_delayed" => BSATNHelpers.Decode<Reducer.TransferPlayerDelayed>(encodedArgs),
                "traveler_task_agent_loop" => BSATNHelpers.Decode<Reducer.TravelerTaskAgentLoop>(encodedArgs),
                "update_scheduled_timers_from_static_data" => BSATNHelpers.Decode<Reducer.UpdateScheduledTimersFromStaticData>(encodedArgs),
                var reducer => throw new ArgumentOutOfRangeException("Reducer", $"Unknown reducer {reducer}")
            };
        }

        protected override IEventContext ToEventContext(Event<Reducer> Event) =>
        new EventContext(this, Event);

        protected override IReducerEventContext ToReducerEventContext(ReducerEvent<Reducer> reducerEvent) =>
        new ReducerEventContext(this, reducerEvent);

        protected override ISubscriptionEventContext MakeSubscriptionEventContext() =>
        new SubscriptionEventContext(this);

        protected override IErrorContext ToErrorContext(Exception exception) =>
        new ErrorContext(this, exception);

        protected override bool Dispatch(IReducerEventContext context, Reducer reducer)
        {
            var eventContext = (ReducerEventContext)context;
            return reducer switch
            {
                Reducer.AchievementClaim args => Reducers.InvokeAchievementClaim(eventContext, args),
                Reducer.AcquireKnowledgeFromEntities args => Reducers.InvokeAcquireKnowledgeFromEntities(eventContext, args),
                Reducer.AdminAlpha3CompleteOnboarding args => Reducers.InvokeAdminAlpha3CompleteOnboarding(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToFifthTempleQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToFifthTempleQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToFirstExpandQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToFirstExpandQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToFirstTempleQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToFirstTempleQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToFourthExpandQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToFourthExpandQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToFourthTempleQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToFourthTempleQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToSecondExpandQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToSecondExpandQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToSecondTempleQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToSecondTempleQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToThirdExpandQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToThirdExpandQuest(eventContext, args),
                Reducer.AdminAlpha3ResetOnboardingToThirdTempleQuest args => Reducers.InvokeAdminAlpha3ResetOnboardingToThirdTempleQuest(eventContext, args),
                Reducer.AdminBroadcastMsgRegion args => Reducers.InvokeAdminBroadcastMsgRegion(eventContext, args),
                Reducer.AdminCapSkill args => Reducers.InvokeAdminCapSkill(eventContext, args),
                Reducer.AdminCheckClosedListingStates args => Reducers.InvokeAdminCheckClosedListingStates(eventContext, args),
                Reducer.AdminClearAllResources args => Reducers.InvokeAdminClearAllResources(eventContext, args),
                Reducer.AdminClearChunkResources args => Reducers.InvokeAdminClearChunkResources(eventContext, args),
                Reducer.AdminCollapseRuin args => Reducers.InvokeAdminCollapseRuin(eventContext, args),
                Reducer.AdminCollapseRuins args => Reducers.InvokeAdminCollapseRuins(eventContext, args),
                Reducer.AdminCompleteAllPassiveCrafts args => Reducers.InvokeAdminCompleteAllPassiveCrafts(eventContext, args),
                Reducer.AdminCountInventoryItems args => Reducers.InvokeAdminCountInventoryItems(eventContext, args),
                Reducer.AdminCreateChatMessage args => Reducers.InvokeAdminCreateChatMessage(eventContext, args),
                Reducer.AdminCreatePlayerReport args => Reducers.InvokeAdminCreatePlayerReport(eventContext, args),
                Reducer.AdminDeleteAllItemsOfType args => Reducers.InvokeAdminDeleteAllItemsOfType(eventContext, args),
                Reducer.AdminDeleteChatMessage args => Reducers.InvokeAdminDeleteChatMessage(eventContext, args),
                Reducer.AdminDespawnOverworldEnemies args => Reducers.InvokeAdminDespawnOverworldEnemies(eventContext, args),
                Reducer.AdminFindAllPlayersWithItem args => Reducers.InvokeAdminFindAllPlayersWithItem(eventContext, args),
                Reducer.AdminFindAllPlayersWithItemAboveQuantity args => Reducers.InvokeAdminFindAllPlayersWithItemAboveQuantity(eventContext, args),
                Reducer.AdminFindItemsInInventories args => Reducers.InvokeAdminFindItemsInInventories(eventContext, args),
                Reducer.AdminFindItemsInTrades args => Reducers.InvokeAdminFindItemsInTrades(eventContext, args),
                Reducer.AdminGrantCollectibles args => Reducers.InvokeAdminGrantCollectibles(eventContext, args),
                Reducer.AdminModifyChatMessage args => Reducers.InvokeAdminModifyChatMessage(eventContext, args),
                Reducer.AdminRenameBuilding args => Reducers.InvokeAdminRenameBuilding(eventContext, args),
                Reducer.AdminRenameBuildingCoord args => Reducers.InvokeAdminRenameBuildingCoord(eventContext, args),
                Reducer.AdminRenameBuildingEntity args => Reducers.InvokeAdminRenameBuildingEntity(eventContext, args),
                Reducer.AdminRenameClaim args => Reducers.InvokeAdminRenameClaim(eventContext, args),
                Reducer.AdminRenameClaimEntity args => Reducers.InvokeAdminRenameClaimEntity(eventContext, args),
                Reducer.AdminRenameDeployable args => Reducers.InvokeAdminRenameDeployable(eventContext, args),
                Reducer.AdminRenameDeployableEntity args => Reducers.InvokeAdminRenameDeployableEntity(eventContext, args),
                Reducer.AdminResetAllHerdLocations args => Reducers.InvokeAdminResetAllHerdLocations(eventContext, args),
                Reducer.AdminResetHerdLocations args => Reducers.InvokeAdminResetHerdLocations(eventContext, args),
                Reducer.AdminResetOnboardingCompletely args => Reducers.InvokeAdminResetOnboardingCompletely(eventContext, args),
                Reducer.AdminResourceForceRegen args => Reducers.InvokeAdminResourceForceRegen(eventContext, args),
                Reducer.AdminResourcesDeleteVerySlow args => Reducers.InvokeAdminResourcesDeleteVerySlow(eventContext, args),
                Reducer.AdminResourcesLogCount args => Reducers.InvokeAdminResourcesLogCount(eventContext, args),
                Reducer.AdminRestoreAllCollapsedRuins args => Reducers.InvokeAdminRestoreAllCollapsedRuins(eventContext, args),
                Reducer.AdminRestorePlayerState args => Reducers.InvokeAdminRestorePlayerState(eventContext, args),
                Reducer.AdminRestorePlayerStateScheduled args => Reducers.InvokeAdminRestorePlayerStateScheduled(eventContext, args),
                Reducer.AdminSetSignText args => Reducers.InvokeAdminSetSignText(eventContext, args),
                Reducer.AdminSetSignTextCoord args => Reducers.InvokeAdminSetSignTextCoord(eventContext, args),
                Reducer.AdminSetSignTextEntity args => Reducers.InvokeAdminSetSignTextEntity(eventContext, args),
                Reducer.AdminSignOut args => Reducers.InvokeAdminSignOut(eventContext, args),
                Reducer.AdminSignOutAllRegion args => Reducers.InvokeAdminSignOutAllRegion(eventContext, args),
                Reducer.AdminSignOutString args => Reducers.InvokeAdminSignOutString(eventContext, args),
                Reducer.AdminUpdateHousingPortals args => Reducers.InvokeAdminUpdateHousingPortals(eventContext, args),
                Reducer.AdminUpdateLightSourceStates args => Reducers.InvokeAdminUpdateLightSourceStates(eventContext, args),
                Reducer.Attack args => Reducers.InvokeAttack(eventContext, args),
                Reducer.AttackImpact args => Reducers.InvokeAttackImpact(eventContext, args),
                Reducer.AttackScheduled args => Reducers.InvokeAttackScheduled(eventContext, args),
                Reducer.AttackStart args => Reducers.InvokeAttackStart(eventContext, args),
                Reducer.AutoLogoutLoop args => Reducers.InvokeAutoLogoutLoop(eventContext, args),
                Reducer.BarterStallOrderAccept args => Reducers.InvokeBarterStallOrderAccept(eventContext, args),
                Reducer.BarterStallOrderCreate args => Reducers.InvokeBarterStallOrderCreate(eventContext, args),
                Reducer.BarterStallOrderDelete args => Reducers.InvokeBarterStallOrderDelete(eventContext, args),
                Reducer.BarterStallSetMarketModeEnabled args => Reducers.InvokeBarterStallSetMarketModeEnabled(eventContext, args),
                Reducer.BlueprintPlace args => Reducers.InvokeBlueprintPlace(eventContext, args),
                Reducer.BuildingDecayAgentLoop args => Reducers.InvokeBuildingDecayAgentLoop(eventContext, args),
                Reducer.BuildingDeconstruct args => Reducers.InvokeBuildingDeconstruct(eventContext, args),
                Reducer.BuildingDeconstructStart args => Reducers.InvokeBuildingDeconstructStart(eventContext, args),
                Reducer.BuildingDespawn args => Reducers.InvokeBuildingDespawn(eventContext, args),
                Reducer.BuildingMove args => Reducers.InvokeBuildingMove(eventContext, args),
                Reducer.BuildingRepair args => Reducers.InvokeBuildingRepair(eventContext, args),
                Reducer.BuildingRepairStart args => Reducers.InvokeBuildingRepairStart(eventContext, args),
                Reducer.BuildingSetNickname args => Reducers.InvokeBuildingSetNickname(eventContext, args),
                Reducer.BuildingSetSignText args => Reducers.InvokeBuildingSetSignText(eventContext, args),
                Reducer.ChatCleanupAgentInsert args => Reducers.InvokeChatCleanupAgentInsert(eventContext, args),
                Reducer.ChatCleanupAgentLoop args => Reducers.InvokeChatCleanupAgentLoop(eventContext, args),
                Reducer.ChatPostMessage args => Reducers.InvokeChatPostMessage(eventContext, args),
                Reducer.CheatBuildingMove args => Reducers.InvokeCheatBuildingMove(eventContext, args),
                Reducer.CheatBuildingPlace args => Reducers.InvokeCheatBuildingPlace(eventContext, args),
                Reducer.CheatCargoGrant args => Reducers.InvokeCheatCargoGrant(eventContext, args),
                Reducer.CheatClaimTakeOwnership args => Reducers.InvokeCheatClaimTakeOwnership(eventContext, args),
                Reducer.CheatClaimTotemAddSupplies args => Reducers.InvokeCheatClaimTotemAddSupplies(eventContext, args),
                Reducer.CheatClaimTotemCompleteCurrentResearch args => Reducers.InvokeCheatClaimTotemCompleteCurrentResearch(eventContext, args),
                Reducer.CheatClaimTotemResearchAll args => Reducers.InvokeCheatClaimTotemResearchAll(eventContext, args),
                Reducer.CheatClearBuffsAndDebuffs args => Reducers.InvokeCheatClearBuffsAndDebuffs(eventContext, args),
                Reducer.CheatCompendiumPlaceEnemy args => Reducers.InvokeCheatCompendiumPlaceEnemy(eventContext, args),
                Reducer.CheatCompendiumPlaceResource args => Reducers.InvokeCheatCompendiumPlaceResource(eventContext, args),
                Reducer.CheatDeleteItem args => Reducers.InvokeCheatDeleteItem(eventContext, args),
                Reducer.CheatDeployableStore args => Reducers.InvokeCheatDeployableStore(eventContext, args),
                Reducer.CheatDiscoverMap args => Reducers.InvokeCheatDiscoverMap(eventContext, args),
                Reducer.CheatExperienceGrant args => Reducers.InvokeCheatExperienceGrant(eventContext, args),
                Reducer.CheatGrantKnowledge args => Reducers.InvokeCheatGrantKnowledge(eventContext, args),
                Reducer.CheatGrantTeleportEnergy args => Reducers.InvokeCheatGrantTeleportEnergy(eventContext, args),
                Reducer.CheatItemStackGrant args => Reducers.InvokeCheatItemStackGrant(eventContext, args),
                Reducer.CheatItemStackGrantAndEquip args => Reducers.InvokeCheatItemStackGrantAndEquip(eventContext, args),
                Reducer.CheatKill args => Reducers.InvokeCheatKill(eventContext, args),
                Reducer.CheatPavingAddTile args => Reducers.InvokeCheatPavingAddTile(eventContext, args),
                Reducer.CheatPavingDestroy args => Reducers.InvokeCheatPavingDestroy(eventContext, args),
                Reducer.CheatPillarShapingAddPillar args => Reducers.InvokeCheatPillarShapingAddPillar(eventContext, args),
                Reducer.CheatPillarShapingDestroy args => Reducers.InvokeCheatPillarShapingDestroy(eventContext, args),
                Reducer.CheatProjectSiteAddAllMaterials args => Reducers.InvokeCheatProjectSiteAddAllMaterials(eventContext, args),
                Reducer.CheatRemoveEntityBuilding args => Reducers.InvokeCheatRemoveEntityBuilding(eventContext, args),
                Reducer.CheatRemoveEntityEnemy args => Reducers.InvokeCheatRemoveEntityEnemy(eventContext, args),
                Reducer.CheatRemoveEntityResource args => Reducers.InvokeCheatRemoveEntityResource(eventContext, args),
                Reducer.CheatRemoveItemQuantity args => Reducers.InvokeCheatRemoveItemQuantity(eventContext, args),
                Reducer.CheatSetAiDebugState args => Reducers.InvokeCheatSetAiDebugState(eventContext, args),
                Reducer.CheatSpawnLootChest args => Reducers.InvokeCheatSpawnLootChest(eventContext, args),
                Reducer.CheatTeleportFloat args => Reducers.InvokeCheatTeleportFloat(eventContext, args),
                Reducer.CheatTerraform args => Reducers.InvokeCheatTerraform(eventContext, args),
                Reducer.CheatToggleActiveCollectible args => Reducers.InvokeCheatToggleActiveCollectible(eventContext, args),
                Reducer.CheatWarp args => Reducers.InvokeCheatWarp(eventContext, args),
                Reducer.ClaimAddMember args => Reducers.InvokeClaimAddMember(eventContext, args),
                Reducer.ClaimAddRecruitment args => Reducers.InvokeClaimAddRecruitment(eventContext, args),
                Reducer.ClaimAddTile args => Reducers.InvokeClaimAddTile(eventContext, args),
                Reducer.ClaimApplyForRecruitment args => Reducers.InvokeClaimApplyForRecruitment(eventContext, args),
                Reducer.ClaimLeave args => Reducers.InvokeClaimLeave(eventContext, args),
                Reducer.ClaimPurchaseSuppliesFromPlayer args => Reducers.InvokeClaimPurchaseSuppliesFromPlayer(eventContext, args),
                Reducer.ClaimRemoveMember args => Reducers.InvokeClaimRemoveMember(eventContext, args),
                Reducer.ClaimRemoveRecruitment args => Reducers.InvokeClaimRemoveRecruitment(eventContext, args),
                Reducer.ClaimRemoveTile args => Reducers.InvokeClaimRemoveTile(eventContext, args),
                Reducer.ClaimRename args => Reducers.InvokeClaimRename(eventContext, args),
                Reducer.ClaimResupply args => Reducers.InvokeClaimResupply(eventContext, args),
                Reducer.ClaimResupplyStart args => Reducers.InvokeClaimResupplyStart(eventContext, args),
                Reducer.ClaimSetMemberPermissions args => Reducers.InvokeClaimSetMemberPermissions(eventContext, args),
                Reducer.ClaimSetPurchaseSupplyPrice args => Reducers.InvokeClaimSetPurchaseSupplyPrice(eventContext, args),
                Reducer.ClaimSetPurchaseSupplyThreshold args => Reducers.InvokeClaimSetPurchaseSupplyThreshold(eventContext, args),
                Reducer.ClaimTakeOwnership args => Reducers.InvokeClaimTakeOwnership(eventContext, args),
                Reducer.ClaimTechCancel args => Reducers.InvokeClaimTechCancel(eventContext, args),
                Reducer.ClaimTechLearn args => Reducers.InvokeClaimTechLearn(eventContext, args),
                Reducer.ClaimTechUnlockTech args => Reducers.InvokeClaimTechUnlockTech(eventContext, args),
                Reducer.ClaimTransferOwnership args => Reducers.InvokeClaimTransferOwnership(eventContext, args),
                Reducer.ClaimTreasuryDeposit args => Reducers.InvokeClaimTreasuryDeposit(eventContext, args),
                Reducer.ClaimWithdrawFromTreasury args => Reducers.InvokeClaimWithdrawFromTreasury(eventContext, args),
                Reducer.ClearStagedStaticData args => Reducers.InvokeClearStagedStaticData(eventContext, args),
                Reducer.ClosedListingCollect args => Reducers.InvokeClosedListingCollect(eventContext, args),
                Reducer.CollectStatsReducer args => Reducers.InvokeCollectStatsReducer(eventContext, args),
                Reducer.CollectibleActivate args => Reducers.InvokeCollectibleActivate(eventContext, args),
                Reducer.CommitStagedStaticData args => Reducers.InvokeCommitStagedStaticData(eventContext, args),
                Reducer.CompleteOnboardingQuest args => Reducers.InvokeCompleteOnboardingQuest(eventContext, args),
                Reducer.CompleteOnboardingState args => Reducers.InvokeCompleteOnboardingState(eventContext, args),
                Reducer.ConvertCollectibleToDeed args => Reducers.InvokeConvertCollectibleToDeed(eventContext, args),
                Reducer.ConvertDeedToCollectible args => Reducers.InvokeConvertDeedToCollectible(eventContext, args),
                Reducer.CraftCancel args => Reducers.InvokeCraftCancel(eventContext, args),
                Reducer.CraftCollect args => Reducers.InvokeCraftCollect(eventContext, args),
                Reducer.CraftCollectAll args => Reducers.InvokeCraftCollectAll(eventContext, args),
                Reducer.CraftContinue args => Reducers.InvokeCraftContinue(eventContext, args),
                Reducer.CraftContinueStart args => Reducers.InvokeCraftContinueStart(eventContext, args),
                Reducer.CraftInitiate args => Reducers.InvokeCraftInitiate(eventContext, args),
                Reducer.CraftInitiateStart args => Reducers.InvokeCraftInitiateStart(eventContext, args),
                Reducer.CraftSetPublic args => Reducers.InvokeCraftSetPublic(eventContext, args),
                Reducer.CurrentVersion args => Reducers.InvokeCurrentVersion(eventContext, args),
                Reducer.DayNightAgentLoop args => Reducers.InvokeDayNightAgentLoop(eventContext, args),
                Reducer.DeleteAllNpcs args => Reducers.InvokeDeleteAllNpcs(eventContext, args),
                Reducer.DeployableDeploy args => Reducers.InvokeDeployableDeploy(eventContext, args),
                Reducer.DeployableDeployStart args => Reducers.InvokeDeployableDeployStart(eventContext, args),
                Reducer.DeployableDismount args => Reducers.InvokeDeployableDismount(eventContext, args),
                Reducer.DeployableDismountScheduled args => Reducers.InvokeDeployableDismountScheduled(eventContext, args),
                Reducer.DeployableMount args => Reducers.InvokeDeployableMount(eventContext, args),
                Reducer.DeployableMove args => Reducers.InvokeDeployableMove(eventContext, args),
                Reducer.DeployableMoveOffBounds args => Reducers.InvokeDeployableMoveOffBounds(eventContext, args),
                Reducer.DeployableMoveOffClaim args => Reducers.InvokeDeployableMoveOffClaim(eventContext, args),
                Reducer.DeployableStore args => Reducers.InvokeDeployableStore(eventContext, args),
                Reducer.DeployableStoreStart args => Reducers.InvokeDeployableStoreStart(eventContext, args),
                Reducer.DestroyDimensionNetwork args => Reducers.InvokeDestroyDimensionNetwork(eventContext, args),
                Reducer.DevDeleteWorld args => Reducers.InvokeDevDeleteWorld(eventContext, args),
                Reducer.DiscoverEntities args => Reducers.InvokeDiscoverEntities(eventContext, args),
                Reducer.DroppedInventoryDespawn args => Reducers.InvokeDroppedInventoryDespawn(eventContext, args),
                Reducer.DroppedInventoryLoseOwnership args => Reducers.InvokeDroppedInventoryLoseOwnership(eventContext, args),
                Reducer.DuelAgentTimerLoop args => Reducers.InvokeDuelAgentTimerLoop(eventContext, args),
                Reducer.DuelDespawn args => Reducers.InvokeDuelDespawn(eventContext, args),
                Reducer.Eat args => Reducers.InvokeEat(eventContext, args),
                Reducer.Emote args => Reducers.InvokeEmote(eventContext, args),
                Reducer.EmoteStart args => Reducers.InvokeEmoteStart(eventContext, args),
                Reducer.EmpireAddSiegeSupplies args => Reducers.InvokeEmpireAddSiegeSupplies(eventContext, args),
                Reducer.EmpireClaimJoin args => Reducers.InvokeEmpireClaimJoin(eventContext, args),
                Reducer.EmpireCollectHexiteCapsule args => Reducers.InvokeEmpireCollectHexiteCapsule(eventContext, args),
                Reducer.EmpireDeploySiegeEngine args => Reducers.InvokeEmpireDeploySiegeEngine(eventContext, args),
                Reducer.EmpireDeploySiegeEngineStart args => Reducers.InvokeEmpireDeploySiegeEngineStart(eventContext, args),
                Reducer.EmpireQueueSupplies args => Reducers.InvokeEmpireQueueSupplies(eventContext, args),
                Reducer.EmpireResupplyNode args => Reducers.InvokeEmpireResupplyNode(eventContext, args),
                Reducer.EmpireResupplyNodeStart args => Reducers.InvokeEmpireResupplyNodeStart(eventContext, args),
                Reducer.EmpireSiegeDepletedWatchtower args => Reducers.InvokeEmpireSiegeDepletedWatchtower(eventContext, args),
                Reducer.EndGracePeriod args => Reducers.InvokeEndGracePeriod(eventContext, args),
                Reducer.EnemyClearAggro args => Reducers.InvokeEnemyClearAggro(eventContext, args),
                Reducer.EnemyDespawn args => Reducers.InvokeEnemyDespawn(eventContext, args),
                Reducer.EnemyDespawnFromMobMonitor args => Reducers.InvokeEnemyDespawnFromMobMonitor(eventContext, args),
                Reducer.EnemyDespawnFromMobMonitorBatch args => Reducers.InvokeEnemyDespawnFromMobMonitorBatch(eventContext, args),
                Reducer.EnemyMove args => Reducers.InvokeEnemyMove(eventContext, args),
                Reducer.EnemyMoveBatch args => Reducers.InvokeEnemyMoveBatch(eventContext, args),
                Reducer.EnemyRegenAgentLoop args => Reducers.InvokeEnemyRegenAgentLoop(eventContext, args),
                Reducer.EnemySetHealth args => Reducers.InvokeEnemySetHealth(eventContext, args),
                Reducer.EnemySetHealthBatch args => Reducers.InvokeEnemySetHealthBatch(eventContext, args),
                Reducer.EnemySpawn args => Reducers.InvokeEnemySpawn(eventContext, args),
                Reducer.EnemySpawnBatch args => Reducers.InvokeEnemySpawnBatch(eventContext, args),
                Reducer.EnemySpawnLoot args => Reducers.InvokeEnemySpawnLoot(eventContext, args),
                Reducer.EnvironmentDebuffAgentLoop args => Reducers.InvokeEnvironmentDebuffAgentLoop(eventContext, args),
                Reducer.EquipmentAdd args => Reducers.InvokeEquipmentAdd(eventContext, args),
                Reducer.EquipmentRemove args => Reducers.InvokeEquipmentRemove(eventContext, args),
                Reducer.Extract args => Reducers.InvokeExtract(eventContext, args),
                Reducer.ExtractStart args => Reducers.InvokeExtractStart(eventContext, args),
                Reducer.ForceStartAgents args => Reducers.InvokeForceStartAgents(eventContext, args),
                Reducer.GenerateDevIsland args => Reducers.InvokeGenerateDevIsland(eventContext, args),
                Reducer.GenerateFlatWorld args => Reducers.InvokeGenerateFlatWorld(eventContext, args),
                Reducer.GenerateWorld args => Reducers.InvokeGenerateWorld(eventContext, args),
                Reducer.GrowthAgentLoop args => Reducers.InvokeGrowthAgentLoop(eventContext, args),
                Reducer.HideDeployable args => Reducers.InvokeHideDeployable(eventContext, args),
                Reducer.IdentityConnected args => Reducers.InvokeIdentityConnected(eventContext, args),
                Reducer.IdentityDisconnected args => Reducers.InvokeIdentityDisconnected(eventContext, args),
                Reducer.ImportAchievementDesc args => Reducers.InvokeImportAchievementDesc(eventContext, args),
                Reducer.ImportActiveBuffState args => Reducers.InvokeImportActiveBuffState(eventContext, args),
                Reducer.ImportAdminBroadcast args => Reducers.InvokeImportAdminBroadcast(eventContext, args),
                Reducer.ImportAlertDesc args => Reducers.InvokeImportAlertDesc(eventContext, args),
                Reducer.ImportAlertState args => Reducers.InvokeImportAlertState(eventContext, args),
                Reducer.ImportAttackOutcomeState args => Reducers.InvokeImportAttackOutcomeState(eventContext, args),
                Reducer.ImportBiomeDesc args => Reducers.InvokeImportBiomeDesc(eventContext, args),
                Reducer.ImportBuffDesc args => Reducers.InvokeImportBuffDesc(eventContext, args),
                Reducer.ImportBuffTypeDesc args => Reducers.InvokeImportBuffTypeDesc(eventContext, args),
                Reducer.ImportBuildingClaimDesc args => Reducers.InvokeImportBuildingClaimDesc(eventContext, args),
                Reducer.ImportBuildingDesc args => Reducers.InvokeImportBuildingDesc(eventContext, args),
                Reducer.ImportBuildingPortalDesc args => Reducers.InvokeImportBuildingPortalDesc(eventContext, args),
                Reducer.ImportBuildingRepairsDesc args => Reducers.InvokeImportBuildingRepairsDesc(eventContext, args),
                Reducer.ImportBuildingSpawnDesc args => Reducers.InvokeImportBuildingSpawnDesc(eventContext, args),
                Reducer.ImportBuildingState args => Reducers.InvokeImportBuildingState(eventContext, args),
                Reducer.ImportBuildingTypeDesc args => Reducers.InvokeImportBuildingTypeDesc(eventContext, args),
                Reducer.ImportCargoDesc args => Reducers.InvokeImportCargoDesc(eventContext, args),
                Reducer.ImportCharacterStatDesc args => Reducers.InvokeImportCharacterStatDesc(eventContext, args),
                Reducer.ImportCharacterStatsState args => Reducers.InvokeImportCharacterStatsState(eventContext, args),
                Reducer.ImportChatMessageState args => Reducers.InvokeImportChatMessageState(eventContext, args),
                Reducer.ImportChestRarityDesc args => Reducers.InvokeImportChestRarityDesc(eventContext, args),
                Reducer.ImportClaimLocalState args => Reducers.InvokeImportClaimLocalState(eventContext, args),
                Reducer.ImportClaimRecruitmentState args => Reducers.InvokeImportClaimRecruitmentState(eventContext, args),
                Reducer.ImportClaimState args => Reducers.InvokeImportClaimState(eventContext, args),
                Reducer.ImportClaimTechDesc args => Reducers.InvokeImportClaimTechDesc(eventContext, args),
                Reducer.ImportClaimTechState args => Reducers.InvokeImportClaimTechState(eventContext, args),
                Reducer.ImportClaimTileCost args => Reducers.InvokeImportClaimTileCost(eventContext, args),
                Reducer.ImportClaimTileState args => Reducers.InvokeImportClaimTileState(eventContext, args),
                Reducer.ImportClimbRequirementDesc args => Reducers.InvokeImportClimbRequirementDesc(eventContext, args),
                Reducer.ImportClothingDesc args => Reducers.InvokeImportClothingDesc(eventContext, args),
                Reducer.ImportCollectibleDesc args => Reducers.InvokeImportCollectibleDesc(eventContext, args),
                Reducer.ImportCombatActionDesc args => Reducers.InvokeImportCombatActionDesc(eventContext, args),
                Reducer.ImportCombatState args => Reducers.InvokeImportCombatState(eventContext, args),
                Reducer.ImportConfig args => Reducers.InvokeImportConfig(eventContext, args),
                Reducer.ImportConstructionRecipeDesc args => Reducers.InvokeImportConstructionRecipeDesc(eventContext, args),
                Reducer.ImportCraftingRecipeDesc args => Reducers.InvokeImportCraftingRecipeDesc(eventContext, args),
                Reducer.ImportDeconstructionRecipeDesc args => Reducers.InvokeImportDeconstructionRecipeDesc(eventContext, args),
                Reducer.ImportDeployableDesc args => Reducers.InvokeImportDeployableDesc(eventContext, args),
                Reducer.ImportDeployableState args => Reducers.InvokeImportDeployableState(eventContext, args),
                Reducer.ImportDimensionDescriptionState args => Reducers.InvokeImportDimensionDescriptionState(eventContext, args),
                Reducer.ImportDimensionNetworkDescriptionState args => Reducers.InvokeImportDimensionNetworkDescriptionState(eventContext, args),
                Reducer.ImportDistantVisibleEntityDesc args => Reducers.InvokeImportDistantVisibleEntityDesc(eventContext, args),
                Reducer.ImportDroppedInventoryState args => Reducers.InvokeImportDroppedInventoryState(eventContext, args),
                Reducer.ImportElevatorDesc args => Reducers.InvokeImportElevatorDesc(eventContext, args),
                Reducer.ImportEmoteDesc args => Reducers.InvokeImportEmoteDesc(eventContext, args),
                Reducer.ImportEmpireColorsDesc args => Reducers.InvokeImportEmpireColorsDesc(eventContext, args),
                Reducer.ImportEmpireIconDesc args => Reducers.InvokeImportEmpireIconDesc(eventContext, args),
                Reducer.ImportEmpireNotificationDesc args => Reducers.InvokeImportEmpireNotificationDesc(eventContext, args),
                Reducer.ImportEmpireRankDesc args => Reducers.InvokeImportEmpireRankDesc(eventContext, args),
                Reducer.ImportEmpireSuppliesDesc args => Reducers.InvokeImportEmpireSuppliesDesc(eventContext, args),
                Reducer.ImportEmpireTerritoryDesc args => Reducers.InvokeImportEmpireTerritoryDesc(eventContext, args),
                Reducer.ImportEnemyAiParamsDesc args => Reducers.InvokeImportEnemyAiParamsDesc(eventContext, args),
                Reducer.ImportEnemyDesc args => Reducers.InvokeImportEnemyDesc(eventContext, args),
                Reducer.ImportEnemyState args => Reducers.InvokeImportEnemyState(eventContext, args),
                Reducer.ImportEnvironmentDebuffDesc args => Reducers.InvokeImportEnvironmentDebuffDesc(eventContext, args),
                Reducer.ImportEquipmentDesc args => Reducers.InvokeImportEquipmentDesc(eventContext, args),
                Reducer.ImportEquipmentState args => Reducers.InvokeImportEquipmentState(eventContext, args),
                Reducer.ImportExperienceState args => Reducers.InvokeImportExperienceState(eventContext, args),
                Reducer.ImportExplorationChunksState args => Reducers.InvokeImportExplorationChunksState(eventContext, args),
                Reducer.ImportExtractionRecipeDesc args => Reducers.InvokeImportExtractionRecipeDesc(eventContext, args),
                Reducer.ImportFoodDesc args => Reducers.InvokeImportFoodDesc(eventContext, args),
                Reducer.ImportFootprintTileState args => Reducers.InvokeImportFootprintTileState(eventContext, args),
                Reducer.ImportGateDesc args => Reducers.InvokeImportGateDesc(eventContext, args),
                Reducer.ImportGlobals args => Reducers.InvokeImportGlobals(eventContext, args),
                Reducer.ImportGrowthState args => Reducers.InvokeImportGrowthState(eventContext, args),
                Reducer.ImportHealthState args => Reducers.InvokeImportHealthState(eventContext, args),
                Reducer.ImportHerdCache args => Reducers.InvokeImportHerdCache(eventContext, args),
                Reducer.ImportHexiteExchangeEntryDesc args => Reducers.InvokeImportHexiteExchangeEntryDesc(eventContext, args),
                Reducer.ImportIdentityRole args => Reducers.InvokeImportIdentityRole(eventContext, args),
                Reducer.ImportInteriorCollapseTriggerState args => Reducers.InvokeImportInteriorCollapseTriggerState(eventContext, args),
                Reducer.ImportInteriorEnvironmentDesc args => Reducers.InvokeImportInteriorEnvironmentDesc(eventContext, args),
                Reducer.ImportInteriorInstanceDesc args => Reducers.InvokeImportInteriorInstanceDesc(eventContext, args),
                Reducer.ImportInteriorNetworkDesc args => Reducers.InvokeImportInteriorNetworkDesc(eventContext, args),
                Reducer.ImportInteriorPortalConnectionsDesc args => Reducers.InvokeImportInteriorPortalConnectionsDesc(eventContext, args),
                Reducer.ImportInteriorShapeDesc args => Reducers.InvokeImportInteriorShapeDesc(eventContext, args),
                Reducer.ImportInteriorSpawnDesc args => Reducers.InvokeImportInteriorSpawnDesc(eventContext, args),
                Reducer.ImportInventoryState args => Reducers.InvokeImportInventoryState(eventContext, args),
                Reducer.ImportItemConversionRecipeDesc args => Reducers.InvokeImportItemConversionRecipeDesc(eventContext, args),
                Reducer.ImportItemDesc args => Reducers.InvokeImportItemDesc(eventContext, args),
                Reducer.ImportItemListDesc args => Reducers.InvokeImportItemListDesc(eventContext, args),
                Reducer.ImportKnowledgeAchievementState args => Reducers.InvokeImportKnowledgeAchievementState(eventContext, args),
                Reducer.ImportKnowledgeBattleActionState args => Reducers.InvokeImportKnowledgeBattleActionState(eventContext, args),
                Reducer.ImportKnowledgeBuildingState args => Reducers.InvokeImportKnowledgeBuildingState(eventContext, args),
                Reducer.ImportKnowledgeCargoState args => Reducers.InvokeImportKnowledgeCargoState(eventContext, args),
                Reducer.ImportKnowledgeConstructionState args => Reducers.InvokeImportKnowledgeConstructionState(eventContext, args),
                Reducer.ImportKnowledgeCraftState args => Reducers.InvokeImportKnowledgeCraftState(eventContext, args),
                Reducer.ImportKnowledgeDeployableState args => Reducers.InvokeImportKnowledgeDeployableState(eventContext, args),
                Reducer.ImportKnowledgeEnemyState args => Reducers.InvokeImportKnowledgeEnemyState(eventContext, args),
                Reducer.ImportKnowledgeExtractState args => Reducers.InvokeImportKnowledgeExtractState(eventContext, args),
                Reducer.ImportKnowledgeItemState args => Reducers.InvokeImportKnowledgeItemState(eventContext, args),
                Reducer.ImportKnowledgeLoreState args => Reducers.InvokeImportKnowledgeLoreState(eventContext, args),
                Reducer.ImportKnowledgeNpcState args => Reducers.InvokeImportKnowledgeNpcState(eventContext, args),
                Reducer.ImportKnowledgePavingState args => Reducers.InvokeImportKnowledgePavingState(eventContext, args),
                Reducer.ImportKnowledgePillarShapingState args => Reducers.InvokeImportKnowledgePillarShapingState(eventContext, args),
                Reducer.ImportKnowledgeResourcePlacementState args => Reducers.InvokeImportKnowledgeResourcePlacementState(eventContext, args),
                Reducer.ImportKnowledgeResourceState args => Reducers.InvokeImportKnowledgeResourceState(eventContext, args),
                Reducer.ImportKnowledgeRuinsState args => Reducers.InvokeImportKnowledgeRuinsState(eventContext, args),
                Reducer.ImportKnowledgeScrollDesc args => Reducers.InvokeImportKnowledgeScrollDesc(eventContext, args),
                Reducer.ImportKnowledgeScrollTypeDesc args => Reducers.InvokeImportKnowledgeScrollTypeDesc(eventContext, args),
                Reducer.ImportKnowledgeSecondaryState args => Reducers.InvokeImportKnowledgeSecondaryState(eventContext, args),
                Reducer.ImportKnowledgeStatModifierDesc args => Reducers.InvokeImportKnowledgeStatModifierDesc(eventContext, args),
                Reducer.ImportKnowledgeVaultState args => Reducers.InvokeImportKnowledgeVaultState(eventContext, args),
                Reducer.ImportLocationCache args => Reducers.InvokeImportLocationCache(eventContext, args),
                Reducer.ImportLocationState args => Reducers.InvokeImportLocationState(eventContext, args),
                Reducer.ImportLootChestDesc args => Reducers.InvokeImportLootChestDesc(eventContext, args),
                Reducer.ImportLootChestState args => Reducers.InvokeImportLootChestState(eventContext, args),
                Reducer.ImportLootRarityDesc args => Reducers.InvokeImportLootRarityDesc(eventContext, args),
                Reducer.ImportLootTableDesc args => Reducers.InvokeImportLootTableDesc(eventContext, args),
                Reducer.ImportMobileEntityState args => Reducers.InvokeImportMobileEntityState(eventContext, args),
                Reducer.ImportMountingState args => Reducers.InvokeImportMountingState(eventContext, args),
                Reducer.ImportNpcDesc args => Reducers.InvokeImportNpcDesc(eventContext, args),
                Reducer.ImportNpcState args => Reducers.InvokeImportNpcState(eventContext, args),
                Reducer.ImportOnboardingRewardDesc args => Reducers.InvokeImportOnboardingRewardDesc(eventContext, args),
                Reducer.ImportOnboardingState args => Reducers.InvokeImportOnboardingState(eventContext, args),
                Reducer.ImportParametersDesc args => Reducers.InvokeImportParametersDesc(eventContext, args),
                Reducer.ImportPathfindingDesc args => Reducers.InvokeImportPathfindingDesc(eventContext, args),
                Reducer.ImportPavedTileState args => Reducers.InvokeImportPavedTileState(eventContext, args),
                Reducer.ImportPavingTileDesc args => Reducers.InvokeImportPavingTileDesc(eventContext, args),
                Reducer.ImportPillarShapingDesc args => Reducers.InvokeImportPillarShapingDesc(eventContext, args),
                Reducer.ImportPlayerActionDesc args => Reducers.InvokeImportPlayerActionDesc(eventContext, args),
                Reducer.ImportPlayerActionState args => Reducers.InvokeImportPlayerActionState(eventContext, args),
                Reducer.ImportPlayerHousingDesc args => Reducers.InvokeImportPlayerHousingDesc(eventContext, args),
                Reducer.ImportPlayerPrefsState args => Reducers.InvokeImportPlayerPrefsState(eventContext, args),
                Reducer.ImportPlayerState args => Reducers.InvokeImportPlayerState(eventContext, args),
                Reducer.ImportPortalState args => Reducers.InvokeImportPortalState(eventContext, args),
                Reducer.ImportPrivateParametersDesc args => Reducers.InvokeImportPrivateParametersDesc(eventContext, args),
                Reducer.ImportProgressiveActionState args => Reducers.InvokeImportProgressiveActionState(eventContext, args),
                Reducer.ImportProjectSiteState args => Reducers.InvokeImportProjectSiteState(eventContext, args),
                Reducer.ImportRentState args => Reducers.InvokeImportRentState(eventContext, args),
                Reducer.ImportReservedNameDesc args => Reducers.InvokeImportReservedNameDesc(eventContext, args),
                Reducer.ImportResourceClumpDesc args => Reducers.InvokeImportResourceClumpDesc(eventContext, args),
                Reducer.ImportResourceCount args => Reducers.InvokeImportResourceCount(eventContext, args),
                Reducer.ImportResourceDesc args => Reducers.InvokeImportResourceDesc(eventContext, args),
                Reducer.ImportResourceGrowthRecipeDesc args => Reducers.InvokeImportResourceGrowthRecipeDesc(eventContext, args),
                Reducer.ImportResourcePlacementRecipeDesc args => Reducers.InvokeImportResourcePlacementRecipeDesc(eventContext, args),
                Reducer.ImportResourceState args => Reducers.InvokeImportResourceState(eventContext, args),
                Reducer.ImportResourcesLog args => Reducers.InvokeImportResourcesLog(eventContext, args),
                Reducer.ImportSatiationState args => Reducers.InvokeImportSatiationState(eventContext, args),
                Reducer.ImportSecondaryKnowledgeDesc args => Reducers.InvokeImportSecondaryKnowledgeDesc(eventContext, args),
                Reducer.ImportServerIdentity args => Reducers.InvokeImportServerIdentity(eventContext, args),
                Reducer.ImportSignedInPlayerState args => Reducers.InvokeImportSignedInPlayerState(eventContext, args),
                Reducer.ImportSkillDesc args => Reducers.InvokeImportSkillDesc(eventContext, args),
                Reducer.ImportStaminaState args => Reducers.InvokeImportStaminaState(eventContext, args),
                Reducer.ImportTargetState args => Reducers.InvokeImportTargetState(eventContext, args),
                Reducer.ImportTargetableState args => Reducers.InvokeImportTargetableState(eventContext, args),
                Reducer.ImportTargetingMatrixDesc args => Reducers.InvokeImportTargetingMatrixDesc(eventContext, args),
                Reducer.ImportTeleportItemDesc args => Reducers.InvokeImportTeleportItemDesc(eventContext, args),
                Reducer.ImportTerraformRecipeDesc args => Reducers.InvokeImportTerraformRecipeDesc(eventContext, args),
                Reducer.ImportTerrainChunkState args => Reducers.InvokeImportTerrainChunkState(eventContext, args),
                Reducer.ImportToolDesc args => Reducers.InvokeImportToolDesc(eventContext, args),
                Reducer.ImportToolTypeDesc args => Reducers.InvokeImportToolTypeDesc(eventContext, args),
                Reducer.ImportTradeOrderState args => Reducers.InvokeImportTradeOrderState(eventContext, args),
                Reducer.ImportTradeSessionState args => Reducers.InvokeImportTradeSessionState(eventContext, args),
                Reducer.ImportTravelerTaskDesc args => Reducers.InvokeImportTravelerTaskDesc(eventContext, args),
                Reducer.ImportTravelerTradeOrderDesc args => Reducers.InvokeImportTravelerTradeOrderDesc(eventContext, args),
                Reducer.ImportUserModerationState args => Reducers.InvokeImportUserModerationState(eventContext, args),
                Reducer.ImportUserState args => Reducers.InvokeImportUserState(eventContext, args),
                Reducer.ImportVaultState args => Reducers.InvokeImportVaultState(eventContext, args),
                Reducer.ImportWallDesc args => Reducers.InvokeImportWallDesc(eventContext, args),
                Reducer.ImportWeaponDesc args => Reducers.InvokeImportWeaponDesc(eventContext, args),
                Reducer.ImportWeaponTypeDesc args => Reducers.InvokeImportWeaponTypeDesc(eventContext, args),
                Reducer.ImportWorldRegionNameState args => Reducers.InvokeImportWorldRegionNameState(eventContext, args),
                Reducer.ImportWorldRegionState args => Reducers.InvokeImportWorldRegionState(eventContext, args),
                Reducer.InsertDeveloperIdentity args => Reducers.InvokeInsertDeveloperIdentity(eventContext, args),
                Reducer.InsertResourcesLog args => Reducers.InvokeInsertResourcesLog(eventContext, args),
                Reducer.InsertTerrainChunk args => Reducers.InvokeInsertTerrainChunk(eventContext, args),
                Reducer.InteriorSetCollapsed args => Reducers.InvokeInteriorSetCollapsed(eventContext, args),
                Reducer.InteriorSetCollapsedScheduled args => Reducers.InvokeInteriorSetCollapsedScheduled(eventContext, args),
                Reducer.InventoryCreatePersonal args => Reducers.InvokeInventoryCreatePersonal(eventContext, args),
                Reducer.InventorySort args => Reducers.InvokeInventorySort(eventContext, args),
                Reducer.ItemConvert args => Reducers.InvokeItemConvert(eventContext, args),
                Reducer.ItemConvertStart args => Reducers.InvokeItemConvertStart(eventContext, args),
                Reducer.ItemDrop args => Reducers.InvokeItemDrop(eventContext, args),
                Reducer.ItemPickUp args => Reducers.InvokeItemPickUp(eventContext, args),
                Reducer.ItemStackMove args => Reducers.InvokeItemStackMove(eventContext, args),
                Reducer.ItemStackMoveAll args => Reducers.InvokeItemStackMoveAll(eventContext, args),
                Reducer.ItemStackSplit args => Reducers.InvokeItemStackSplit(eventContext, args),
                Reducer.ItemUse args => Reducers.InvokeItemUse(eventContext, args),
                Reducer.ItemUseStart args => Reducers.InvokeItemUseStart(eventContext, args),
                Reducer.LoadConfig args => Reducers.InvokeLoadConfig(eventContext, args),
                Reducer.LogClaimMemberLeaderboard args => Reducers.InvokeLogClaimMemberLeaderboard(eventContext, args),
                Reducer.LogClaimTierLeaderboard args => Reducers.InvokeLogClaimTierLeaderboard(eventContext, args),
                Reducer.LootChestDespawn args => Reducers.InvokeLootChestDespawn(eventContext, args),
                Reducer.LootChestSpawn args => Reducers.InvokeLootChestSpawn(eventContext, args),
                Reducer.NpcAiAgentLoop args => Reducers.InvokeNpcAiAgentLoop(eventContext, args),
                Reducer.OnDurabilityZero args => Reducers.InvokeOnDurabilityZero(eventContext, args),
                Reducer.OnInterModuleMessageProcessed args => Reducers.InvokeOnInterModuleMessageProcessed(eventContext, args),
                Reducer.OrderCancel args => Reducers.InvokeOrderCancel(eventContext, args),
                Reducer.OrderCollect args => Reducers.InvokeOrderCollect(eventContext, args),
                Reducer.OrderEditBuyOrder args => Reducers.InvokeOrderEditBuyOrder(eventContext, args),
                Reducer.OrderEditSellOrder args => Reducers.InvokeOrderEditSellOrder(eventContext, args),
                Reducer.OrderPostBuyOrder args => Reducers.InvokeOrderPostBuyOrder(eventContext, args),
                Reducer.OrderPostSellOrder args => Reducers.InvokeOrderPostSellOrder(eventContext, args),
                Reducer.PassiveCraftCancel args => Reducers.InvokePassiveCraftCancel(eventContext, args),
                Reducer.PassiveCraftCollect args => Reducers.InvokePassiveCraftCollect(eventContext, args),
                Reducer.PassiveCraftCollectAll args => Reducers.InvokePassiveCraftCollectAll(eventContext, args),
                Reducer.PassiveCraftProcess args => Reducers.InvokePassiveCraftProcess(eventContext, args),
                Reducer.PassiveCraftQueue args => Reducers.InvokePassiveCraftQueue(eventContext, args),
                Reducer.PausePlayTimer args => Reducers.InvokePausePlayTimer(eventContext, args),
                Reducer.PavingDestroyTile args => Reducers.InvokePavingDestroyTile(eventContext, args),
                Reducer.PavingDestroyTileStart args => Reducers.InvokePavingDestroyTileStart(eventContext, args),
                Reducer.PavingPlaceTile args => Reducers.InvokePavingPlaceTile(eventContext, args),
                Reducer.PavingPlaceTileStart args => Reducers.InvokePavingPlaceTileStart(eventContext, args),
                Reducer.PermissionEdit args => Reducers.InvokePermissionEdit(eventContext, args),
                Reducer.PillarShapingDestroy args => Reducers.InvokePillarShapingDestroy(eventContext, args),
                Reducer.PillarShapingDestroyStart args => Reducers.InvokePillarShapingDestroyStart(eventContext, args),
                Reducer.PillarShapingPlacePillar args => Reducers.InvokePillarShapingPlacePillar(eventContext, args),
                Reducer.PillarShapingPlacePillarStart args => Reducers.InvokePillarShapingPlacePillarStart(eventContext, args),
                Reducer.PlayerActionCancel args => Reducers.InvokePlayerActionCancel(eventContext, args),
                Reducer.PlayerCancelRegionTransfer args => Reducers.InvokePlayerCancelRegionTransfer(eventContext, args),
                Reducer.PlayerClearActionState args => Reducers.InvokePlayerClearActionState(eventContext, args),
                Reducer.PlayerClimb args => Reducers.InvokePlayerClimb(eventContext, args),
                Reducer.PlayerClimbStart args => Reducers.InvokePlayerClimbStart(eventContext, args),
                Reducer.PlayerCompleteTask args => Reducers.InvokePlayerCompleteTask(eventContext, args),
                Reducer.PlayerDeathStart args => Reducers.InvokePlayerDeathStart(eventContext, args),
                Reducer.PlayerDismissAlert args => Reducers.InvokePlayerDismissAlert(eventContext, args),
                Reducer.PlayerDuelInitiate args => Reducers.InvokePlayerDuelInitiate(eventContext, args),
                Reducer.PlayerElevatorArrive args => Reducers.InvokePlayerElevatorArrive(eventContext, args),
                Reducer.PlayerHousingChangeEntrance args => Reducers.InvokePlayerHousingChangeEntrance(eventContext, args),
                Reducer.PlayerHousingEnter args => Reducers.InvokePlayerHousingEnter(eventContext, args),
                Reducer.PlayerHousingEvictPlayer args => Reducers.InvokePlayerHousingEvictPlayer(eventContext, args),
                Reducer.PlayerHousingEvictPlayerComplete args => Reducers.InvokePlayerHousingEvictPlayerComplete(eventContext, args),
                Reducer.PlayerHousingIncomeAgentLoop args => Reducers.InvokePlayerHousingIncomeAgentLoop(eventContext, args),
                Reducer.PlayerHousingRequestAccess args => Reducers.InvokePlayerHousingRequestAccess(eventContext, args),
                Reducer.PlayerHousingUpdate args => Reducers.InvokePlayerHousingUpdate(eventContext, args),
                Reducer.PlayerMove args => Reducers.InvokePlayerMove(eventContext, args),
                Reducer.PlayerNotificationEventReducer args => Reducers.InvokePlayerNotificationEventReducer(eventContext, args),
                Reducer.PlayerQueueJoin args => Reducers.InvokePlayerQueueJoin(eventContext, args),
                Reducer.PlayerQueueLeave args => Reducers.InvokePlayerQueueLeave(eventContext, args),
                Reducer.PlayerRegenAgentLoop args => Reducers.InvokePlayerRegenAgentLoop(eventContext, args),
                Reducer.PlayerRegionCrossover args => Reducers.InvokePlayerRegionCrossover(eventContext, args),
                Reducer.PlayerRegionTransferEventReducer args => Reducers.InvokePlayerRegionTransferEventReducer(eventContext, args),
                Reducer.PlayerRespawn args => Reducers.InvokePlayerRespawn(eventContext, args),
                Reducer.PlayerSetDefaultDeployable args => Reducers.InvokePlayerSetDefaultDeployable(eventContext, args),
                Reducer.PlayerSetNameOutcomeEventReducer args => Reducers.InvokePlayerSetNameOutcomeEventReducer(eventContext, args),
                Reducer.PlayerTeleportHome args => Reducers.InvokePlayerTeleportHome(eventContext, args),
                Reducer.PlayerTeleportHomeStart args => Reducers.InvokePlayerTeleportHomeStart(eventContext, args),
                Reducer.PlayerTeleportWaystone args => Reducers.InvokePlayerTeleportWaystone(eventContext, args),
                Reducer.PlayerTeleportWaystoneStart args => Reducers.InvokePlayerTeleportWaystoneStart(eventContext, args),
                Reducer.PlayerUseElevator args => Reducers.InvokePlayerUseElevator(eventContext, args),
                Reducer.PlayerVoteAnswer args => Reducers.InvokePlayerVoteAnswer(eventContext, args),
                Reducer.PlayerVoteConclude args => Reducers.InvokePlayerVoteConclude(eventContext, args),
                Reducer.PocketSwapContents args => Reducers.InvokePocketSwapContents(eventContext, args),
                Reducer.PortalEnter args => Reducers.InvokePortalEnter(eventContext, args),
                Reducer.ProcessInterModuleMessage args => Reducers.InvokeProcessInterModuleMessage(eventContext, args),
                Reducer.ProjectSiteAddMaterials args => Reducers.InvokeProjectSiteAddMaterials(eventContext, args),
                Reducer.ProjectSiteAdvanceProject args => Reducers.InvokeProjectSiteAdvanceProject(eventContext, args),
                Reducer.ProjectSiteAdvanceProjectStart args => Reducers.InvokeProjectSiteAdvanceProjectStart(eventContext, args),
                Reducer.ProjectSiteCancel args => Reducers.InvokeProjectSiteCancel(eventContext, args),
                Reducer.ProjectSitePlace args => Reducers.InvokeProjectSitePlace(eventContext, args),
                Reducer.RegionPopuplationAgentLoop args => Reducers.InvokeRegionPopuplationAgentLoop(eventContext, args),
                Reducer.RentAddListing args => Reducers.InvokeRentAddListing(eventContext, args),
                Reducer.RentAddTenant args => Reducers.InvokeRentAddTenant(eventContext, args),
                Reducer.RentCollectEvictionFee args => Reducers.InvokeRentCollectEvictionFee(eventContext, args),
                Reducer.RentCollectorAgentLoop args => Reducers.InvokeRentCollectorAgentLoop(eventContext, args),
                Reducer.RentDepositCoins args => Reducers.InvokeRentDepositCoins(eventContext, args),
                Reducer.RentEvict args => Reducers.InvokeRentEvict(eventContext, args),
                Reducer.RentEvictTerm args => Reducers.InvokeRentEvictTerm(eventContext, args),
                Reducer.RentPurchase args => Reducers.InvokeRentPurchase(eventContext, args),
                Reducer.RentRemoveTenant args => Reducers.InvokeRentRemoveTenant(eventContext, args),
                Reducer.RentSetDailyRate args => Reducers.InvokeRentSetDailyRate(eventContext, args),
                Reducer.RentTerminate args => Reducers.InvokeRentTerminate(eventContext, args),
                Reducer.RentUnlist args => Reducers.InvokeRentUnlist(eventContext, args),
                Reducer.ReportChatMessage args => Reducers.InvokeReportChatMessage(eventContext, args),
                Reducer.ReportPlayer args => Reducers.InvokeReportPlayer(eventContext, args),
                Reducer.ResetChunkIndex args => Reducers.InvokeResetChunkIndex(eventContext, args),
                Reducer.ResetChunkIndexWithDimension args => Reducers.InvokeResetChunkIndexWithDimension(eventContext, args),
                Reducer.ResetMobileEntityPosition args => Reducers.InvokeResetMobileEntityPosition(eventContext, args),
                Reducer.ResetOnboarding args => Reducers.InvokeResetOnboarding(eventContext, args),
                Reducer.ResourceSpawnScheduled args => Reducers.InvokeResourceSpawnScheduled(eventContext, args),
                Reducer.ResourcesRegen args => Reducers.InvokeResourcesRegen(eventContext, args),
                Reducer.RespawnInteriorNpcs args => Reducers.InvokeRespawnInteriorNpcs(eventContext, args),
                Reducer.RespawnResourceInChunk args => Reducers.InvokeRespawnResourceInChunk(eventContext, args),
                Reducer.RetrieveLostItem args => Reducers.InvokeRetrieveLostItem(eventContext, args),
                Reducer.ScrollRead args => Reducers.InvokeScrollRead(eventContext, args),
                Reducer.SearchForClosestBuilding args => Reducers.InvokeSearchForClosestBuilding(eventContext, args),
                Reducer.SearchForClosestBuildingType args => Reducers.InvokeSearchForClosestBuildingType(eventContext, args),
                Reducer.ServerTeleportPlayer args => Reducers.InvokeServerTeleportPlayer(eventContext, args),
                Reducer.SetHome args => Reducers.InvokeSetHome(eventContext, args),
                Reducer.SignIn args => Reducers.InvokeSignIn(eventContext, args),
                Reducer.SignOut args => Reducers.InvokeSignOut(eventContext, args),
                Reducer.Sleep args => Reducers.InvokeSleep(eventContext, args),
                Reducer.StageAchievementDesc args => Reducers.InvokeStageAchievementDesc(eventContext, args),
                Reducer.StageAlertDesc args => Reducers.InvokeStageAlertDesc(eventContext, args),
                Reducer.StageBiomeDesc args => Reducers.InvokeStageBiomeDesc(eventContext, args),
                Reducer.StageBuffDesc args => Reducers.InvokeStageBuffDesc(eventContext, args),
                Reducer.StageBuffTypeDesc args => Reducers.InvokeStageBuffTypeDesc(eventContext, args),
                Reducer.StageBuildingClaimDesc args => Reducers.InvokeStageBuildingClaimDesc(eventContext, args),
                Reducer.StageBuildingDesc args => Reducers.InvokeStageBuildingDesc(eventContext, args),
                Reducer.StageBuildingPortalDesc args => Reducers.InvokeStageBuildingPortalDesc(eventContext, args),
                Reducer.StageBuildingRepairsDesc args => Reducers.InvokeStageBuildingRepairsDesc(eventContext, args),
                Reducer.StageBuildingSpawnDesc args => Reducers.InvokeStageBuildingSpawnDesc(eventContext, args),
                Reducer.StageBuildingTypeDesc args => Reducers.InvokeStageBuildingTypeDesc(eventContext, args),
                Reducer.StageCargoDesc args => Reducers.InvokeStageCargoDesc(eventContext, args),
                Reducer.StageCharacterStatDesc args => Reducers.InvokeStageCharacterStatDesc(eventContext, args),
                Reducer.StageChestRarityDesc args => Reducers.InvokeStageChestRarityDesc(eventContext, args),
                Reducer.StageClaimTechDesc args => Reducers.InvokeStageClaimTechDesc(eventContext, args),
                Reducer.StageClaimTileCost args => Reducers.InvokeStageClaimTileCost(eventContext, args),
                Reducer.StageClimbRequirementDesc args => Reducers.InvokeStageClimbRequirementDesc(eventContext, args),
                Reducer.StageClothingDesc args => Reducers.InvokeStageClothingDesc(eventContext, args),
                Reducer.StageCollectibleDesc args => Reducers.InvokeStageCollectibleDesc(eventContext, args),
                Reducer.StageCombatActionDesc args => Reducers.InvokeStageCombatActionDesc(eventContext, args),
                Reducer.StageConstructionRecipeDesc args => Reducers.InvokeStageConstructionRecipeDesc(eventContext, args),
                Reducer.StageCraftingRecipeDesc args => Reducers.InvokeStageCraftingRecipeDesc(eventContext, args),
                Reducer.StageDeconstructionRecipeDesc args => Reducers.InvokeStageDeconstructionRecipeDesc(eventContext, args),
                Reducer.StageDeployableDesc args => Reducers.InvokeStageDeployableDesc(eventContext, args),
                Reducer.StageDistantVisibleEntityDesc args => Reducers.InvokeStageDistantVisibleEntityDesc(eventContext, args),
                Reducer.StageElevatorDesc args => Reducers.InvokeStageElevatorDesc(eventContext, args),
                Reducer.StageEmoteDesc args => Reducers.InvokeStageEmoteDesc(eventContext, args),
                Reducer.StageEmpireColorsDesc args => Reducers.InvokeStageEmpireColorsDesc(eventContext, args),
                Reducer.StageEmpireIconDesc args => Reducers.InvokeStageEmpireIconDesc(eventContext, args),
                Reducer.StageEmpireNotificationDesc args => Reducers.InvokeStageEmpireNotificationDesc(eventContext, args),
                Reducer.StageEmpireRankDesc args => Reducers.InvokeStageEmpireRankDesc(eventContext, args),
                Reducer.StageEmpireSuppliesDesc args => Reducers.InvokeStageEmpireSuppliesDesc(eventContext, args),
                Reducer.StageEmpireTerritoryDesc args => Reducers.InvokeStageEmpireTerritoryDesc(eventContext, args),
                Reducer.StageEnemyAiParamsDesc args => Reducers.InvokeStageEnemyAiParamsDesc(eventContext, args),
                Reducer.StageEnemyDesc args => Reducers.InvokeStageEnemyDesc(eventContext, args),
                Reducer.StageEnvironmentDebuffDesc args => Reducers.InvokeStageEnvironmentDebuffDesc(eventContext, args),
                Reducer.StageEquipmentDesc args => Reducers.InvokeStageEquipmentDesc(eventContext, args),
                Reducer.StageExtractionRecipeDesc args => Reducers.InvokeStageExtractionRecipeDesc(eventContext, args),
                Reducer.StageFoodDesc args => Reducers.InvokeStageFoodDesc(eventContext, args),
                Reducer.StageGateDesc args => Reducers.InvokeStageGateDesc(eventContext, args),
                Reducer.StageHexiteExchangeEntryDesc args => Reducers.InvokeStageHexiteExchangeEntryDesc(eventContext, args),
                Reducer.StageInteriorEnvironmentDesc args => Reducers.InvokeStageInteriorEnvironmentDesc(eventContext, args),
                Reducer.StageInteriorInstanceDesc args => Reducers.InvokeStageInteriorInstanceDesc(eventContext, args),
                Reducer.StageInteriorNetworkDesc args => Reducers.InvokeStageInteriorNetworkDesc(eventContext, args),
                Reducer.StageInteriorPortalConnectionsDesc args => Reducers.InvokeStageInteriorPortalConnectionsDesc(eventContext, args),
                Reducer.StageInteriorShapeDesc args => Reducers.InvokeStageInteriorShapeDesc(eventContext, args),
                Reducer.StageInteriorSpawnDesc args => Reducers.InvokeStageInteriorSpawnDesc(eventContext, args),
                Reducer.StageItemConversionRecipeDesc args => Reducers.InvokeStageItemConversionRecipeDesc(eventContext, args),
                Reducer.StageItemDesc args => Reducers.InvokeStageItemDesc(eventContext, args),
                Reducer.StageItemListDesc args => Reducers.InvokeStageItemListDesc(eventContext, args),
                Reducer.StageKnowledgeScrollDesc args => Reducers.InvokeStageKnowledgeScrollDesc(eventContext, args),
                Reducer.StageKnowledgeScrollTypeDesc args => Reducers.InvokeStageKnowledgeScrollTypeDesc(eventContext, args),
                Reducer.StageKnowledgeStatModifierDesc args => Reducers.InvokeStageKnowledgeStatModifierDesc(eventContext, args),
                Reducer.StageLootChestDesc args => Reducers.InvokeStageLootChestDesc(eventContext, args),
                Reducer.StageLootRarityDesc args => Reducers.InvokeStageLootRarityDesc(eventContext, args),
                Reducer.StageLootTableDesc args => Reducers.InvokeStageLootTableDesc(eventContext, args),
                Reducer.StageNpcDesc args => Reducers.InvokeStageNpcDesc(eventContext, args),
                Reducer.StageOnboardingRewardDesc args => Reducers.InvokeStageOnboardingRewardDesc(eventContext, args),
                Reducer.StageParametersDesc args => Reducers.InvokeStageParametersDesc(eventContext, args),
                Reducer.StagePathfindingDesc args => Reducers.InvokeStagePathfindingDesc(eventContext, args),
                Reducer.StagePavingTileDesc args => Reducers.InvokeStagePavingTileDesc(eventContext, args),
                Reducer.StagePillarShapingDesc args => Reducers.InvokeStagePillarShapingDesc(eventContext, args),
                Reducer.StagePlayerActionDesc args => Reducers.InvokeStagePlayerActionDesc(eventContext, args),
                Reducer.StagePlayerHousingDesc args => Reducers.InvokeStagePlayerHousingDesc(eventContext, args),
                Reducer.StagePrivateParametersDesc args => Reducers.InvokeStagePrivateParametersDesc(eventContext, args),
                Reducer.StageReservedNameDesc args => Reducers.InvokeStageReservedNameDesc(eventContext, args),
                Reducer.StageResourceClumpDesc args => Reducers.InvokeStageResourceClumpDesc(eventContext, args),
                Reducer.StageResourceDesc args => Reducers.InvokeStageResourceDesc(eventContext, args),
                Reducer.StageResourceGrowthRecipeDesc args => Reducers.InvokeStageResourceGrowthRecipeDesc(eventContext, args),
                Reducer.StageResourcePlacementRecipeDesc args => Reducers.InvokeStageResourcePlacementRecipeDesc(eventContext, args),
                Reducer.StageSecondaryKnowledgeDesc args => Reducers.InvokeStageSecondaryKnowledgeDesc(eventContext, args),
                Reducer.StageSkillDesc args => Reducers.InvokeStageSkillDesc(eventContext, args),
                Reducer.StageTargetingMatrixDesc args => Reducers.InvokeStageTargetingMatrixDesc(eventContext, args),
                Reducer.StageTeleportItemDesc args => Reducers.InvokeStageTeleportItemDesc(eventContext, args),
                Reducer.StageTerraformRecipeDesc args => Reducers.InvokeStageTerraformRecipeDesc(eventContext, args),
                Reducer.StageToolDesc args => Reducers.InvokeStageToolDesc(eventContext, args),
                Reducer.StageToolTypeDesc args => Reducers.InvokeStageToolTypeDesc(eventContext, args),
                Reducer.StageTravelerTaskDesc args => Reducers.InvokeStageTravelerTaskDesc(eventContext, args),
                Reducer.StageTravelerTradeOrderDesc args => Reducers.InvokeStageTravelerTradeOrderDesc(eventContext, args),
                Reducer.StageWallDesc args => Reducers.InvokeStageWallDesc(eventContext, args),
                Reducer.StageWeaponDesc args => Reducers.InvokeStageWeaponDesc(eventContext, args),
                Reducer.StageWeaponTypeDesc args => Reducers.InvokeStageWeaponTypeDesc(eventContext, args),
                Reducer.StartAgents args => Reducers.InvokeStartAgents(eventContext, args),
                Reducer.StartGeneratingWorld args => Reducers.InvokeStartGeneratingWorld(eventContext, args),
                Reducer.StartOnboardingQuest args => Reducers.InvokeStartOnboardingQuest(eventContext, args),
                Reducer.StarvingAgentLoop args => Reducers.InvokeStarvingAgentLoop(eventContext, args),
                Reducer.StopAgents args => Reducers.InvokeStopAgents(eventContext, args),
                Reducer.SynchronizeTime args => Reducers.InvokeSynchronizeTime(eventContext, args),
                Reducer.TargetUpdate args => Reducers.InvokeTargetUpdate(eventContext, args),
                Reducer.TeleportationEnergyRegenAgentLoop args => Reducers.InvokeTeleportationEnergyRegenAgentLoop(eventContext, args),
                Reducer.Terraform args => Reducers.InvokeTerraform(eventContext, args),
                Reducer.TerraformCancel args => Reducers.InvokeTerraformCancel(eventContext, args),
                Reducer.TerraformSetFinalTarget args => Reducers.InvokeTerraformSetFinalTarget(eventContext, args),
                Reducer.TerraformStart args => Reducers.InvokeTerraformStart(eventContext, args),
                Reducer.TradeAccept args => Reducers.InvokeTradeAccept(eventContext, args),
                Reducer.TradeAcceptSession args => Reducers.InvokeTradeAcceptSession(eventContext, args),
                Reducer.TradeAddItem args => Reducers.InvokeTradeAddItem(eventContext, args),
                Reducer.TradeCancelServer args => Reducers.InvokeTradeCancelServer(eventContext, args),
                Reducer.TradeDecline args => Reducers.InvokeTradeDecline(eventContext, args),
                Reducer.TradeDeclineSession args => Reducers.InvokeTradeDeclineSession(eventContext, args),
                Reducer.TradeInitiateSession args => Reducers.InvokeTradeInitiateSession(eventContext, args),
                Reducer.TradeRemoveItem args => Reducers.InvokeTradeRemoveItem(eventContext, args),
                Reducer.TradeSessionsAgentLoop args => Reducers.InvokeTradeSessionsAgentLoop(eventContext, args),
                Reducer.TradeSwapPockets args => Reducers.InvokeTradeSwapPockets(eventContext, args),
                Reducer.TransferPlayerDelayed args => Reducers.InvokeTransferPlayerDelayed(eventContext, args),
                Reducer.TravelerTaskAgentLoop args => Reducers.InvokeTravelerTaskAgentLoop(eventContext, args),
                Reducer.UpdateScheduledTimersFromStaticData args => Reducers.InvokeUpdateScheduledTimersFromStaticData(eventContext, args),
                _ => throw new ArgumentOutOfRangeException("Reducer", $"Unknown reducer {reducer}")
            };
        }

        public SubscriptionBuilder SubscriptionBuilder() => new(this);
        public event Action<ReducerEventContext, Exception> OnUnhandledReducerError
        {
            add => Reducers.InternalOnUnhandledReducerError += value;
            remove => Reducers.InternalOnUnhandledReducerError -= value;
        }
    }
}
